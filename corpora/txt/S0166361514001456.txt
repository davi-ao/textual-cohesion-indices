In the new competitive and dynamic global market, industrial enterprises are establishing partnerships by creating new business models and are using Internet technologies and standards as tools to provide an infrastructure to connect their information systems. In such complex emerging networked enterprises, to achieve the interoperability between information systems is a challenging task. Three levels of interoperability have been highlighted: technical, semantic, and organizational [1]. In order to solve the interoperability problem at semantic level, several approaches based on the use of ontologies have been proposed [2], [3], [4], [5].
Although methodologies, methods, techniques, and software tools to support the ontology building process were proposed, ontology evaluation still plays only a passive role in ontology engineering projects [6]. In order to assess the ontology quality, different works have emerged depending on the kind of ontologies being evaluated and for what purpose [7], [8], [9], [10], [11], [12]. Regarding the purpose, some approaches intend to rank ontologies and others offer information about the strengths and weaknesses of the ontologies. The present work goes in the latter direction, similar to approach OQuaRE [13].
OQuaRE is a framework for ontology quality assessment based on the SQuaRE standard for software quality evaluation [13]. To this aim, ontologies are considered as software artifacts. The framework includes the quality model and the quality measures, although the usage of SQuaRE requires also the definition of quality requirements and quality evaluation. The quality model is comprised of a set of quality characteristics: reliability, operability, maintainability, compatibility, transferability, and functional adequacy. Structural features of ontologies, not considered in the standard, were added to the framework. Each characteristic has a series of subcharacteristics associated. The quality subcharacteristics have measures associated; some of them were adapted from Object-Oriented Programming measures and others from those developed by the ontology engineering community, especially for structural properties.
While OQuaRE can be seen as a step toward standardization of the ontology evaluation process, an important issue is not considered. An ontology whose purpose is the interchange of information between different contexts represents semantics of information interchanged. Quality is not a property of something, but a judgment, so that should be in relation to some purpose [9]. Trying to evaluate the quality of an ontology without considering its intended uses is meaningless. The set of characteristics, sub-characteristics, measures, and the corresponding weights should be in relation with the purpose of the ontology.
This paper presents the OntoQualitas framework for evaluating the quality of an ontology whose purpose is the interchange of information between different contexts. OntoQualitas includes previous measures and new measures proposed to evaluate the ontology considering its specific purpose.
The paper is organized as follows: Section 2 discusses the ontology properties for information interchange. Section 3 presents a framework for ontology quality assessment in information interchange. Section 4 presents an empirical validation of the framework. Finally, Section 5 is devoted to conclusions.
The evolution of information systems and communication technologies has been leading to the implementation of Peer-to-Peer communication models between heterogeneous information systems [14]. This communication model allows maintaining some forms of peer privacy and autonomy, whence, they may use different terminologies and metadata models even if they refer to the same domain [15]. Thus, in order to interchange information between information systems, ontologies are used to define the semantics of the information to be shared.
Two ontologies belonging to the same domain could present differences in their naming conventions, structure, and/or in the representation way [16]. This implies a new challenge: how to allow the interoperability between heterogeneous ontologies, each one representing an information source, to guarantee semantic interoperability between information systems that interchange information between these sources.
Ontology-matching is a plausible solution to allow the interoperability between heterogeneous ontologies [15], [16], [17]. It aims at finding correspondences between semantically related entities of different ontologies. However, there are certain conflicts that ontology-matching techniques are unable to solve such as how entities represented in ontologies are interpreted. For example, if the entity Product appears in an ontology of a packaging industry, it should not be concluded that it is equivalent to the entity Product in an ontology of a dairy industry. Associated with each of these entities is an intended use of the entity, generally missing in its representation. When ontologies are developed without this consideration, it is impossible for the matching process to detect if those entities are equivalent or not. In these cases, conflicts are related to incomplete representations in ontologies to be matched. Then, in information systems interchanging information the representation of the real meaning of shared entities is crucial, and quality evaluations of the implemented ontologies are needed.
The quality of an ontology whose purpose is the interchange of information between heterogeneous systems can be measured by its capabilities to (i) provide a formal representation of the interchanged information, and (ii) meet information systems requirements.
In this work, ontologies formalized in OWL 2 [18] are considered for the purpose of describing the evaluation measures. The term class refers to both primitive class and defined class, except where indicated otherwise.
Ontology evaluation methodologies provide a framework for defining appropriate methods for evaluating ontologies [19]. OntoClean [20], OntoMetric [21], and ROMEO [19] are the most recognized. The OntoClean methodology focuses on evaluating the subsumption relation between classes in an ontology, whereas OntoMetric methodology focuses on selecting an ontology based on a manual specification of the importance of ontology aspects. Different from them, the ROMEO methodology allows evaluating many aspects of an ontology based on the purpose for which that ontology has been designed.
OntoQualitas, built following the ROMEO methodology, allows evaluating an ontology whose purpose is to support the information interchange between different contexts. Initially, the ontology roles, which specify the way the ontology is used, and the set of ontology requirements, which specify the ontology qualities, were defined.
In order to attend the ontology role, in this paper the requirements defined for data integration [22] were specialized. In addition, other requirements, based on several previous studies [3], [23], [24], [25], were incorporated with the aim of making explicit all the needed aspects to avoid ambiguity and limit the ontology contents to the purpose.
Table 1 shows the role and requirements defined in OntoQualitas.
For each ontology requirement identified, one or more questions were specified. A question reflects a specific quality or aspect relevant for ontology evaluation. For each question, appropriate quantifiable measures, able to sufficiently answer it, were selected.
Questions (Q) specified to evaluate how the information interchanged is formally represented are:Q1.1:Is the language in which the ontology is implemented machine-readable?One issue that a peer has to face is how to access the information interchanged with other peers [26]. Since this interchange is made between heterogeneous information systems, the ontologies used to define the semantics of the information interchanged must be implemented in a machine executable and machine interpretable language.Q1.2:Does the language allow the representation of entities, their relations and features?The purpose of this question is to answer if the language has elements that permit to adequately represent the semantics of the information interchanged.Q1.3:Does the language allow making inferences?This question allows knowing if useful inferences can be drawn with the language.
Table 2 shows the measures selected for evaluating the questions formulated for OR1.
Questions specified to evaluate if the information represented is strictly necessary are:Q2.1:Does the ontology contain all the information necessary for the interchange?This question helps to explore the completeness aspect of requirement OR2. Completeness refers to the extension, degree, amount or coverage to which the information in a user-independent ontology covers the information of the real world [27]. Completeness depends on the level of granularity agreed. An ontology is complete if and only if all that is supposed to be in the ontology is explicitly set out in it, or can be inferred from axioms.
Question Q2.1 was subdivided as follows:Q2.1.1:Is each leaf class defined by necessary and sufficient conditions?A class that only has necessary conditions is known as a primitive class. A class that has at least one set of necessary and sufficient conditions is known as a defined class [28]. Primitive classes are usually found near the top of a generalization hierarchy and defined classes typically appear when descend into a hierarchy by specializing general classes with various restrictions.
Additionally, when describing a class, a universal restriction along a given property should be used with the corresponding existential restriction along the same property.Q2.1.2:Are the domain and range of the relations and functions exactly and precisely delimited?Q2.1.3:Is there subclass-partitions defined on classes without the corresponding disjoint constraint over the subclasses sets?Q2.1.4:Is there disjoint subclass-partitions defined on classes without the corresponding covering axioms over the covered classes?Q2.1.5:Does the ontology have entities, relations, or instances missing with regards to the information to be interchanged?Q2.1.6:Does the ontology have features of an entity missing that may be inferred in wrong way in other contexts different from the considered context?Q2.1.7:Are the dimensions used to specify contextual features the same regardless of the context in which the features are considered? Are they represented in the ontology?
Table 3 shows the measures selected for evaluating questions Q2.1 formulated for OR2.Q2.2:Does the ontology contain only the information necessary for the interchange?This question helps to explore the conciseness aspect of requirement OR2. An ontology is concise if it does not store any unnecessary or useless definitions, if explicit redundancies do not exist between definitions, and redundancies cannot be inferred using other definitions and axioms [27]. A concise ontology maps to an ontology that has high precision regarding to the information to be interchanged, that is, it does not model entities, instances, and relations outside of the information to be interchanged [19]. However, conciseness doesn’t imply absence of redundancies. In information interchange between heterogeneous information systems that belong to different contexts, some degree of controlled redundancy is necessary in order to represent the possible uses of entities, since these uses depend on the context in which the entities are considered.
Question Q2.2 was subdivided as follows:Q2.2.1:How many identical entities or instances are modeled using different names?Q2.2.2How many redundant relations are found in the ontology?Q2.2.3Does the ontology model entities, relations, features, or instances outside of the needed for the information interchange?
Table 4 shows the measures selected for evaluating questions Q2.2 formulated for OR2.
From the OR3 requirement, five main design principles were proposed for enriching the representation of the interchanged information and avoiding misunderstandings [25]. These design principles (DP) and ontology requirements (OR) derived from them are:DP1.An entity must be represented by a class. In this case, only universals are considered as entity, i.e., sets that contain individuals.OR3.1: Ensuring the representation of a universal entity is made by a class.DP2.Each intended use of an entity must be represented by a class, called bridge, which allows linking meanings and representations of an entity in different contexts. This allows representing the possible uses of entities that depend on the context in which entities are considered, thus avoiding confounding conflicts [22].OR3.2: Ensuring the representation of each intended use of an entity is made by a bridge class.DP3.A relation between entities must be represented by an object property between the classes representing these entities.OR3.3: Ensuring the representation of a relation between entities is made by an object property between the classes representing these entities.DP4.An entity feature that can be considered an entity in itself must be represented by a class, making explicit the context of its value and value scaling where appropriate [22]. There are three cases.DP4.1:A simple entity feature is a quality that does not bear other qualities, and it is associated with a one-dimensional representation [30]. Thus, a simple feature must be represented by: • A class representing the dimension (the set of possible values). • An object property between this class and that representing the simple feature.OR3.4: Ensuring the representation of a simple entity feature is correct.DP4.2:A simple, measurable entity feature has an associated measurement unit that affects its dimension granularity but not its structure. In turn, measurement unit is associated with a physical dimension. Thus, a simple, measurable feature must be represented by: • A class representing the dimension. • An object property between this class and that representing the simple feature. • A class representing the measurement unit of the dimension. • An object property between this class and that representing the dimension. • A class representing the physical dimension of the measurement unit. • An object property between this class and that representing the measurement unit.OR3.5: Ensuring the representation of a simple, measurable entity feature is correct.DP4.3:A complex entity feature is a quality that bears other qualities, and it is associated with a set of integral dimensions that are separable from all other dimensions [30]. An integral dimension is one in which for assigning a value to an object on one dimension, it is necessary giving it a value on other dimensions. Thus, a complex feature must be represented by: • A class representing the set of integral dimensions. • An object property between this class and that representing the entity. • For each integral dimension, a class representing it and an object property between it and that representing the set of integral dimensions. • For each class representing a measurable, integral dimension, there must be: a class representing the measurement unit of the integral dimension; an object property between this class and that representing the measurable integral dimension; a class representing the physical dimension of the measurement unit; and an object property between this class and that representing the measurement unit.Additionally, class expressions of existence, cardinality, and closure must be added to ensure that the set of integral dimensions is made by the corresponding integral dimensions. Another class axiom to be defined is one requiring that the integral dimensions must be disjoint.OR3.6: Ensuring the representation of a complex entity feature is correct.DP5.An entity feature that cannot be considered an entity in itself must be represented by a data property.OR3.7: Ensuring the representation of an entity feature that can not be considered an entity in itself is made by a data property.
Questions specified to evaluate if the information interchanged is correctly interpreted in all contexts involved (OR3) are:Q3.1:Is the ontology syntactically correct? Can a computer read the ontology?Answer to this question tries to evaluate the quality of the ontology according to the way it is written. When the ontology development is supported by a case tool, the syntactic correctness is richness and complexity of syntax rather than correctness, since the case tool should be able to detect syntactically incorrect structure, wrong keywords in definitions, loops between definitions, and so on. However, when the ontology editor doesn’t have error-checking capabilities, lawfulness should be considered [8].
Question Q3.1 was subdivided as follows:Q3.1.1:Have the language's rules been complied?Q3.1.2:What proportion of features in the ontology language has been used?
Table 5 shows the measures selected for evaluating questions Q3.1 formulated for OR3.Q3.2:Can a computer understand the ontology?This question deals with the vocabulary used to represent entities, relations, and features, and the correctness of the representation of the interchanged information in the ontology.
Question Q3.2 was subdivided as follows:Q3.2.1:Will the terms used in the ontology have meaning?The objective of this question is to state the interpretability of terms. The knowledge provided by the ontology should map into meaningful concepts in the real world [8].Q3.2.2:Is the context of terms used in the ontology clear?This question refers to a criterion of having no ambiguous terms used in an ontology.Q3.2.3:Is the ontology consistent?Consistency refers to whether it is possible to obtain contradictory conclusions from valid input definitions. A given definition is consistent if and only if the individual definition is consistent and no contradictory sentences can be inferred using other definitions and axioms [27].
Table 6 shows the measures selected for evaluating questions Q3.2 formulated for OR3.
The correctness of the representation of the interchanged information has to do with satisfying requirements OR3.1 to OR3.7. To this aim, questions to evaluate the quality of mappings of entities, relations, and features into the elements of the ontology were specified.Q3.2.4:Does the ontology include a class for the representation of each universal entity?Q3.2.5:Does the ontology include a bridge class for the representation of each intended use of an entity?Q3.2.6:Does the ontology include an object property for the representation of each relation between entities?Q3.2.7:Does the ontology include all the elements required for the representation of a simple entity feature?Q3.2.8:Does the ontology include all the elements required for the representation of a simple, measurable entity feature?Q3.2.9:Does the ontology include all the elements required for the representation of a complex entity feature?Q3.2.10:Does the ontology include all the elements required for the representation of an entity feature that can not be considered an entity in itself?
Considering a correct representation the one that meet the corresponding principle, and a weight vector, it is proposed to calculate the indicators for the aforementioned principles as defined in Table 7. The α values were defined as: αk = 0 if the k element is not represented; αk = 0.5 if the k element is represented in an incomplete form; and αk = 1 if the k element is well represented.Q3.3:Is the ontology useful?This question relates to the ontology usefulness for heterogeneous information systems involved in the information interchange, regardless of syntax or semantics. Each system has to apply an ontology-matching process between the ontology used to the information interchange and its own ontologies. The found correspondences between semantically related entities of different ontologies should be assessed in order to respond on the usefulness of the ontology used for the interchange.
Table 8 shows the measures selected for evaluating question Q3.3 formulated for OR3.
This section presents results of an empirical study in order to determinate: suitability of measures to questions, how questions influence ontology qualities, and how ontology qualities influence the quality of an ontology for information interchange between information systems belonging to different contexts. The case study is based on a collaborative relationship between a packaging industry called Dairy Packaging that provides packaging to a dairy industry called DairyNY Cooperative. Information the Business Process Management system of each enterprise needs to perform cross-organizational processes is interchanged through Electronic Business Documents. More details about the case study can be found in [25].
In Peer-to-Peer communication models, enterprises interchange Electronic Business Documents (EBD) to perform cross-organizational processes. EBDs are XML-based standard documents where semantics of information included in them can be defined through ontologies (EBDO). Business processes of each enterprise have to be aligned for achieving semantic interoperability. This requires finding correspondences between the business ontology of each enterprise and the EBDO [25]. These correspondences are obtained by performing an ontology matching process. This process has to deal with heterogeneities caused by both different terminology and knowledge structures, and different contexts in which entities are considered. Then, the quality of the matching process is affected by the quality of the input ontologies.
Consider two ontologies, EBDObase (Fig. 1) and EBDOenriched (Fig. 2), which differ in the set of classes, relations, and axioms that use to represent entities stored in an EBD. The EBDOenriched was obtained from the EBDObase after applying an enriching process [25]. Consider also a third ontology EBDOdairy (Fig. 3) that represents entities of a dairy industry.
AgreementMaker [32] tool was used to calculate the matching between EBDObase and EBDOdairy, and between EBDOenriched and EBDOdairy. Measure values for EBDObase and EBDOenriched according to framework OntoQualitas are summarized in Table 6, Table 7, Table 8, Table 9, Table 10, Table 11, Table 12.
Alignmentenriched-dairy refers to the result of the matching process between the EBDOenriched and the EBDOdairy. In order to calculate IE and CI, the Alignmentbase-dairy, which refers to the result of the matching process between the EBDObase and the EBDOdairy, was considered as the reference alignment.
Analyzing results summarized in Table 9, Table 10, Table 11, Table 12, Table 13, Table 14, Table 15, it can be concluded that the quality of the matching process between EBDOenriched and EBDOdairy was improved regards to the matching between EBDObase and EBDOdairy. This allowed verifying the hypothesis of the empirical study, which states that the quality of the matching process is affected by the quality of the input ontologies. That is, the enriched ontology improves the matching.
Regarding results, some peculiarities should be analyzed:Q2.1.2:DRR = 0.89 due to EBDOenriched imports ontologies of country codes ISO 3166 [33] and OWL-Time [34]. OWL-Time has 28 object properties, but only 21 of them have domain and range. This is the reason why the value of measure DRR < 1.Q2.1.4:ESPO = 0.33 due to EBDObase has not disjoint classes and subclasses (CDSC = 0), then CNCA = 0 and ESPO = 0. Ontology of country codes has CDSC = 1 and has not closure axiom. OWL-Time has 2 disjunctions among classes with multiple parents, none of which has the status of closing because they have other children who do not share the same parents.Q3.2.1:I = 0.93. However, it must be considered that EBDOenriched imports ontologies of country codes and OWL-Time, and of the 7 words without meaning in WordNet, only one belongs to EBDOenriched. Considering only EBDOenriched elements, regardless imported elements, the interpretation measure of this ontology is I = 0.97, leading to the conclusion that EBDOenriched is more interpretable than EBDObase.Q3.2.2:EBDOenriched is clearer than EBDObase (the closer to 1 is the CL value, the clearer the ontology). An issue of this measure is that compound nouns are unregistered in WordNet, which produces a distortion of its value, since ontologies use compound nouns for naming both terms and properties.
Based on a top-down approach, framework OntoQualitas proposes evaluation measures for an ontology used for information interchanges. Measures answer questions that help to explore the various aspects of requirements, which contribute to the ontology quality. A requirement is considered to be satisfied when its associated questions are answered and the answers are in a specified range.
OntoQualitas is intended to provide information about the strengths and weaknesses of the ontology, and not to get an overall score. It is therefore not considered the possibility of assigning weights to measures.
In regard to software product quality, SQuaRE [35] addresses software product quality in three principal phases of software product life cycle: product under development (internal software quality), product in operation (external software quality), and product in use (quality in use). OntoQualitas covers the first and the last category, since it addresses static attributes of an ontology, such as the size or the compliance with the coding rules, and the capability of the ontology to enable heterogeneous information systems to achieve the information interchange without misunderstandings.
Regarding question Q3.1, the calculation of syntactic correctness, measures of relations richness (RR) and attribute richness (AR) [12] could be useful. However, regarding to the AR it is assumed that the more data properties are defined the more knowledge the ontology conveys [12]. This assumption is relative. There are approaches, such as [25], that reserve the use of data properties to the representation of non-measurable features that cannot be considered entities in themselves. Other features can be represented by means of a set of classes, object properties, and axioms. This fact does not imply that the ontology conveys less knowledge. Optimal values of RR and AR have to be empirically derived based on the information to be interchanged. Exploratory experiments will be conducted to study these optimal values.
Regarding question Q3.2.2, the calculation of the Clarity measure should be improved. An alternative would be to apply a similar strategy to that used by [36] to handle compound nouns. This question will be analyzed in future work.
In Peer-to-Peer communication models between heterogeneous information systems, an autonomous peer can manage simultaneous relations with different peers. In this situation, it is also important to evaluate the ability of an ontology used to interchange information with a given peer as to adapt to changes in order to be used in another relation. To this aim, the ontology should be able to be extended further to describe more fine-grain concepts and relations. This could be defined as requirement OR4: Ontology expandable. Regarding this requirement, the following question could be formulated: Do the set of entities defined allow for future definitions of subclasses? Measures for answer this question will be analyzed in future work.
In this paper, measures for complexity of ontology, such as width and depth, were not considered because they are not relevant for the information interchange, at least as they are actually defined. In the future, the desirability of developing measures to evaluate this aspect of the ontology will be assessed.
The five main design principles proposed for enriching the representation of the interchanged information (EBDOenriched) allowed improving the quality of the matching process between dairy industry and EBDOenriched. In this way, the enrichment process seems to deal with heterogeneities caused by both different terminology and knowledge structures, and different contexts in which entities are considered. Experimental researches will be conducted to study this hypothesis.
The authors are grateful to UTN, CONICET, and ANPCyT for their financial support.