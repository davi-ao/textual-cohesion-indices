Complex reaction networks are at the core of numerous chemical and biochemical systems (Broadbelt & Pfaendtner, 2005); examples include pyrolysis (Froment et al., 1976, Mohan et al., 2006) and acid-catalyzed (Corma et al., 2008, Yaluris et al., 1997) conversion of hydrocarbons or oxygenates, and biochemical networks such as glycolysis in Saccharomyces cerevisiae (Rizzi, Baltes, Theobald, & Reuss, 1997) and genome-scale models of Escherichia coli (Reed, Vo, Schilling, & Palsson, 2003). Such networks are also extensively prevalent in industrial reaction systems, particularly in petroleum refining, as the crude oil feed is a mixture of many compounds and a multitude of chemical transformations can potentially take place (Ho, 2008, Quann and Jaffe, 1996). Despite the large size, the reaction networks can be constructed from a relatively smaller set of chemical transformation rules. Automated network generators have been developed to construct such networks from initial reactants and pre-specified reaction rules.
Kinetic modeling is a common application of automated network generation, wherein the appropriate differential algebraic system of equations that captures the dynamics of the system is formulated. The model is then solved with kinetic parameters estimated, predicted, or specified, to obtain product yield information (Cortright & Dumesic, 2001). Network generation in conjunction with kinetic modeling has been extensively applied for hydrocarbon (Broadbelt et al., 1994a, Van Geem et al., 2006) and biochemical systems (Faeder et al., 2003). Complex reaction networks, however, have also been analyzed for: (a) deriving topological properties such as average path length of the network (Arita, 2003, Arita, 2004), (b) identifying synthetic/degradation pathways (Gonzalez-Lergier, Broadbelt, & Hatzimanikatis, 2005), and (c) deriving and testing plausible mechanisms and overall rate expressions (Fan et al., 2002, Fishtik et al., 2004, Lin et al., 2009). The use of additional thermodynamic data in conjunction with the reaction network has further enabled quantitative analysis of networks in terms of: (a) generating thermodynamically meaningful flux distributions in biochemical systems (Henry, Broadbelt, & Hatzimanikatis, 2007), (b) extracting functional information such as regulatory sites in biological systems (Kummel, Panke, & Heinemann, 2006), and (c) identifying thermodynamically feasible synthesis routes (Li et al., 2004) to form chemicals, or biological degradation pathways (Finley, Broadbelt, & Hatzimanikatis, 2009) to decompose molecules.
All these examples require a constructed network as the first step and graph theoretical analysis of the network in subsequent steps; hence, an automated network generator can be used to construct a complex network prior to network analysis. In this context, we have developed a new computational tool, Rule Input Network Generator, or RING (Rangarajan, Bhan, & Daoutidis, 2010), for network generation and analysis of complex thermochemical reaction systems. RING takes initial reactants, chemistry rules and network analysis instructions as inputs written in a domain specific English-like reaction language. RING then generates an exhaustive network of reactions and analyzes the network in a post-processing step to obtain: (a) lumps of isomeric chemical species in the network, (b) reaction pathways from reactants to products, and (c) mechanisms that describe the overall chemical transformation of the initial reactants to specified products. RING is available open source (RING, 2011) under GNU Lesser GPL.
In our previous work (Rangarajan et al., 2010), the reaction generation feature in RING was introduced briefly and its application to biomass conversion was illustrated through four relevant reaction systems as examples. We have subsequently developed a domain specific English-like extensible reaction language as a user interface and a post-processing module, as discussed above. In this article, the first of a two-part series, we discuss all features of RING with illustrative examples. Applications of RING in complex network analysis of catalytic systems are discussed in the second part.
Rule-based automated reaction network generators are computational tools that take in a set of molecules as reactants, and iteratively apply a set of reaction rules, to construct a comprehensive list of possible reactions. Network generators have been developed and applied in different fields such as pyrolysis and oxidation, catalysis, and biological systems. Table 1 lists and describes several of them. All automated network generators have five common and essential features (Tomlin et al., 1997, chap. 4). First, an unambiguous representation is required for molecules and reactions. This is usually represented as character strings for input and output (Broadbelt et al., 1994a, Prickett and Mavrovouniotis, 1997a, Ratkiewicz and Truong, 2003). Second, an internal representation of molecules is required, such as molecular trees, adjacency matrices, or chemical graphs, thereby enabling quick structure manipulation. Adjacency matrices are the most common representation format owing to their simplicity. An adjacency matrix ‘M’ of a molecule is a square matrix containing connectivity and bond order information between every two atoms. Thus, M(i,j) = 0 implies that the ith and jth atoms are not connected while a positive nonzero value would indicate the strength of the bond (1 is a single bond, 2 is a double bond, etc.). The diagonal values indicate the number of unpaired electrons in the atoms. Third, an internal representation of reaction rules that can be applied iteratively on the molecules is required. A common representation scheme is to employ a matrix for reaction rules. Proposed initially by Dugundji and Ugi (Dugundji & Ugi, 1973, also Ugi et al., 1993) and later used in other tools such as NETGEN (Broadbelt et al., 1994a), the reaction matrix describes the transformations for an adjacency matrix representation of molecules. The reaction matrix is structured similarly, with off-diagonal values representing bond changes and diagonal entries representing changes in unpaired electron count. Further, positive/negative values indicate increase/decrease in bond order, bond formation/cleavage, or increase/decrease in unpaired electrons of the atom. Baltanas and Froment (1985) used a Boolean matrix to represent molecules for generation of networks for modeling paraffin cracking and isomerization on bifunctional catalysts. The Boolean matrix is similar to the adjacency matrix; however, bonds of a higher order (e.g. double bonds) and information on charges (such as +1 for carbenium ions) are stored separately. This method, therefore, is similar to that of Dugundji and Ugi (1973). Transformations in RDL (Prickett & Mavrovouniotis, 1997a) and RDL++ (Hsu et al., 2008), on the other hand, are input by the user as English-language-like statements describing changes in the charge/bonding of atoms participating in the reaction rule which get directly applied on the internal graph description of molecules. Fourth, all network generators have a generation scheme that iteratively applies the reaction rules to all input and generated molecules so that the resultant network is exhaustive. The scheme should ensure that all possible reactions of a given set of reactants are generated corresponding to that reaction rule. Faulon and Sault (2001) describe such a generation scheme as deterministic network generation.
Combinatorial explosion is an important practical problem that can significantly increase execution time and lead to a large proportion of unimportant or improbable reactions. The fifth essential feature of most network generation tools, therefore, is to employ a systematic procedure to curtail this effect. When kinetic parameters are available a priori, quantitative estimates of the magnitude of the reaction rates allows for the identification of ‘important’/‘unimportant’ reactions and species that should be included in, or excluded from, the network. For example, the tool NETGEN adopts rate-based (Susnow et al., 1997) network pruning criteria. This requires generation and kinetic modeling in concurrence because the rates calculated on-the-fly are used to determine if a particular species will react further. In the absence of such kinetic information, either topological or experts-based constraints can be provided. For example, species rank-based criteria (Broadbelt et al., 1995) network pruning criteria prevents reactions that involve species of ranks greater than a specified value, while the tools RDL (Prickett & Mavrovouniotis, 1997a) and RDL++ (Hsu et al., 2008) allow for the specification of constraints that molecules should satisfy to undergo a particular transformation. Faulon and Sault (2001) propose stochastic (or sampling) network generation algorithms, in contrast to the deterministic scheme, for concurrent generation and reduction of networks. These algorithms scale in polynomial time but require on-the-fly estimation of rate constants which is achieved, in their case, through quantitative structure property relationships for free-radical chemistries.
The transformations occurring on a compound to form various products can be obtained by finding: (a) a sequence of reactions that describe how the reactant gets converted into an intermediate, which could further react, and ultimately form the final product, and (b) a set of reactions that when taken together leads to an overall reaction without the net generation/consumption of any unstable reactive intermediate. The former represents “a pathway” from the initial reactant to the final product while the latter is a “mechanism” with a balanced overall stoichiometry. A direct mechanism is the minimal set of reactions that has zero net consumption/formation of reactive intermediates (Millner, 1964); minimality ensures that no nonzero subset of this set is also a mechanism. Direct mechanisms, thus, are conceptually similar to reaction cycles. An overall (or complete) mechanism, further, is a set of direct mechanisms so that the reactants of the overall reaction are all initial reactants, and the desired target molecule is one of the products. Overall mechanisms, thus, are conceptually similar to a set of reaction cycles that operate simultaneously in a reaction system to convert the initial reactant to final products.
Identifying pathways between two species in a network has wide applications in biological network analysis, and algorithms with/without tracking of individual atoms have been proposed for both weighted and unweighted networks (Croes et al., 2006, Heath et al., 2010). Given a list of reactions, algorithms have been proposed for identifying possible direct mechanisms using either combinatorial (Mavrovouniotis and Stephanopolous, 1992, Otarod and Happel, 1992) or graph theoretic methods (Fan et al., 2002, Lin et al., 2009).
A concept closely related to that of mechanisms is the linear-algebra-based flux analysis wherein all possible independent basis set of solution vectors that solve the stoichiometric steady-state mass balance equations are identified (Papin et al., 2004). Two commonly applied flux analysis techniques in systems biology are extreme pathways (Schilling, Letscher, & Palsson, 2000) and elementary flux modes (Schuster et al., 1994).
RING builds on and extends the network generators listed in Table 1 in two major aspects. First, RING provides a generic scope by allowing for representing intermediates and describing reaction rules applicable to most organic chemical transformations. Second, RING allows for topological network analysis through identification of pathways and mechanisms in the generated network. Fig. 1 shows the input–output structure of RING as well as the three internal modules – a language compiler, a reaction network generator, and a post-processing module.
The compiler acts as an interface between the user and network generation and post-processing components of RING by translating the inputs into relevant instructions used internally by the network generator. The inputs into RING are written as a program in an English-like reaction language and include the initial reactants, reaction rules, and set of post-processing instructions.
The utility of a language interface in network generation was demonstrated in RDL (Prickett & Mavrovouniotis, 1997a) and RDL++ (Hsu et al., 2008). The syntax of the language closely resembles chemistry parlance so that debugging a program written in the language essentially involves proofreading. RING's language interface has been developed using SILVER, an attribute grammar specification language (Van Wyk, Bodin, Gao, & Krishnan, 2010). In addition to providing an interface like in RDL++, the language, as discussed in detail in Rangarajan, Bhan, and Daoutidis (in press), can: (a) catch chemistry-specific inconsistencies as well as syntactical errors, (b) improve speed of execution through domain-specific optimization of input instructions, and (c) allow for independent extensions in terms of syntax and semantics to the original grammar.
The information on initial reactants and the translated reaction rules is used by the network generator to construct the reaction network by iterative application of the rules upon the initial reactants and the products generated thereof. The output from the network generator is a list of all possible species and reactions consistent with the rules specified. Several Cheminformatics algorithms to manipulate the chemical information of a molecule, extract topological information of molecules, and generate reactions have been adopted in RING. Further, standard Cheminformatics formats to input, represent, store, and retrieve the chemical information pertaining to molecules, such as elemental composition, valency, charge, bonding, and electronic information have also been used.
Specific information regarding the constituents of/transformations within the network can be “mined” from the generated reaction network using the several post-processing options available in RING. For example, the generated reaction network may be large enough to preclude manual analysis to obtain specific information such as whether and how a particular molecule (or a class of molecules) is (are) formed. Such queries can be input in the form of instructions, or “rules”, specifying the analysis that is sought.
Complex reaction networks can be composed of several species that are structural isomers of each other. If these similar species are grouped together into lumps, the total network size can be reduced significantly. For example, Hsu et al. (2008) showed for acid-catalyzed aromatization of propane that the number of reactions without lumping structural isomers was more than a million while structural lumping resulted in only 605 distinct reactions. Analytical identification of lumps of molecules, instead of individual species, is a more feasible option when the number of species in a system is large (Quann & Jaffe, 1996) because of experimental difficulties in distinguishing between isomers. Furthermore, lumping can lead to a reduced network that can be used to formulate a simplified lower-dimensional mathematical model that is easier to solve. Lumping strategies have been proposed in hydrocarbon processing wherein, a lump is represented either by a single likely structure and reactions are written on that basis (Quann & Jaffe, 1992), or as a mixture with an estimated internal distribution and an overall reaction computed on the basis of composition and kinetics information (Ranzi, Dente, Goldaniga, Bozzano, & Faravelli, 2001). In contrast to these methods, lumping methods for dimension reduction in kinetic models through mathematical transformations have also been proposed (Kuo and Wei, 1969, Li and Rabitz, 1989, a brief review in Ho, 2008).
Lumping instructions, as an input feature is not available in the tools listed in Table 1, though RDL++ (Hsu et al., 2008) can group together hydrocarbons in a post-processing step. In RING, however, a generic lumping scheme, that identifies functional equivalence between isomers, has been implemented. In general, two molecules can be lumped only when there is a one-to-one mapping between their atoms; mapping in this case exists when the two atoms belong to the same functional group. Such functional equivalence cannot be inferred from molecular formula and structure alone for non-hydrocarbon molecules such as oxygenates. We have, therefore, developed a new lumping algorithm that takes into consideration the environment of each atom in a molecule to decide the lump it belongs to. For example, ethanol (CH3CH2OH) and dimethyl ether (CH3OCH3) both have the same molecular formula; however, they have different functional groups. Ethanol has a C–OH group that the ether does not possess; hence, there is no one-to-one mapping between the oxygen atom of ethanol and the ether. Therefore, the two molecules are not lumped. On the other hand, 2-pentanol and 3-pentanol are both functionally equivalent (S2 in Supplementary material) are lumped together as secondary five-carbon alcohols. 1-Pentanol, being a primary alcohol, will naturally not be a constituent of this lump.
RING can identify pathways to user-specified molecules from initial reactants that satisfy user-specified constraints on the nature of pathways (maximum length, presence/absence of reactions in the pathway, etc.). A reverse depth-first network traversal algorithm (Rangarajan et al., in press) is used to identify all possible pathways exhaustively.
In RING, all overall mechanisms from the initial reactants to user-specified products can be identified. Further, all direct mechanisms forming any specified molecule can also be found. The algorithms of Mavrovouniotis and Stephanopoulos (1992) and Fan et al. (2002) identify all possible direct mechanisms from a given list of reactions. Since mechanisms are only sought for specified products, these two algorithms cannot be directly used within RING. An adapted version of the pathways algorithm is instead used that seeks only the relevant direct or overall mechanisms.
Inputs into RING are: (a) initial reactants, (b) global constraints, (c) reaction rules, and (d) post-processing instructions describing the desired analyses of the network. The outputs from RING are lists of: (a) species, (b) reactions, (c) lumps and their constituents, (d) pathways to specified products, (e) mechanisms to specified products, and (f) species or reactions extracted from the network from a molecule or reaction query. In this section, the inputs into and outputs from RING are discussed in the context of an example – dehydration of fructose to form HMF. The system is typically carried out in aqueous phase and is catalyzed by mineral acids (Antal, Mok, & Richards, 1990). An illustrative program for this system is shown in Table 2.
Initial reactants are represented as SMILES-like strings (Weininger, 1988). Lines 1 and 2 in Table 2 describe the reactants for the Fructose-to-HMF system (Fructofuranose and proton to represent the acid), written in SMILES. A SMILES parser has been developed for RING which recognizes the elements C, H, N, O, S, and P. On many occasions, inorganic atoms such as Al, Cu, Pt, etc. are involved in chemical transformations, for example, as active sites (catalysts, ligands) or as reagents (electrophiles, nucleophiles, etc.) in substitution reactions, and have to be represented and manipulated during reaction generation. To this end, a new feature, composite atoms, has been added to represent a miscellaneous group of atoms as a single atom for convenience in representation and manipulation. A composite atom, within RING, is a user-defined entity used to represent: (a) an atom other than the recognized elements or (b) a group of atoms considered together as a “unified atom”. These atoms are represented as alphanumeric strings enclosed within curly braces, for example, Platinum atoms can be represented as ‘{Pt}’. The name given to a composite atom is arbitrary and does not have to be an element name. For example, two different types of active sites (AS) on a catalyst can be represented as {AS1} and {AS2}. These atoms have to be defined using “define composite atom” statement. Once defined, RING recognizes the composite atom during reaction rule specification and reaction generation. Examples employing composite atoms are discussed in the second part of this series (Rangarajan et al., in press). A second feature that has been added into SMILES in RING is the definition of non-bonded interactions – partial and hydrogen bond. This interaction is represented using “_” and can be used to depict, for example, dimeric alcohol intermediates in zeolites (Chiang & Bhan, 2010) co-adsorbed on a zeolite, or adsorption of molecules on a metal surface as shown in Fig. 2. The use of SMILES, with these two additional features, allow for rigorous description of the intermediates involved in different types of chemistries.
These describe the chemical transformations that take place in the reaction system (Rangarajan et al., 2010) and comprise of: (i) the set of atoms that participate in the reaction, called the reaction center or reactant patterns, (ii) the final electronic configuration of the atoms in the reaction center and the bonding between them, and (iii) constraints that govern the reaction center and the entire molecule. These constraints have to be satisfied by the reactant molecule prior to the application of the reaction rules. In addition, constraints can also be imposed on the products formed and are classified under molecular constraints.
Each reaction rule defines a particular chemical transformation which can be elementary or non-elementary, and be unimolecular or bimolecular. For a given reaction system, the reaction rules can be deduced from the literature and from knowledge of the operating conditions. For example, gas phase pyrolysis of hydrocarbons or oxygenates typically involves homolytic bond cleavage/formation, β-scission, hydride shifts, etc., while heterogeneous solid acid catalysis would involve adsorption/desorption of hydrocarbons, β-scission, alkylation, etc. RING allows for the specification of an additional reactant identical to one of the reactant(s). This feature has been implemented mainly to address elementary steps on surfaces where two adjacent identical surface species (or sites) are involved, such as desorption of surface hydrogen species on palladium to form molecular hydrogen (Conrad, Ertl, & Latta, 1974). This duplication allows for an exception whereby termolecular reactions can de described when the third reactant pattern is identical to one of the other two, such as in the case of dissociative adsorption of molecular hydrogen (the reverse of the desorption step) shown in Fig. 3. Lines 16–25 in Table 2 describe the reaction rule for protonation of a hydroxy group, shown in Fig. 4. The rule essentially describes the abstraction of a proton by the oxygen atom of an alcohol to form an oxonium ion.
Reaction centers (patterns) are written as shown in lines 17–21 in Table 2. The hydroxy pattern is described in lines 17–19 – a carbon atom, labeled ‘c1’, that is single bonded to an oxygen atom not in a ring, labeled ‘o1’. Lines 20–21 describe a proton – a positive hydrogen atom labeled ‘h1’. All atoms in a reactant pattern are labeled for unambiguous identification while describing transformations. Each reactant pattern describes one of the reactants. Rules can be unimolecular (single pattern), bimolecular (two patterns), ternary (consisting of two identical and a second distinct pattern), and intramolecular (special case of bimolecular rules). Therefore, bimolecular reactions have two reactant patterns which together constitute the reaction center. Ternary reaction rules can also be specified when two of the three patterns are identical. Bimolecular reaction rules can be set to also/only allow intramolecular reactions. In such a case, an intramolecular reaction will occur only if both the patterns exist in a single reactant.
Constraints, as discussed in Section 2, are essential in preventing a combinatorial explosion in the size of the generated network. In RING, two types of constraints can be specified: molecular and atom environment constraints. The atom environment constraints, given along with reactant pattern specification, describe the spatial properties of the atoms in the reaction center. Specifically, they describe: (a) what the neighboring atoms and fragments are, and (b) topological characteristics of the atoms – ring atom, aromatic atom or allylic atom, largest size of the ring in which atom is present, etc. The molecular constraints are constraints on (a) charge, (b) size, (c) presence (or absence) of structural features, and (d) shape and presence (or absence) of topological characteristics. Atom constraints are specified as shown in line 18 of Table 2, wherein, the constraint restricts the carbon ‘c1’ to be connected to one or fewer oxygen atoms. This ensures that the carbon is not part of an ester or an acid functional group.
Molecular constraints are specified as shown in line 22 of Table 2. The carbonyl species has an upper and lower bound on the size (defined as the number of non-hydrogen atoms in it). Lines 17 and 20 also impose charge constraints on the reactants by using the prefixes “neutral” and “positive”. Combined constraints involving both reactants and constraints on products can also be specified. This constraint specification scheme, inclusive of reactant and product molecular constraints and reaction center atom constraints, thus, provides the user with the capability of imposing restrictions to varying levels of severity.
A reaction rule is complete when the final configuration of atoms and bonds of the reaction center is specified. Transformations in RING, similar to those in RDL (Prickett & Mavrovouniotis, 1997a) and RDL++ (Hsu et al., 2008) involve either changes in connectivity such as bond formation/cleavage and modification of the bond order, or changes in electronic configuration such as adding or removing charge, lone pairs, and unpaired electrons. The changes in electronic configuration are described by atomtype modifications – an atom of one atomtype changes to another atomtype (e.g., C forming C+). Lines 23–25 of Table 2 describe the transformations for the case of alcohol protonation: (a) formation of a single bond between oxygen atom, ‘o1’, and hydrogen atom, ‘h1’, (b) formation of an oxonium ion, and (c) loss of charge on the proton to form neutral hydrogen. The description of changes in the bond connectivity and electronic configurations, along with reactant pattern description, provides complete information on the initial and final state of each atom in the reaction center. This allows for: (a) catching incorrect rules that violate valency constraints of atoms directly by the language compiler prior to network generation, and (b) correctly identifying changes in topological characteristics of molecules such as in steps that break aromaticity. Such a description of transformations is independent of the type of chemistry and hence applicable to most organic chemical transformations – homogeneous/heterogeneous catalytic/non-catalytic chemistries.
The Fructose-to-HMF system has several additional rules: protonation of carbonyl and CC groups (and their reverse steps), hydride shift, allyl shift, and dehydration of oxonium ion. S1 in Supporting material contains the corresponding reaction language code for these elementary steps. These rules, while only a subset of all acid-catalyzed elementary steps, form the likely steps for aqueous phase mineral acid catalyzed system at moderate temperatures (∼100 °C).
These are molecular constraints on the entire reaction system applicable to all molecules in the network. For example, global constraints can fix the maximum possible size of a molecule in a system. For the Fructose-to-HMF system, lines 4–14 describe molecular constraints applicable to all molecules at all times – the maximum size of a molecule is 15 atoms (line 9), the maximum allowed charge on a molecule is 1 (line 9), a positively charged atom can never be connected to any atom with a double bond (lines 5–8), and there are no consecutive double bonds (lines 10–14). It can be noted that the two fragments, ‘a’ and ‘b’, are defined in a manner similar to the reactant pattern definition, and refer to specific patterns in the molecule that should or should not be present in the molecule. Such fragment constraints can also be imposed in reaction rules.
In RING, the user can specify: (a) if lumping based on functional equivalence is required, (b) if the representative molecule of the lump is the isomer that has branches farthest/closest apart, and (c) if further lumping of hydrocarbons, such as paraffins, olefins, naphthenes, and aromatics based on size is required. While line 27 specifies that lumping is required, lines 28–29 in Table 2 describe how acyclic and cyclic molecules satisfying the condition for lumping, are both represented by the constituent that has its branches farthest apart. For example, in the lump of five-carbon secondary alcohols (Section 3.3.1), the lump representative, according to line 28, would be 3-pentanol because its branch (the C–OH group) is farther apart from both the ends when compared to 2-pentanol, the other constituent.
Pathway querying, in RING, consists of two steps – a description of the target molecule(s) and the nature of the pathways desired. Target molecules are described by molecular constraints, while constraints on the nature of pathways – pathway constraints – are described subsequently to put a limit on path length, describe presence/absence of rules and molecules, and to describe constraints on the reactants and products in one or more reactions of the pathway. Lines 30–36 in Table 2 show a pathway query to HMF, “OCc1oc(CO)cc1”. The constraints on the pathway include a maximum length constraint of 11 reactions in the sequence, a limit on the number of occurrences of a reaction corresponding to the rule Hshift (hydride shift, see Supporting information), and a requirement that similar pathways1 be eliminated.
Lines 37–43 in Table 2 describe an overall mechanism query to find mechanisms to HMF. The mechanisms can have several cycles; therefore, constraints can be imposed on the overall mechanism (lines 39–40) as well as on individual cycles (lines 41–43). The overall constraints restrict the total number of reactions and cycles in the complete mechanism. The individual cycle constraints restrict the number of reactions in each cycle, and limit the number of occurrences of a reaction corresponding to the rule Hshift. Further, the requirement “eliminate similar mechanisms” is imposed so that multiple cycles having the same overall reaction are not obtained.
The generated network can be queried for specific components of the network – species and reactions. The molecule queries are given as shown in lines 44–46 in Table 2 wherein all molecules satisfying the specified molecular constraints – cyclic and neutral – are sought. Further, reaction queries seeking all reactions of the network satisfying specific types of reactions, reactants, or products, can also be input. Lines 47–50 in Table 2 show an example of reaction query for obtaining all alcohol protonation reactions involving a cyclic reactant.
The reaction network is a list of species and a list of reactions, both written in SMILES format. The format for reactions essentially involves concatenating SMILES strings of reactants and products of that reaction with appropriate delimiters (‘.’ demarcates two different reactants/products, while ‘>>’ separates reactants from products). A SMILES generator has been developed that constructs the individual strings for molecules from their internal representation and appends them together to get the reaction string. Fig. 5 shows a sample set of reactions constituting the network, in both SMILES and graphical form. Several chemistry packages parse SMILES strings to generate a graphical output of molecules and reactions; the reactions in Fig. 5 were generated using ChemDraw (CambridgeSoft, 2011).
Results from a lumping analysis are output as a list of lumps wherein each lump is represented by its representative molecule (identified based on user-specified criterion) and is followed by a list of species belonging to the lump. Fig. 6 shows, pictorially, one of the lumps identified by RING – a lump of Fructose derivatives containing three hydroxy groups, an oxonium ion, a methyl group, and a carbon–carbon double bond. The eight molecules shown in the figure are lumped into one lump represented by the lump representative shown. Once the molecules are lumped, each reaction can be rewritten in terms of lumps to get a lumped reaction. Since the number of lumps is lesser than the number of species in a network (about 550 species and 240 lumps), the number of lumped reactions is also fewer (about 650 lumped reactions from a network of about 1200 reactions). Lumping, thus, reduces the network size by a factor of 2. For some systems, such as propane aromatization, as shown in the accompanying paper, lumping is shown to lead to reduction in network size by several orders of magnitude (Rangarajan et al., in press).
Pathways are obtained as a list of reaction sequences wherein each sequence is, in itself, a list of reactions that traces the product formation. Fig. 7 depicts one of the pathways for the conversion of fructose to HMF as a sequence of reactions. The pathway involves three alcohol-protonation and dehydration steps, while one of the steps is essentially an enol–carbonyl tautomerism step. Antal et al. (1990) propose this sequence of steps as the dominant route for HMF synthesis from fructose in aqueous solutions catalyzed by mineral acids.
Fig. 8 shows the overall (complete) mechanism that corresponds to the pathway described above. The mechanism has four catalytic cycles (Fig. 8) – three dehydration cycles and one isomerization cycle. The overall reaction, thus, is a balanced reaction with one molecule of HMF and three molecules of water formed from each fructose molecule. We can further query to obtain the constituent elementary step reactions of these individual cycles through identifying direct mechanisms.
The input options and output features of RING allow for systematic rule-based elucidation of complex reaction networks through: (a) construction of the reaction network from reaction rules, and (b) analysis of the transformations in the network through post-processing instructions (or rules). Such analysis is particularly relevant in biomass conversion as upgrading oxygenates to produce fuels and chemicals involves multiple thermochemical steps to remove oxygen atoms present in different functional groups (Corma et al., 2007, Huber et al., 2005, Schmidt and Dauehauer, 2007). RING currently does not take into consideration the kinetics of each of the steps and hence cannot apply features such as rate-based pruning (Susnow et al., 1997).
The construction and analysis features of RING can be applied for analyzing complex reaction networks in three distinct classes of problems. We discuss each of these through illustrative examples in the second part of this series (Rangarajan et al., in press):
If the elementary chemistry rules and their estimated kinetic parameters are available for a chemical system, RING can be used to identify a plausible set of dominant pathways that form specific products. One such case study is discussed in detail in Rangarajan et al. (in press), where we analyze the system of acid-catalyzed propane aromatization. In this example, we demonstrate three major features of RING – “encapsulation” of class of molecules using composite atom definitions, constraints-based extraction of pathways, and lumping of isomers leading to orders of magnitude reduction in network size.
Manual identification of all possible mechanisms exhaustively is cumbersome. Instead, RING can be used to generate and identify the mechanisms for the system. Specifically, if experimental data is available for a complex reaction network, RING can be used to test postulated elementary steps and propose a set of plausible pathways/mechanisms that describe how a product is formed in the system. In Rangarajan et al. (in press), an example involving the system of dehydration of glycerol to form acetone and a related system of acetone conversion to acetic acid is used for illustration. This example extensively uses the pathway identification feature of RING to query for specific pathways to products.
RING can be used to identify all possible synthetic routes to a compound from prescribed starting chemicals using specific chemistries. These routes can be pruned further by identifying those that satisfy properties like highest atom-efficiency and constraints like the length of the pathway or the presence/absence of certain types of reactions. In Rangarajan et al. (in press), we identify possible atom-efficient synthetic routes to form large alcohols from small oxygenates. Here, we use the complete mechanism identification feature of RING because the calculation of atom-efficiency requires the knowledge of the stoichiometry of the overall reaction.
In summary, RING is a network generation and analysis tool developed using Cheminformatics and graph theoretical algorithms. It is composed of three components – a language compiler for a domain specific English-like reaction language, a reaction network generator that can construct an exhaustive network from specified reaction rules and initial reactants, and a post-processing module that enables (i) lumping of isomers to get a network of reduced size, (ii) finding pathways between initial reactants and specified products, and (iii) finding mechanisms for the formation of specified molecules in the network. RING can be used to construct reaction networks from elementary or overall reaction rules in a rule-based manner, and further, to elucidate the transformations occurring in complex chemical reaction networks through identifying reaction pathways, mechanisms, and lumps of isomers. The construction and analysis options in RING were described through an illustrative example involving acid catalyzed dehydration of fructose to HMF. Detailed case studies showcasing the network generation and analysis features of RING are discussed in the second part of this series (Rangarajan et al., in press). RING is distributed open source under GNU Lesser GPL version 2.1 license through a dedicated webpage (RING, 2011).
The authors would like to thank Prof. Eric Van Wyk and Ted Kaminski, Department of Computer Science and Engineering, University of Minnesota, for helpful suggestions on computer science algorithms and collaboration on developing the reaction language for RING. Financial support from the Initiative for Renewable Energy (Large Grant: RL-0004-09) at the University of Minnesota, the National Science Foundation Emerging Frontiers in Research and Innovation program, grant # 0937706 is gratefully acknowledged. A.B. was supported as part of the Catalysis Center for Energy Innovation, an Energy Frontier Research Center funded by the US Department of Energy, Office of Science, Office of Basic Energy Sciences under Award number DE-SC0001004.
The following are the Supplementary data to this article:Download : Download Word document (112KB)