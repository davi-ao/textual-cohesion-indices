Many systems studied in contemporary science, from the standpoint of their structure, can be viewed as the ensembles of large number of elements interacting with each other. Such systems can often be conveniently represented by networks, consisting of nodes and links between these nodes. As nodes and links are abstract concepts, they may refer to many different objects and types of interactions, respectively. Therefore, a rapid development of the so-called network science has found application in studies on a great variety of systems, like social networks, biological networks, networks representing financial dependencies, the structure of the Internet, or the organization of transportation systems [8], [12], [16], [23], [34], [38], [43].
The mentioned networks are usually referred to as complex networks; they owe their name to a general concept of complexity. The above-listed systems are often viewed as examples of complex systems. Although complexity does not have a precise definition, it can be stated that a complex system typically consists of a large number of elements nonlinearly interacting with each other, is able to display collective behavior, and, by exchanging energy or information with surroundings, can modify its internal structure [23]. Many complex systems exhibit emergent properties, which are characteristic for a system as a whole, and cannot be simply derived or predicted solely from the properties of the system’s individual elements. The existence of the emergent phenomena is often summarized with the phrases such as “more is different” or “the whole is something besides the parts”.
In this context, natural language is clearly a vivid instance of a complex system. Higher levels of its structure usually cannot be simply reduced to the sum of the elements involved. For example, phonemes or letters basically do not have any meaning, but the words consisting of them are references to specific objects and concepts. Likewise, knowing the meaning of separate words does not necessarily provide the understanding of a sentence composed of them, as a sentence can carry additional information, like an emotional load or a metaphorical message. Other features of natural language that are typical for complex systems have also been studied, for example long-range correlations [47], fractal and multifractal properties [5], [10], [13], self-organization [9], [40] or lack of characteristic scale, which manifests itself in power laws such as the well-known Zipf’s law or Heaps’ law (the latter also referred to as the Herdan’s law) [14], [35], [48].
The network formalism has proven to be useful in studying and processing natural language. It allows to represent language on many levels of its structure - the linguistic networks can be constructed to reflect word co-occurrence, semantic similarity, grammatical relationships etc. It has a significant practical importance - the methods of analysis of graphs and networks have been employed in the natural language processing tasks, like keyword selection, document summarization, word-sense disambiguation or machine translation [2], [3], [32]. Networks also seem to be a promising tool in research on the language itself; they have been applied to study the language complexity [17], [21], [27], the structural diversity of different languages [28], or the role of punctuation in written language [22]. Furthermore, the network formalism appears at the interface between linguistics and other scientific fields, for example in sociolinguistics, which, by studying social networks, investigates human language usage and evolution [11], [19].
In this paper the properties of the word-adjacency networks constructed from literary texts are studied. Such networks may be treated as a representation of a given text, taking into account mutual co-occurrences of words. They can be characterized by some parameters that describe their structure quantitatively. Determining these parameters results in obtaining a set of a few numbers capturing considered features of networks and, consequently, features of the underlying text sample. In that sense the procedure of constructing a network from a text and calculating its characteristics may be viewed as extracting essential traits of the language sample and putting them into a compact form. Subjecting the obtained data to data mining algorithms reveals that the networks representing texts of different authors can be distinguished one from another by their parameters. After appropriately proposed preparation of the data, such procedure of authorship attribution, though quite simple, results in relatively high accuracy. It therefore leads to a statement that information on individual language style used in a given text can be drawn from the set of characteristics describing the corresponding word-adjacency network. This is comparable with the known results concerning identification of individual language styles using the linguistic networks [1], [30]; however, the previous research has typically focused on the network types and the network structure aspects other than considered here.
The set of the studied texts consists of novels in English and Polish. For each language, there are 48 novels, 6 novels for each of 8 different authors. The full list of the books and authors is presented in Appendix. The texts were downloaded from the websites of Project Gutenberg [36], Wikisources [45], and Wolne Lektury [46]. Both Polish and English-language authors considered in this paper are widely recognized as notable writers, whose works had an impact on the shaping of culture; two of the Polish writers - Henryk Sienkiewicz and Władysław Reymont - are laureates of the Nobel Prize in Literature. Among the selection criteria for the authors, worth mentioning are the number of books (each studied author has at least 6 books, each of them with at least 25,000 words), and their availability (all the books are publicly available).
Each text studied in this paper is transformed into a word-adjacency network, and resulting networks are subjected to adequate calculations and analyses. However, before the construction of the networks, the texts are appropriately pre-processed. Preparation includes: removing annotations and redundant whitespaces, converting all characters to lowercase, and replacing some types of punctuation marks by special symbols, which are treated as usual words in the subsequent steps of analysis. This approach is justified by the observation of the fact that in terms of some statistical properties, punctuation follows the same patterns as words [22] and may be a valuable carrier of information on the language sample. The punctuation taken into consideration is: full stop, question mark, exclamation mark, ellipsis, comma, dash, colon, semicolon and brackets. The remaining punctuation types (for example, quotation marks) are removed from text samples, along with marks that do not indicate the structure of sentence (examples are: the full stops used after abbreviations, or quotation dashes - i.e. the dashes placed at the beginning of quotations in some languages, including Polish).
After pre-processing, the texts are transformed into the word-adjacency networks. In such networks each vertex represents one of the words appearing in the underlying text. The edges reflect the co-occurrence of words. In an unweighted network, an edge is present between two vertices, if the words that correspond to these vertices appear at least once next to each other in the text (see Fig. 3). In a weighted network, edges are assigned weights that represent the exact number of the co-occurrences of the respective words. It is assumed that the theoretically possible case of words occurring next to themselves is ignored - i.e. there are no edges connecting a vertex with itself in the resulting network.
An unweighted network may be treated as a special case of a weighted network (with all edge weights equal to 1). When determining the characteristics in a weighted network, one may either take weights into account or neglect them; the latter case is equivalent to the calculation of the parameters of an unweighted network. Therefore, all networks studied in this paper may be viewed as weighted ones. With such approach, weighted and unweighted versions of a given network characteristic can be treated as two distinct quantities describing a weighted network, with two different definitions.
In the process of network construction, words are not lemmatized, which means that their inflected forms are distinguished. Hence all such forms occurring in a particular text end up as separate vertices in the resulting network. All studied networks are undirected - which means that a pair of adjacent words is counted in the same way as a pair with reversed order.
Throughout this paper, a few concepts and quantities known from the field of complex network analysis are used. This section presents them briefly.
For each studied network, a number of characteristics are calculated. Depending on the context, these characteristics are either global (related to the network as a whole), or local (related to particular vertices in the network). The quantities describing the network’s structure can be unweighted or weighted - the latter take into account the weights assigned to edges in the weighted networks. The characteristics studied in this paper are: vertex degree, average shortest path length, clustering coefficient, assortativity coefficient, and modularity. Although these quantities are widely applied in the studies on complex networks and are well described in literature [15], [37], there are some ambiguities, especially pertaining to generalizations onto the weighted networks. For this reason, the adequate definitions are given below.
Degree is a quantity describing individual vertices. In simple (i.e. unweighted) networks, the degree of a given vertex v is the number of edges touching v, and is denoted by deg(v)<math><mrow is="true"><mi is="true">deg</mi><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow></math>. In weighted networks, the degree can be generalized to weighted degree (also called strength and therefore denoted by str(v)), which is the sum of weights of the edges touching v.
In word-adjacency networks, the vertex degree is obviously related to the frequency of the corresponding word in the considered text sample. In its weighted version, it is equal to 2f(v), where f(v) stands for the overall number of occurrences of the word v (apart from the first and the last word in a sample, for which the weighted degree is equal to 2f(v)−1<math><mrow is="true"><mn is="true">2</mn><mi is="true">f</mi><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo><mo is="true">−</mo><mn is="true">1</mn></mrow></math>). In unweighted networks, the degree of a vertex represents the number of words that appear at least once next to the word assigned to this vertex.
In unweighted networks, the clustering coefficient of a given vertex represents the probability that two randomly chosen direct neighbours of this vertex are also direct neighbours of each other. By a direct neighbour of a vertex v we understand a vertex connected with v by an edge. Let mv stand for the number of edges in the network that link the direct neighbours of v with other direct neighbours of v. Then the clustering coefficient of v is given by:(1)Cu(v)=2mvdeg(v)·(deg(v)−1),<math><mrow is="true"><msub is="true"><mi is="true">C</mi><mi is="true">u</mi></msub><mrow is="true"><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow><mo is="true">=</mo><mfrac is="true"><mrow is="true"><mn is="true">2</mn><msub is="true"><mi is="true">m</mi><mi is="true">v</mi></msub></mrow><mrow is="true"><mi is="true">deg</mi><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo><mo is="true">·</mo><mo is="true">(</mo><mi is="true">deg</mi><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo><mo is="true">−</mo><mn is="true">1</mn><mo is="true">)</mo></mrow></mfrac><mo is="true">,</mo></mrow></math>where the subscript “u” comes from the word “unweighted”. In a word-adjacency network, the clustering coefficient of a given word v describes the probability that any two words that appear next to v in the considered text sample also appear next to each other at least once.
Generalization of the clustering coefficient onto the weighted networks can be done in multiple ways. In this paper a definition proposed by Barrat et al. [6] is used. Let S(v) denote the set of neighbours of a vertex v, and let wuv denote the weight of the edge connecting vertices u and v (if there is no such edge, then wuv=0<math><mrow is="true"><msub is="true"><mi is="true">w</mi><mrow is="true"><mi is="true">u</mi><mi is="true">v</mi></mrow></msub><mo is="true">=</mo><mn is="true">0</mn></mrow></math>). Let auv denote an unweighted adjacency matrix element, i.e. a number defined as follows:auv={1,ifthereexistsanedgeconnectinguandv;0,otherwise.<math><mrow is="true"><msub is="true"><mi is="true">a</mi><mrow is="true"><mi is="true">u</mi><mi is="true">v</mi></mrow></msub><mo is="true">=</mo><mrow is="true"><mo stretchy="true" is="true">{</mo><mtable is="true"><mtr is="true"><mtd columnalign="left" is="true"><mrow is="true"><mn is="true">1</mn><mo is="true">,</mo></mrow></mtd><mtd columnalign="left" is="true"><mrow is="true"><mtext is="true">if</mtext><mspace width="4.pt" is="true"></mspace><mtext is="true">there</mtext><mspace width="4.pt" is="true"></mspace><mtext is="true">exists</mtext><mspace width="4.pt" is="true"></mspace><mtext is="true">an</mtext><mspace width="4.pt" is="true"></mspace><mtext is="true">edge</mtext><mspace width="4.pt" is="true"></mspace><mtext is="true">connecting</mtext><mspace width="4.pt" is="true"></mspace><mi is="true">u</mi><mspace width="4.pt" is="true"></mspace><mtext is="true">and</mtext><mspace width="4.pt" is="true"></mspace><mi is="true">v</mi><mtext is="true">;</mtext></mrow></mtd></mtr><mtr is="true"><mtd columnalign="left" is="true"><mrow is="true"><mn is="true">0</mn><mo is="true">,</mo></mrow></mtd><mtd columnalign="left" is="true"><mtext is="true">otherwise.</mtext></mtd></mtr></mtable></mrow></mrow></math>Then the weighted clustering coefficient of v is written as:(2)Cw(v)=1str(v)·(deg(v)−1)∑u,t∈S(v)wvu+wvt2avuautatv,<math><mrow is="true"><msub is="true"><mi is="true">C</mi><mi is="true">w</mi></msub><mrow is="true"><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow><mo is="true">=</mo><mfrac is="true"><mn is="true">1</mn><mrow is="true"><mtext is="true">str</mtext><mrow is="true"><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow><mo is="true">·</mo><mrow is="true"><mo stretchy="true" is="true">(</mo><mi is="true">deg</mi><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo><mo is="true">−</mo><mn is="true">1</mn><mo stretchy="true" is="true">)</mo></mrow></mrow></mfrac><munder is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">u</mi><mo is="true">,</mo><mi is="true">t</mi><mo is="true">∈</mo><mi is="true">S</mi><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow></munder><mfrac is="true"><mrow is="true"><msub is="true"><mi is="true">w</mi><mrow is="true"><mi is="true">v</mi><mi is="true">u</mi></mrow></msub><mo is="true">+</mo><msub is="true"><mi is="true">w</mi><mrow is="true"><mi is="true">v</mi><mi is="true">t</mi></mrow></msub></mrow><mn is="true">2</mn></mfrac><msub is="true"><mi is="true">a</mi><mrow is="true"><mi is="true">v</mi><mi is="true">u</mi></mrow></msub><msub is="true"><mi is="true">a</mi><mrow is="true"><mi is="true">u</mi><mi is="true">t</mi></mrow></msub><msub is="true"><mi is="true">a</mi><mrow is="true"><mi is="true">t</mi><mi is="true">v</mi></mrow></msub><mo is="true">,</mo></mrow></math>where summation is over all pairs (u, t) of neighbours of v. It is worth noting that if degv=0<math><mrow is="true"><mi is="true">deg</mi><mi is="true">v</mi><mo is="true">=</mo><mn is="true">0</mn></mrow></math> or degv=1,<math><mrow is="true"><mi is="true">deg</mi><mi is="true">v</mi><mo is="true">=</mo><mn is="true">1</mn><mo is="true">,</mo></mrow></math> the clustering coefficient cannot be determined from the above-given formulas, and it is assumed that in such cases it is equal to 0.
The above definitions pertain to the individual vertices of a network. Global clustering coefficient can be defined in more than one way; in this work a simple approach based on averaging the local clustering coefficients is applied. If V stands for the set of all vertices of a network and N is the number of elements in V, then the global clustering coefficient of the network is given by:(3)C=1N∑v∈VC(v).<math><mrow is="true"><mi is="true">C</mi><mo is="true">=</mo><mfrac is="true"><mn is="true">1</mn><mi is="true">N</mi></mfrac><munder is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">v</mi><mo is="true">∈</mo><mi is="true">V</mi></mrow></munder><mi is="true">C</mi><mrow is="true"><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow><mo is="true">.</mo></mrow></math>Here the subscript “u” or “w”, indicating the unweighted or weighted network, is omitted, because the formula is identical in both cases.
In unweighted networks, the length of a path between two vertices is the number of edges on that path. In weighted networks, by the length of a path we understand the sum of the reciprocals of edge weights on that path. The length of the shortest path between vertices u and v is also called the distance between u and v and is denoted by d(u, v).
The average shortest path length ℓ(v) of a vertex v is the average distance from v to every other vertex in the network. It is a measure of the centrality of a vertex in the network, and is given by the formula:(4)ℓ(v)=1N−1∑u∈V∖{v}d(v,u),<math><mrow is="true"><mi is="true">ℓ</mi><mrow is="true"><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow><mo is="true">=</mo><mfrac is="true"><mn is="true">1</mn><mrow is="true"><mi is="true">N</mi><mo is="true">−</mo><mn is="true">1</mn></mrow></mfrac><munder is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">u</mi><mo is="true">∈</mo><mi is="true">V</mi><mo is="true">∖</mo><mo is="true">{</mo><mi is="true">v</mi><mo is="true">}</mo></mrow></munder><mrow is="true"><mi is="true">d</mi><mo is="true">(</mo><mi is="true">v</mi><mo is="true">,</mo><mi is="true">u</mi><mo is="true">)</mo></mrow><mo is="true">,</mo></mrow></math>in which V is the set of all vertices of the network, and N is the number of elements in V.
The quantity defined above has finite values only in connected networks. If there are at least two vertices that are not connected by any path, the distance between them is not defined; usually it is treated as infinite, and therefore ℓ(v) cannot be calculated.
Global average shortest path length is a quantity describing the whole network; it is the average distance between all pairs of vertices. If local average distances ℓ(v) for all v in V are given, then the global mean distance in the whole network can be expressed by:(5)ℓ=1N∑v∈Vℓ(v).<math><mrow is="true"><mi is="true">ℓ</mi><mo is="true">=</mo><mfrac is="true"><mn is="true">1</mn><mi is="true">N</mi></mfrac><munder is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">v</mi><mo is="true">∈</mo><mi is="true">V</mi></mrow></munder><mi is="true">ℓ</mi><mrow is="true"><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow><mo is="true">.</mo></mrow></math>
Formulas 4 and 5 apply both to unweighted and weighted networks; the difference between the unweighted and the weighted average shortest path length lies in the definition of the distance in respective cases.
Assortativity is a global characteristic of a network, describing the preference for vertices to attach to others that have similar degree. A network is called assortative, if vertices with high degree tend to be directly connected with other vertices with high degree, and low-degree vertices are typically directly connected to vertices which also have low degree. In disassortative networks, the high-degree nodes are typically directly connected to the nodes with low degree. In word-adjacency networks, assortativity provides the information about the extent to which frequent words co-occur with rare ones.
In unweighted networks, the assortativity coefficient can be defined as the Pearson correlation coefficient between the degrees of nodes that are connected by an edge. Let (u, v) denote the ordered pair of vertices that are connected by an edge. Since edges are undirected and the pair (u, v) is ordered, two such pairs can be assigned to each edge in the network. For each pair one can calculate the degrees of vertices u and v, and form a pair (deg(u),deg(v))<math><mrow is="true"><mo stretchy="true" is="true">(</mo><mi is="true">deg</mi><mo is="true">(</mo><mi is="true">u</mi><mo is="true">)</mo><mo is="true">,</mo><mi is="true">deg</mi><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo><mo stretchy="true" is="true">)</mo></mrow></math>. The set of all pairs (deg(u),deg(v))<math><mrow is="true"><mo stretchy="true" is="true">(</mo><mi is="true">deg</mi><mo is="true">(</mo><mi is="true">u</mi><mo is="true">)</mo><mo is="true">,</mo><mi is="true">deg</mi><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo><mo stretchy="true" is="true">)</mo></mrow></math> for all edges can be treated as the set of values of a certain two-dimensional random variable (X, Y). With such notation, the assortativity coefficient ru is expressed by the Pearson correlation coefficient of variables X and Y:(6)ru=corr(X,Y).<math><mrow is="true"><msub is="true"><mi is="true">r</mi><mi is="true">u</mi></msub><mo is="true">=</mo><mtext is="true">corr</mtext><mrow is="true"><mo is="true">(</mo><mi is="true">X</mi><mo is="true">,</mo><mi is="true">Y</mi><mo is="true">)</mo></mrow><mo is="true">.</mo></mrow></math>
The generalization of the above formula to weighted networks is done in this paper by replacing the degrees of vertices by their strengths, and calculating the weighted correlation coefficient instead of normal one. Let (X, Y) be a two-dimensional random variable whose values are pairs (x,y)=(str(u),str(v))<math><mrow is="true"><mrow is="true"><mo is="true">(</mo><mi is="true">x</mi><mo is="true">,</mo><mi is="true">y</mi><mo is="true">)</mo></mrow><mo is="true">=</mo><mrow is="true"><mo stretchy="true" is="true">(</mo><mtext is="true">str</mtext><mo is="true">(</mo><mi is="true">u</mi><mo is="true">)</mo><mo is="true">,</mo><mtext is="true">str</mtext><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo><mo stretchy="true" is="true">)</mo></mrow></mrow></math> for all pairs of vertices (u, v) connected by an edge. Let w be a function that to each pair (x,y)=(str(u),str(v))<math><mrow is="true"><mrow is="true"><mo is="true">(</mo><mi is="true">x</mi><mo is="true">,</mo><mi is="true">y</mi><mo is="true">)</mo></mrow><mo is="true">=</mo><mrow is="true"><mo stretchy="true" is="true">(</mo><mtext is="true">str</mtext><mo is="true">(</mo><mi is="true">u</mi><mo is="true">)</mo><mo is="true">,</mo><mtext is="true">str</mtext><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo><mo stretchy="true" is="true">)</mo></mrow></mrow></math> assigns the weight of an edge connecting u and v. Then the weighted assortativity coefficient rw can be written as:(7)rw=wcorr(X,Y;w),<math><mrow is="true"><msub is="true"><mi is="true">r</mi><mi is="true">w</mi></msub><mo is="true">=</mo><mtext is="true">wcorr</mtext><mrow is="true"><mo is="true">(</mo><mi is="true">X</mi><mo is="true">,</mo><mi is="true">Y</mi><mo is="true">;</mo><mi is="true">w</mi><mo is="true">)</mo></mrow><mo is="true">,</mo></mrow></math>where wcorr(X, Y; w) denotes the Pearson weighted correlation coefficient of variables X and Y with the weighing function w. This formula is equivalent to the one that can be found, for example, in [26].
Since the assortativity coefficient is expressed by the correlation coefficient, it has values between -1 and 1. Networks with positive r are assortative, while networks with negative r are disassortative.
Modularity is a global characteristic of a network, measuring the extent to which the set of network’s vertices can be divided into disjunctive subsets which maximize the density of edges within them, and minimize the number of edges connecting one with another. In word-adjacency networks, it can be interpreted as divisibility of the set of words appearing in the text into groups of words that frequently co-occur with each other.
Consider an unweighted network, with the set of vertices V. By partition of the network we understand the division of V into disjoint subsets (called modules, clusters or communities). Let auv denote the adjacency matrix element (defined the same as in Section 2.2.2). Let cv denote the module to which the vertex v is assigned by the given partition. The modularity of a partition is defined as:(8)qu=12m∑u,v∈V([auv−deg(u)deg(v)2m]δ(cu,cv)),<math><mrow is="true"><msub is="true"><mi is="true">q</mi><mi is="true">u</mi></msub><mo is="true">=</mo><mfrac is="true"><mn is="true">1</mn><mrow is="true"><mn is="true">2</mn><mi is="true">m</mi></mrow></mfrac><munder is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">u</mi><mo is="true">,</mo><mi is="true">v</mi><mo is="true">∈</mo><mi is="true">V</mi></mrow></munder><mrow is="true"><mo stretchy="true" is="true">(</mo><mrow is="true"><mo stretchy="true" is="true">[</mo><msub is="true"><mi is="true">a</mi><mrow is="true"><mi is="true">u</mi><mi is="true">v</mi></mrow></msub><mo is="true">−</mo><mfrac is="true"><mrow is="true"><mi is="true">deg</mi><mo is="true">(</mo><mi is="true">u</mi><mo is="true">)</mo><mi is="true">deg</mi><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow><mrow is="true"><mn is="true">2</mn><mi is="true">m</mi></mrow></mfrac><mo stretchy="true" is="true">]</mo></mrow><mi is="true">δ</mi><mrow is="true"><mo is="true">(</mo><msub is="true"><mi is="true">c</mi><mi is="true">u</mi></msub><mo is="true">,</mo><msub is="true"><mi is="true">c</mi><mi is="true">v</mi></msub><mo is="true">)</mo></mrow><mo stretchy="true" is="true">)</mo></mrow><mo is="true">,</mo></mrow></math>
Modularity of a partition has value between -1 and 1, and indicates whether the density of edges within the given groups is higher or lower than it would be if edges were distributed at random. The random network that serves as a reference in this definition can be constructed using the so-called configuration model [18].
The modularity of a network Qu is the maximum value from modularities qu of all possible partitions. Determining the network’s modularity precisely is computationally intractable, hence a number of heuristic algorithms have been proposed. In this paper modularity is calculated using the Louvain method [7].
The generalization of modularity onto weighted networks can be done by replacing the quantities appearing in Eq. (8) by their weighted counterparts. If wuv denotes the weight of the edge connecting vertices u and v, M is the sum of all edge weights, and str(u), str(v) are the strengths of vertices u, v, then the modularity of a given partition is equal to:(9)qw=12M∑u,v∈V([wuv−str(u)str(v)2M]δ(cu,cv)).<math><mrow is="true"><msub is="true"><mi is="true">q</mi><mi is="true">w</mi></msub><mo is="true">=</mo><mfrac is="true"><mn is="true">1</mn><mrow is="true"><mn is="true">2</mn><mi is="true">M</mi></mrow></mfrac><munder is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">u</mi><mo is="true">,</mo><mi is="true">v</mi><mo is="true">∈</mo><mi is="true">V</mi></mrow></munder><mrow is="true"><mo stretchy="true" is="true">(</mo><mrow is="true"><mo stretchy="true" is="true">[</mo><msub is="true"><mi is="true">w</mi><mrow is="true"><mi is="true">u</mi><mi is="true">v</mi></mrow></msub><mo is="true">−</mo><mfrac is="true"><mrow is="true"><mtext is="true">str</mtext><mo is="true">(</mo><mi is="true">u</mi><mo is="true">)</mo><mspace width="0.16em" is="true"></mspace><mtext is="true">str</mtext><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow><mrow is="true"><mn is="true">2</mn><mi is="true">M</mi></mrow></mfrac><mo stretchy="true" is="true">]</mo></mrow><mi is="true">δ</mi><mrow is="true"><mo is="true">(</mo><msub is="true"><mi is="true">c</mi><mi is="true">u</mi></msub><mo is="true">,</mo><msub is="true"><mi is="true">c</mi><mi is="true">v</mi></msub><mo is="true">)</mo></mrow><mo stretchy="true" is="true">)</mo></mrow><mo is="true">.</mo></mrow></math>
The studied texts vary in length. To allow for a reasonable comparison between them, all calculated quantities are specifically normalized. Normalization of each network characteristic is achieved by dividing the value of the considered parameter by the average value of the same parameter in a network constructed from the randomly shuffled text (see Fig. 3). As an example, consider any text and any of above-mentioned quantities (Sections 2.2.1–2.2.5), say, the assortativity coefficient (it does not matter whether the weighted or the unweighted version is considered). To obtain the normalized (in described sense) value of the assortativity coefficient related to the given text, one needs to create the word-adjacency network from the text, and calculate the assortativity coefficient of this network, r. Then the original text needs to be subjected to the random shuffling of words, k times (in this study, k=50<math><mrow is="true"><mi is="true">k</mi><mo is="true">=</mo><mn is="true">50</mn></mrow></math> was used). From each of the k obtained “random texts”, a network can be created, in the same manner as in the previous step. Determining the assortativity coefficients for all of these networks and calculating their average gives r′, the typical value of the assortativity coefficient in the randomized text. The normalized value of the considered parameter - in this case, the assortativity coefficient - is then r˜=r/r′<math><mrow is="true"><mover accent="true" is="true"><mrow is="true"><mi is="true">r</mi></mrow><mo stretchy="true" is="true">˜</mo></mover><mo is="true">=</mo><mi is="true">r</mi><mo is="true">/</mo><msup is="true"><mi is="true">r</mi><mo is="true">′</mo></msup></mrow></math>. It reflects how the parameter related to the original text is different from the one obtained for a text with the same word distribution, but random word order. The normalization is performed in the described way for all mentioned characteristics (Sections 2.2.1–2.2.5). Normalized quantities are denoted with the symbol “~” throughout this paper (Figs. 1 and 2).
To explore the diversity of investigated networks’ properties, two methods of data analysis were employed in this paper - hierarchical clustering and decision tree bagging. The former is a simple data clustering method, which, being an example of an unsupervised machine learning technique, attempts to identify the internal structure of a given set of data, based only on the data itself and on the assumed measure of similarity. The latter is a supervised learning method based on ensembles of decision trees.
Hierarchical clustering [42] performed on a given set of vectors, aims to group together the vectors that are close to each other, according to a certain metric (a function that defines the distance between vectors). The method, as used in this paper, works as follows: given an m-element set of n-dimensional vectors of real numbers and a metric (here the Euclidean metric was used), it starts from creating m clusters and assigning one vector to each cluster. Then the clusters that are closest to each other are merged into one, and this is repeated until there is only one cluster. As clusters are not vectors, but sets of vectors, the distance between such sets must be defined, to allow for determining which are closest to each other. This can be done in multiple ways, here the so-called furthest neighbour method was applied. It defines the distance between two clusters as the greatest distance between pairs of elements of these clusters (each element in a pair belongs to other cluster).
The result of clustering can be presented in the form of a dendrogram - a tree-like diagram which shows the consecutive merges and allows to determine what kind of clusters can be discerned within the dataset.
Statistical classification with decision trees [41] is an example of supervised learning, which means that it allows for the categorization of data, provided that it is given a set of already categorized examples, called the training set.
Creating an ensemble of decision trees requires constructing individual trees in the first place. Let A denote the set of n-dimensional vectors of real numbers; elements of A are called observations, and their coordinates are called attributes. Each observation is labeled with one of K categories, also called classes. The training of a single classification tree consists of: considering all possible one-dimensional splits of A, selecting and executing the best split, and repeating these steps recursively in the resulting subsets; splitting stops when A is partitioned in such a way that each subset contains observations of only one category. The one-dimensional split related to some attribute xi is the choice of a constant number S and grouping the observations according to whether their coordinate xi is smaller or greater than S. The best split is the one that maximizes the decrease of the diversity of distribution of classes in the considered set. The diversity can be measured, for example, by information entropy: H=−∑k=1Kpklogpk<math><mrow is="true"><mi is="true">H</mi><mo is="true">=</mo><mo is="true">−</mo><msubsup is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">k</mi><mo is="true">=</mo><mn is="true">1</mn></mrow><mi is="true">K</mi></msubsup><msub is="true"><mi is="true">p</mi><mi is="true">k</mi></msub><mi is="true">log</mi><msub is="true"><mi is="true">p</mi><mi is="true">k</mi></msub></mrow></math> (pk denotes the fraction of the observations in the set that belong to category k). In such case, the maximization of diversity decrease is equivalent to the maximization of the quantity H0−Hsplit,<math><mrow is="true"><msub is="true"><mi is="true">H</mi><mn is="true">0</mn></msub><mo is="true">−</mo><msub is="true"><mi is="true">H</mi><mrow is="true"><mi is="true">s</mi><mi is="true">p</mi><mi is="true">l</mi><mi is="true">i</mi><mi is="true">t</mi></mrow></msub><mo is="true">,</mo></mrow></math> where H0 is the initial entropy, and Hsplit is the weighted sum of entropies in the resulting subsets, with weights proportional to the numbers of elements in these subsets and adding up to 1.
The scheme of the consecutive splits of A is equivalent to a system of conditions imposed on the observations’ attributes; such system is a classification tree. A trained tree can be used to categorize observations with unknown class membership, by assigning them to appropriate subsets of A, according to the conditions fulfilled by their components.
Classification with a single decision tree may suffer form instability, which means that the classifier may produce significantly different results for only slightly different training sets. Also, decision trees are prone to overfitting, which leads to decrease of classification accuracy of unknown observations.
Decision tree bagging (bootstrap aggregating) [41] is a method of enhancing the performance of classification based on decision tress. Given a training set with m observations, one can create N new training sets of size m, by sampling with replacement from the original set. Obtained sets, called bootstrap samples, for large m are expected to have the fraction 1−1/e<math><mrow is="true"><mn is="true">1</mn><mo is="true">−</mo><mn is="true">1</mn><mo is="true">/</mo><mi is="true">e</mi></mrow></math> (which is roughly 63.2%) of the unique observations from the original set, the rest being duplicates. A decision tree is trained on each of the bootstrap samples, and the ensemble of N trees becomes a new classifier. When such an ensemble is given an observation to classify, each tree being its part classifies the observation on its own, and then the class that was chosen by most of trees becomes the final result of classification.
A typical method of verifying the performance of classification is cross-validation [4]. Its general idea is dividing the set A of observations with known class membership into two disjoint sets: the training set Atrain and the test set Atest. The classifier is trained on Atrain and then it classifies the observations in Atest, treating them as if their class memberships were unknown. Then the results are compared with the true class memberships of elements of Atest, and the number of correct matches indicates the classifier’s performance. Partitioning A, training the classifier, and testing its performance is repeated a certain number of times, and the average result becomes the final assessment of classification’s accuracy. The methods and rules of partitioning A may vary; the approach utilized in this paper is the repeated random sub-sampling validation (also called Monte Carlo validation), with stratification. It simply performs an independent random stratified partition in each iteration, and each partition obeys a fixed proportion of the numbers of elements in the training and test set. Stratification ensures that all classes are equally represented in the training set.
The computational effort needed to perform the classification depends on the choice of classifiers’ type, which is not necessarily restricted to decision trees and their ensembles. Analysis of networks, on the other hand, is based on algorithms whose exact running time can be found in the literature; it may depend on the type of network (whether it is a sparse network, for example) and its representation (adjacency matrix, adjacency list, etc.). However, it is worth mentioning which stages are crucial for the overall processing time. For networks of sizes as studied in this paper, the only noticeably time-consuming part of network characteristics’ computation is determining the global average shortest path length, as it requires finding all shortest paths in a graph. To illustrate with an example: for the network constructed from Charles Dickens’ David Copperfield (the longest English-language book considered in the analysis) computing all network parameters that do not rely on determining shortest paths (namely, all vertex degrees and clustering coefficients, assortativity, modularity) both in unweighted and weighted version, takes 1.8 s on the PC used to perform the presented analysis (2.7 GHz CPU, 12 GB RAM). Obtaining average shortest path length (local) of the nodes corresponding to 100 most frequent words requires 0.1 s and 0.8 s, for the unweighted and weighted network, respectively. But getting global average shortest path length takes 12.3 s for unweighted, and 141.3 s for the weighted network. Considering that the characteristics’ normalization requires repeating the computations for a number of randomized networks, it makes analysing the global shortest-path-related properties of networks rather impractical. However, as shown below, it turns out that global characteristics are not as effective at distinguishing between authors as local ones; furthermore, among studied network characteristics, these related to the lengths of shortest paths seem to have the weakest discriminative potential. Therefore, for practical purposes, they can be omitted without the loss of accuracy of the proposed approach.
At the beginning, the unweighted networks are studied, as they are simpler and less computationally demanding than the weighted ones. Each of the books listed in Appendix is converted into a network. Then the unweighted global parameters are calculated (all normalized, as described in Section 2.3): average shortest path length ℓ˜u,<math><mrow is="true"><msub is="true"><mover accent="true" is="true"><mrow is="true"><mi is="true">ℓ</mi></mrow><mo stretchy="true" is="true">˜</mo></mover><mi is="true">u</mi></msub><mo is="true">,</mo></mrow></math> clustering coefficient C˜u,<math><mrow is="true"><msub is="true"><mover accent="true" is="true"><mrow is="true"><mi is="true">C</mi></mrow><mo stretchy="true" is="true">˜</mo></mover><mi is="true">u</mi></msub><mo is="true">,</mo></mrow></math> assortativity coefficient r˜u<math><msub is="true"><mover accent="true" is="true"><mrow is="true"><mi is="true">r</mi></mrow><mo stretchy="true" is="true">˜</mo></mover><mi is="true">u</mi></msub></math> and modularity Q˜u<math><msub is="true"><mover accent="true" is="true"><mrow is="true"><mi is="true">Q</mi></mrow><mo stretchy="true" is="true">˜</mo></mover><mi is="true">u</mi></msub></math>. The obtained sets of quantities are treated as vectors in 4-dimensional Euclidean space; each vector corresponds to one text, and each parameter corresponds to one component of a vector. The Euclidean distance is introduced as the measure of similarity (the greater the distance, the lesser the similarity), and hierarchical clustering is applied. The result indicates clear separation of the books with respect to the language (Fig. 4). The books cluster into two groups, each related to one language; only a few of them fall into the “wrong” group.
The set of books is then divided according to the language, and hierarchical clustering is performed again, in the already separated sets of books in English and Polish. The outcome of this analysis (Fig. 5) reveals the emergence of small clusters (consisting of 2–3 texts) corresponding to certain authors. This suggests the existence of connection between the authorship of the text and the structure of related network, expressed by appropriate quantities. Such hypothesis may also be supported by analysing the samples of text much shorter than the whole books. Fig. 6 presents the plots of characteristics ℓu, Qu, Cu of networks that are created from text samples randomly drawn from the books of selected authors, each sample containing 5000 words. It can be observed that although derived from different books, the networks corresponding to texts of the same author tend to be similar in terms of calculated characteristics. This effect is present for any 3-dimensional plot of an arbitrarily chosen triad of the studied characteristics ℓu, Qu, Cu, ru.
To further examine the capability of network parameters of texts to distinguish between authors, statistical classification by an ensemble of decision trees is applied. The analysis is performed in the following way. For a given language, 4 randomly chosen books of each author are taken to form the training set, and the remaining 2 books contribute to the test set. Then the classifier (an ensemble of 100 decision trees) is trained on the training set to categorize books with respect to their author - each book constitutes one observation, whose attributes are the calculated network parameters. After that, the classifier categorizes observations in the test set. Picking training and test sets, training the classifier, and performing classification in the test set is repeated 10,000 times. The average accuracy of classifier (the fraction of correct classifications) in the test set is treated as a measure of the possibility to distinguish between the authors. The reasoning behind this approach can be understood as follows: the greater the dissimilarities between individual authors (in terms of the network parameters), the easier it should be to train an accurate classifier and to categorize the observations in the test set correctly. Thus, the classifier’s performance, which is given by the average accuracy in the test set, may serve as an indicator of network parameters’ potential to distinguish between different writing styles. If the texts were not distinguishable at all, the classification would not be much different from a random choice, and in that case the average accuracy would be equal to 1/n, where n denotes the number of considered authors.
The detailed results of the classification are presented in Table 1, which is organized as follows: a number in the ith row and jth column is the probability of classifying a text of the ith author as a text of the jth author, obtained by counting such classifications in the test set and dividing the number of counts by the number of performed repetitions of the test set selections (10000). The probabilities of correct classifications reside on the diagonal of the table. The sum of values in each row is equal to 1 - as it is the probability of assigning a text to any available author; the sums of values in columns are not given any constraint, as they do not have the interpretation of probability.
The obtained overall average accuracies of classifiers (the overall probabilities of correct classifications) in the test set are: 35% with standard deviation of 10% for English, and 41% with standard deviation of 10% for Polish. Although these values are higher than 12.5% corresponding to a random choice, they are still too low to state that texts are clearly separated. Therefore it is reasonable to look for possible improvements. This is done by including the weighted versions of the network parameters in the calculation, in the next step of the analysis.
At this point, it is worth noting that the results obtained by the clustering and the classification are in decent accordance with each other. Comparing Fig. 5 and Table 1 reveals that the texts of the authors who are likely to be correctly classified are typically grouped together in clustering (for example, the texts of D. Defoe, J. Kraszewski, J. Lam), while the texts of authors weakly distinguished in classification are scattered over the dendrogram (C. Dickens, J. Korczak).
The analysis of weighted network parameters is performed in the same manner as in the case of the unweighted ones. The whole procedure described above is repeated, but this time the networks created from texts are weighted networks, and the characteristics (average shortest path length, clustering coefficient, assortativity coefficient, modularity) are calculated in both the unweighted and the weighted version. The vectors of parameters calculated for each book (this time they are 8-dimensional) again serve as an input of data clustering and classification algorithms.
Table 2 presents the outcome of the classification. It can be seen that including weighted network characteristics into analysis gives a slight improvement of the distinguishability between the English-language authors - the overall average accuracy of English texts classification is 42% with standard deviation of 11%. For Polish books, the increase in the classifier’s performance is rather negligible, the accuracy obtained is 44% with standard deviation of 11%. For some individual authors, the probability of correct classification decreases after including the weighted characteristics of networks. The results of hierarchical clustering in the space with 4 additional dimensions do not change significantly - they are analogous to what can be seen in Fig. 5; for this reason the dendrograms are not presented here.
The classification of texts using only weighted characteristics ℓw˜,<math><mrow is="true"><mover accent="true" is="true"><mrow is="true"><msub is="true"><mi is="true">ℓ</mi><mi is="true">w</mi></msub></mrow><mo stretchy="true" is="true">˜</mo></mover><mo is="true">,</mo></mrow></math> Qw˜,<math><mrow is="true"><mover accent="true" is="true"><mrow is="true"><msub is="true"><mi is="true">Q</mi><mi is="true">w</mi></msub></mrow><mo stretchy="true" is="true">˜</mo></mover><mo is="true">,</mo></mrow></math> Cw˜,rw˜<math><mrow is="true"><mover accent="true" is="true"><mrow is="true"><msub is="true"><mi is="true">C</mi><mi is="true">w</mi></msub></mrow><mo stretchy="true" is="true">˜</mo></mover><mo is="true">,</mo><mover accent="true" is="true"><mrow is="true"><msub is="true"><mi is="true">r</mi><mi is="true">w</mi></msub></mrow><mo stretchy="true" is="true">˜</mo></mover></mrow></math> gives results very similar to these from the analysis of the unweighted networks - the classification accuracy for English and Polish is 37% and 41% with standard deviations of 11% and 10%, respectively. This similarity along with the fact that the classification for both the unweighted and weighted parameters together is not much more accurate, suggests that the information carried by these two types of characteristics is to a large extent overlapping.
The analysis of local parameters of networks is an approach different from what has been done in previous steps. Instead of studying the properties of texts by determining the quantities describing the structure of the whole networks, here the characteristics of the individual vertices (words) are considered. In each language, n most frequently occurring words are chosen from the whole set of texts. Each book is transformed into a network, and the characteristics of vertices corresponding to selected words are determined. The characteristics taken into account are: vertex degree, local clustering coefficient, and average shortest path length, all in both the unweighted and weighted versions. All of these quantities are normalized, in the same manner as in previous calculations - by dividing their value by the average value obtained for the same word in a randomized network. Vertex strength (weighted degree) is an exception here - since it is equal to the frequency of the related word multiplied by 2 (and frequency is invariant under text randomization), its normalized value should be equal to 1 for any word. Therefore str˜(v),<math><mrow is="true"><mover accent="true" is="true"><mrow is="true"><mtext is="true">str</mtext></mrow><mo stretchy="true" is="true">˜</mo></mover><mrow is="true"><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow><mo is="true">,</mo></mrow></math> the normalized strength of a vertex v, is defined as the strength of vertex v in the original network, divided by the sum of strengths of all vertices in the same network: str˜(v)=str(v)/∑u∈Vstr(u)<math><mrow is="true"><mover accent="true" is="true"><mrow is="true"><mtext is="true">str</mtext></mrow><mo stretchy="true" is="true">˜</mo></mover><mrow is="true"><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow><mo is="true">=</mo><mtext is="true">str</mtext><mrow is="true"><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow><mo is="true">/</mo><msub is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">u</mi><mo is="true">∈</mo><mi is="true">V</mi></mrow></msub><mrow is="true"><mtext is="true">str</mtext><mo is="true">(</mo><mi is="true">u</mi><mo is="true">)</mo></mrow></mrow></math>. This is equal to the word’s relative frequency (the fraction of the total number of words in the text that comes from the occurrences of the considered word).
The sets of parameters related to the n most frequent words in each text are again supplied to the data clustering and classification algorithms. Fig. 7 presents the dendrogram of the clustering in the 12-dimensional space of the weighted clustering coefficients of n=12<math><mrow is="true"><mi is="true">n</mi><mo is="true">=</mo><mn is="true">12</mn></mrow></math> most frequent words. The results of text classification in this space are shown in Table 3. The obtained overall classification accuracy is 90% with standard deviation of 8% for English texts, and 86% with standard deviation of 8% for the Polish ones.
The choice of the number of words, n=12,<math><mrow is="true"><mi is="true">n</mi><mo is="true">=</mo><mn is="true">12</mn><mo is="true">,</mo></mrow></math> and the weighted clustering coefficient C˜w<math><msub is="true"><mover accent="true" is="true"><mrow is="true"><mi is="true">C</mi></mrow><mo stretchy="true" is="true">˜</mo></mover><mi is="true">w</mi></msub></math> as the only parameter to consider in the above example is justified by studying the effectiveness of classification with each of the network characteristics separately. It can be noticed (Fig. 8) that the weighted clustering coefficient gives the best results in English and one of the best in Polish for a wide range of the most frequent words studied. In both languages, it is sufficient to analyse the 11–12 most frequent words to obtain the accuracy of 85–90%; further increase in the number of words does not improve the classifier’s performance.
From the results obtained, it can be obviously concluded that analysing the local parameters of selected words leads to much better distinguishability between the authors than studying the global characteristics of the networks. In the “local approach” the number of considered attributes of each text can be much greater than when studying the networks globally, as one can choose the number of analysed words arbitrary. However, even for equal dimension of the attribute space, the networks’ local properties (weighted clustering coefficient, for example) provide the significantly higher texts’ classification accuracy.
It can be found in the literature on computational stylometry that a very often utilized approach to authorship attribution is representing a text as a collection of words along with their frequencies (the so-called bag-of-words representation), and comparing particular words’ frequencies is among the most reliable methods to discriminate between authors [20], [29], [33], [39], [44], [49]. As mentioned in Section 2, the normalized node strength in a weighted word-adjacency network is equal to the corresponding word’s relative frequency; therefore network analysis may be viewed as a generalization of the bag-of-words approach: it incorporates all the information about the numbers of word occurrences.
The fact that the word frequency works well in identifying authors can be observed in Fig. 8. The classification based on normalized vertex strength leads to the best or one of the best results among all the studied network characteristics. A question arises, whether it is viable to introduce the network formalism when a satisfying result can be obtained by studying only the numbers of word occurrences. It turns out that a profit can be made from combining the purely network-based parameters with the frequencies. For example, a classification in the space constructed from both the relative frequencies and the normalized weighted clustering coefficients leads to accuracy higher than achievable by any of the two methods separately, of course at the cost of doubling the dimension of attribute space. This is shown in Fig. 9. Furthermore, these two parameters seem to exploit all the available information that is useful with respect to authorship recognition, because including further network characteristics into the classification does not improve its accuracy.
From a practical point of view, the above result may be useful in classifying texts in which the set of available words is limited. This may happen, for example, when studied texts are much shorter than these considered here and the words that are the most frequent there are topic-specific and do not carry valuable information about an individual writing style. According to the Zipf’s law, the frequency of the nth most frequent word in a text is proportional to 1/n, so the number of words with the number of occurrences high enough to be reasonably included into analysis decreases substantially when texts are shorter.
The results presented in Fig. 8 may suggest which properties of the networks seem to be in a way universal for the language, and which differ among authors. Aside from word frequency, the weighted clustering coefficient turned out to be most effective in capturing the diversity of writing styles, when considering both the English and Polish texts. Clustering coefficient Cw(v) (unnormalized) of a vertex v describes the structure of the neighbourhood of v - it measures the contribution to the strength of v coming from pairs of its neighbours that are connected by an edge. The normalized coefficient, C˜w(v),<math><mrow is="true"><msub is="true"><mover accent="true" is="true"><mrow is="true"><mi is="true">C</mi></mrow><mo stretchy="true" is="true">˜</mo></mover><mi is="true">w</mi></msub><mrow is="true"><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow><mo is="true">,</mo></mrow></math> reflects the deviation of this structure from the structure that would be typically observed in a randomized network. The fact that it allows for a quite accurate classification suggests that the organization of such local structures in the word-adjacency networks may be considered as a feature of individual language that is able to distinguish one author from another.
On the other hand, the average shortest path length, especially in its weighted version, gives the weakest classifier. Thus, one may anticipate that this quantity is shared among the word-adjacency networks even when they are associated with different language users. Indeed, during the construction of a word-adjacency network from any sufficiently long text, a set of the most frequent words form a densely-connected cluster. Such cluster is a subnetwork, whose any two vertices are connected by a path of low length. This can be noticed when comparing the average shortest path length in such a subnetwork, ℓsub, with the average shortest path length in the whole network, ℓ. Fig. 11 presents the strip charts of the distributions of the quotient ℓsub/ℓ, for all the studied networks, with the subnetworks consisting of the 50 most frequent words. For the unweighted networks, the value of ℓsub/ℓ is usually around 0.4-0.5 (because the smallest possible distance between two distinct vertices is equal to 1); however, in weighted networks it is typically smaller than 0.1 (as distances can be made arbitrarily small when edges’ weight increase). Hence, in the weighted networks, for any v being one of, say, the 50 most frequent words, the local average shortest path length ℓ(v) has roughly the same value. This is the reason why the average shortest path length gives a poor insight into the way of using particular words by different authors. The existence of a cluster with high edge density, composed of the most frequent words, is observable both in original and randomized networks; therefore it can be viewed as an effect of the principle of word-adjacency network construction, related to the word frequency distribution.
It may be interesting how including punctuation into the calculations affects the distinguishability of authors. It turns out that the utilized approach of treating punctuation marks as usual words [22] is justified: the classification accuracy decreases if punctuation is removed, even when the dimension of the attribute space is preserved (the removed punctuation marks are replaced with subsequent words from the list of the most frequent words). For example, for the normalized weighted clustering coefficient, C˜w(v),<math><mrow is="true"><msub is="true"><mover accent="true" is="true"><mrow is="true"><mi is="true">C</mi></mrow><mo stretchy="true" is="true">˜</mo></mover><mi is="true">w</mi></msub><mrow is="true"><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow><mo is="true">,</mo></mrow></math> of n=12<math><mrow is="true"><mi is="true">n</mi><mo is="true">=</mo><mn is="true">12</mn></mrow></math> the most frequent words (not including punctuation marks), the average classification accuracy is 75% for English and 76% for Polish. A substantial drop from the values obtained previously suggests that the role of punctuation in expressing individual writing style is non-negligible.
Another interesting subject is how the classification is affected by the length of the timespan during which the studied books were published. The publication dates of the studied books vary from 1719 to 1949. It is well known that language evolves over time; some aspects of its evolution can be captured by quantitave means and related to the processes taking place in a society and its culture [24], [25], [31]. Such cultural and linguistic changes may possibly affect authorship attribution - it can be suspected that literary works written around the same time are more likely to be confused than these separated by a long time interval. In order to get some preliminary insight into this issue (based on the texts selected here), the following approach is utilized. For each author, a “time centroid” is determined as an arithmetic mean of publication dates of the works studied in this paper. Then a distance between the centroids (in years) is assigned to each pair of authors and treated as a time interval separating them. Next, for each two authors a classification considering only their works is performed multiple times (feature space consists of weighted degrees and clustering coefficients of the 12 most frequent words; the texts of each author are split into training and test set with ratio 4:2). The error rates in such pairwise classifications (for each pair of authors) are then plotted versus time intervals (Fig. 10) to assess whether the authors separated by greater time intervals are easier to distinguish between or not. At the first glance, it seems that in the case of English, for the writers who are separated by more than 100 years the probability of misclassification is lower than 2%, while for others it varies more significantly. However, it must be noticed that all except one time interval greater than 100 years pertain to Daniel Defoe, who lived much earlier than the rest of the writers. When considering only the time intervals shorter than 100 years (Fig. 10, inset), no clear relationship between the classification’s accuracy and the length of the time interval separating authors can be observed. It must be remembered though, that these results do not pretend to be general - they apply to the set of studied texts, but not necessarily to other sets of literary works; the reliable analysis of the effect of language evolution on authorship attribution, possibly with the proposed approach, would require texts from a larger timespan.
Two additional remarks regarding the obtained results can be made. Firstly, it can be noticed in Fig. 9 that for the Polish books, reaching the limit of the classification accuracy requires less words than for the books in English (it is most visible in the case of classification based on str˜(v)<math><mrow is="true"><mover accent="true" is="true"><mrow is="true"><mtext is="true">str</mtext></mrow><mo stretchy="true" is="true">˜</mo></mover><mrow is="true"><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow></mrow></math> and on both str˜(v)<math><mrow is="true"><mover accent="true" is="true"><mrow is="true"><mtext is="true">str</mtext></mrow><mo stretchy="true" is="true">˜</mo></mover><mrow is="true"><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow></mrow></math> and C˜(v)<math><mrow is="true"><mover accent="true" is="true"><mrow is="true"><mi is="true">C</mi></mrow><mo stretchy="true" is="true">˜</mo></mover><mrow is="true"><mo is="true">(</mo><mi is="true">v</mi><mo is="true">)</mo></mrow></mrow></math>). Secondly, the differences between the accuracies of classification based on the weighted network characteristics and the accuracies of classification employing the characteristics in unweighted version, are smaller for the Polish texts than for the English ones. This can be observed in Fig. 8, for example, for the clustering coefficient.
These effects may perhaps be related to the general structural differences between the languages: while in Polish, like in all Slavic languages, the syntactic role of a word in a sentence is determined mainly by inflection, the English syntax relies more on the word order and on utilizing function words (articles, auxiliary verbs, etc). Function words are among the most frequent ones; one may anticipate that in a language whose grammar imposes stronger conditions on their usage and order, there is less room for the diversity related to an individual writing style. In such a case, more words need to be included into an analysis to obtain reliable accuracy of the authorship classification. Inflection, on the other hand, leads to the increase of the number of words that are treated as distinct - as during the construction of networks the words are not lemmatized. If one constructs the weighted word-adjacency networks from the English and Polish texts samples of equal length, these networks will have the same sum of edges’ weights, but the network corresponding to a Polish text will have more vertices. Since word-adjacency networks are connected (every vertex is reachable from any other vertex) and have edge weights expressed by natural numbers, it can be hypothesized that from two weighted networks with the same sum of edges’ weights, the network with the larger number of vertices should generally have more low-weight edges and therefore be more similar to an unweighted network. If so, the weighted and the unweighted characteristics of networks should differ less for the Polish texts than for the English ones, as observed. It must be remembered, however, that the presented explanations can only be treated as suppositions; determining the relationship between the two discussed effects and the attributes of the languages, in a reliable way, would require a separate analysis which is beyond the scope of this paper.
The presented results confirm the usability of complex networks as a representation of natural language. Though simple in construction and intuitive, they carry within their structure exploitable information on the underlying language sample. Constructing such networks from English and Polish literary texts and studying their properties have led to the possibility of distinguishing individual writing styles. The fact that the presented approach works well for both Polish and English texts suggests that it can probably be treated as applicable to a vast group of languages - as Polish and English are examples of the languages substantially different from each other, in terms of the origin, morphology, and grammar features.
It can be observed that the vectors representing texts belonging to the same author have a noticeable tendency to group together in the space of global network characteristics, both in the case of unweighted and weighted networks. Investigating this tendency, by employing decision tree ensembles to perform the classification of texts with respect to authorship and with network parameters as attributes, results in the classification accuracy higher than the accuracy of a random choice; nevertheless, it is rather questionable to state that the global properties of networks are able to distinguish between authors effectively (at least within the studied set of texts). The networks’ property of having different global parameters for texts with different authorship, that is observed for selected groups of authors (Fig. 6), becomes much less evident as the number of authors grows. This suggests that the global features of word-adjacency networks are to a considerable extent universal for the language and non-specific to individual language users.
However, a division of the set of texts into subsets consisting of works of the same author is possible by analysing the local properties of networks. Calculating the vertex parameters corresponding to the several most frequent words (or punctuation marks), creating a vector of these parameters for each text, and applying the clustering or classification algorithm allows for the evident separation of the texts with respect to their authorship. Among the studied network characteristics, the vertex strength and the weighted clustering coefficient (in an appropriately normalized form) turn out to be the most effective in capturing individual language features, for both the English and the Polish texts. Data clustering in the clustering coefficient’s space for only the 12 most frequent words (including punctuation marks) reveals the emergence of text groups that clearly can be related to particular authors. The classification with the decision tree ensembles results in obtaining the average accuracy of around 85–90%. This confirms that the attributes of selected vertices in a word-adjacency network can be treated to a large extent as typical to an individual style. As these attributes describe a given vertex along with its network neighbourhood, it can be concluded that they are able to capture the specific way the individual authors use particular words and punctuation marks in their writing.
One could argue that because the vertex strength is directly related to the word frequency, and because various local characteristics may be correlated with vertex strength, the method of distinguishing between the authors, based on an analysis of these characteristics, does not differ significantly from the basic approach to authorship attribution, relying on comparing word frequencies. However, it must be remembered that in order to eliminate purely frequency-based effects on the characteristics other than vertex strength, all the studied quantities are normalized. This is done by relating characteristics’ values to the average values in the networks corresponding to randomized texts. It may therefore be stated that the analysis of word frequencies and the analysis of network parameters are distinct; also, the fact that network parameters and word frequencies combined lead to the classification results better than the results for any of them studied separately indicates that both these types of text features carry complementary, non-redundant information.
From a practical perspective, the correspondence between the text authorship and the structure of the word-adjacency network seems to be potentially useful when combined with other lexical features of the text. As mentioned above, the accuracy of the classification involving word frequencies (which do not have to be treated as the network parameters) and clustering coefficients (which are purely network-based) achieves the results better than the results obtained from the two methods separately; with such an approach it turns out to be sufficient to select only 4–5 words to get an average of 80% of the correct classifications. When dealing with the problem of authorship attribution in textual data sets where the number of words available for analysis is somehow limited, it may be profitable to combine the extraction of the basic text features with the network analysis, especially since it requires little preprocessing.
It is worth noting that the presented approach to explore the diversity of language styles is very simple and straightforward - it relies on studying the characteristics of a few most frequent words and punctuation marks. In a future study, it would be recommended to examine the possibility of word selection by the criteria other than frequency, and also to investigate whether there are other features of language that can be captured by studying the structure of linguistic networks.