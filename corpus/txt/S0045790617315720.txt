In recent years, the Chinese multimedia industry, especially the film industry, has great development. From New Year's Day of 2016 to February 23rd, the total box-office revenues surpassed 10 billion. For example, the box-office revenue of a domestic movie “Mermaid”, directed by Stephen Chow, had been smashing historic record since it was shown. This most dynamic market is attracting more and more investment capital. However, due to the box office of different film differs greatly, to get a stable investment profit is difficult.
Fig. 1 displays the film box-office in low-to-high sorted order. The horizontal axis X depicts the number of films on screen from 2015 to May 2016, while the vertical coordinate Y represents the box-office receipt of each film. Based on the revenues data retrieved from the website named ‘M1905’ with help of jsoup crawler, we found that almost one fourth of films occupy a large cut of the market, which means that the probability of a box-office hit is only about 25% vice versa.
With this observation, there are two problems which are worthy of study. Firstly, which features domestic films with high box-office shall have. Secondly, whether it is possible to forecast a set of features by which a successful Chinese domestic movie can be produced. In this paper, one hundred million yuan revenue is set as the criterion of high receipt from a commercial standpoint.
We discuss a challenging problem of predicting the potential “successful” (high box-office receipts) characteristics of Chinese domestic motion pictures. Most research works mainly focus on both traditional factors (cast, producer, issuer, genre, award, etc.) and online signals (web search counts, comment counts, view times, like numbers, dislike numbers, etc.), few of them have taken the semantic resource of films into consideration. Therefore, using semantic resource is a novel approach to discover potential hit films in Chinese market.
The rest of this paper is organized as follows. Section 2 presents related work on analyzing movie itself and market performance. In Section 3, we briefly introduce the core concepts utilized in this paper. In Section 4, we describe the construction of Chinese domestic movie complex network. Sections 5 and 6 present the complex network measurement of domestic movie features and genetic optimization. Finally, Section 7 summarizes this paper.
There already exist a great number of works with various methods on box office prediction. Most of works built analytical models based on two distinct types of factors. One is the set of classical attributes. The other is users’ anticipations and responses collected from various online platforms.
References [1], [2], [3], [4], [5], [6], [7], [8], [9], [10] proposed to predict market responses with the help of internet user behavior, such as web search clicks, reviews collected from social networks and Wikipedia, and indexes on video websites etc. These user behaviors could be processed together in diversified ways, some of which are popular approaches, e.g. correlation analysis, sentiment mining and machine learning. Furthermore, some papers even try to combine these online resources with the offline data from theatres, to solve the problems of data deficiency, distortion, or pollution.
Some researchers studied the relationship between market performance and traditional elements in references [11], [12], [13], [14], [15], including actor, director, budget, script, award, genre, even sequel and so forth, where they mainly resort to correlation analysis. However, they have not drawn a common conclusion. From our perspectives, we think that multiple factors play an integrated role as so-called content while each of them weights distinctively to different films. Jinni had gone much further than all the other video competitors by taking a taxonomic approach, cataloging titles, analyzing user reviews and metadata as presented in reference [16]. This novel technology is also used to power semantic discovery engines for movies and TV shows.
It should be noticed that Chinese movie market is also studied by using machine learning and correlation analysis on online and offline data. Reference [8] proposed a method of utilizing Tencent microblog to predict the box-office revenues of movies screened in China. References [12], [13] analyzed the relationship between the receipts and classical elements of movies released in China. Reference [17] applied the algorithms of pruned random forest to analyze data from theatres to predict box office receipts. Reference [18] discussed the relationship between WOM (online word of mouth) and the box-office of foreign films in China.
From all the papers listed above, we could get three conclusions. First, nearly none of them specifically discussed Chinese domestic films market which is featured by rapid growth in these years as shown in Fig. 2.
Secondly, the issues that the papers studied Chinese movie market concerned are still subject to further research. For example, Tencent microblog had already withdrawn from the market, so the method introduced in the reference [8] is not applicable. WOM could not be retrieved before releasing, thus the method provided in the reference [18] can not be used for revenues prediction.
Last but not the least, box-office is determined by multiple factors which are interrelated and interact on each other. Therefore, the method of linear regression based on single factor, adopted by references [12], [13], is inappropriate. Moreover, as mentioned in references [19], lacking of unified classification standards for all films could also lead to inaccurate prediction.
We introduce the four core concepts of this paper, including IoT middleware, Chinese domestic movie genome, community detection besides genetic algorithm and fitness function.
Smart mobile devices embedded with IoT middleware are good at ensuring a high quality of data collection [20]. In our environment, to utilize fragmental time of movie critics, we introduce the solution of IoT middleware technology. When the app on a smart mobile device is started up, the IoT device on the bottom layer collects the signal of pressing buttons transmitted through usb on-the-go (OTG) cable. These sensing data is sent through the sending module of the IoT middleware and received by a background analysis platform.
Each film is comprised of a series of genes that contain semantic meta-data. The whole set of genes of a film is named as genome. These meta-data is called gene elements, which include not only some traditional semantics such as awards, musical types, scene locations and levels of violent content, but also more fine-grained semantics such as mood, plot, and audience type and whether it is based on a true story etc. In fact, this concept has been applied for movie recommendation and analysis in [21], but it has never been applied for Chinese domestic movies recommendation as far as we know. In view of the better maturity of Hollywood film industry, we introduce the classification standard of Jinni and make a number of modifications according to the characteristics of Chinese domestic movies based on IMDb Top 250 sample database.
The graph of a complex network is quite important to characterize the complex relations among a set of instances, herein each instance is a vertex and the interaction between a pair of vertices is an edge. Many complex systems can be modeled as complex networks such as technological networks, social networks, biological networks and so on. In a complex network, a community represents a group of nodes in a network where nodes inside the community have more internal connections than external connections [22], [23]. Community detection objective is to use as little information as accurately as possible the network community structure. Research on this filed is very useful for the analysis of the structures and functions of complex networks.
Genetic algorithm (GA) is a heuristic learning model following principles drawn from natural evolution and selective breeding. It consists of probabilistic search procedures designed to work on large state spaces in which each state can be represented by a string. The GA is inherently parallel, using a distributed set of samples from the space as strings to generate a new set of samples. Compared with traditional hill-climbing and derivative based techniques, the GA has been successful applied to solving this kind of ill-posed problems (such as multimodal or non-differentiable). There are three features that distinguish GA from other search methods: (1) A population of structures that can be interpreted as candidate solutions to the given problem; (2) The competitive selection of structures for reproduction, is based on the fitness of each structure; (3) Idealized genetic operators that alter the selected structures to create new structures for further testing [24]. The key part of GA is the fitness function, which is derived from both the movie complex network and the community detection result in this paper.
China has begun to keep explicit, clear and accurate box office records since 2012. Therefore, we can collect information of the movies of which revenues are over one hundred million yuan from 2012 to 2015 from the ‘Mtime’ website. We utilize this movie set as the training dataset, and add descriptive gene elements to each film by referring to Jinni's classification standard. We further choose the movies with good market performance from January to August in 2016 as the testing dataset. In order to label gene elements to each film, we invite five connoisseurs to construct the initial gene elements pool and set up our judge group involving them. There are nearly 200 domestic movies to be processed, to label them accurately and efficiently, the connoisseurs’ fragmented time is considered to be occupied, thus we provide them some new equipment, each of which is the combination of IoT technology and smart mobile device (Fig. 3).
The smart mobile device works as the multimedia player and the application (app) on it is for label exhibition and triggering the IoT middleware. The usb OTG cable connects the smart mobile device and the IoT middleware together. Once the scanning module receives the signal from the app, it prepares to get any input from the movie connoisseurs. After a connoisseur presses the yes (1) or no (0) button, the digital bit will be sent to the analysis platform by the sending module. Due to security and intellectual property consideration, the mobile device is not used to record and transmit the signal. The analysis platform is for decision-making which follows the best three out of five counts policy, i.e. any decision must have supports of three critics at least. Each movie is characterized by the genome, e.g. “Mr. Six” shown in the following figure.
As is shown in Fig. 4, a genome to a movie is composed of ten types of genes, which are mood, plot, genre, place, praise, attitude, based on, award, time and audience which is not listed in the figure. Taking into account the comprehensiveness, we combine some historical web resources about Jinni and classify them, which is more abundant than the one applied in [20].
A gene is composed of various gene elements, also named features, which characterize this movie with more fine-grained semantics. Compared with IMDb Top 250, we modified and added some gene elements belonging to plot, place, award and time types, so that we have more than six hundred gene elements in our database and this database is supposed to be updated with the growth of high box-office films. In this paper, we aim to find out which sets of gene elements are more powerful than others, i.e. which elements are more prone to produce good selling movies, by means of a complex network graph composed of movie gene elements.
We adopt a common method to build a movie complex network. Each gene element is represented by a node in the network while gene and genome are excluded. For instance, as shown in Fig. 4, ‘Tense’, ‘Rescue’, ‘Action’, ‘Beijing’ etc. are those features, which are also called gene elements. They are represented as nodes in the movie complex network. The gene, such as ‘Mood’, ‘Plot’, ‘Genre’, ‘Place’ etc. and the movie name ‘Mr. Six’ are not nodes certainly. This complex network is constructed following three rules in our designed algorithm:
If a new gene element in the pair is included, a node is created and a corresponding edge is added in the network.
If two elements co-occur in the genome, an edge will be created in the network.
If two elements co-occur again in other genomes, the edge weight will be increased by one. So the edge weight represents the co-occurrence number of two specified gene elements over the entire dataset with all the movie genomes.
An edge between two nodes indicates two elements of genes that occur simultaneously in the genome of one movie. Therefore, ‘tense’ and ‘rescue’ will produce an edge since they co-occur in the genome of this movie. The edge weight will be increased by one automatically if our algorithm discovers another pair of the two nodes in any other movie genome. A node will be created and the corresponding edge will also be added if a gene element is not included in this complex network. Consequently, the complex network of high box-office domestic films is created with our algorithm as shown in Fig. 5.
To illustrate and compare the effectiveness of community detection algorithms in movie complex network, we introduce the BGLL algorithm [25]. It is a modularity-based algorithm. And the modularity is a scalar value between −1 and 1, this value measures the density of links inside communities as compared to links between communities. In the case of weighted networks, it is described as: (1)Q=12m∑i,j[Ai,j−kikj2m]δ(ci,cj)<math><mrow is="true"><mi is="true">Q</mi><mo is="true">=</mo><mfrac is="true"><mn is="true">1</mn><mrow is="true"><mn is="true">2</mn><mi is="true">m</mi></mrow></mfrac><munder is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">i</mi><mo is="true">,</mo><mi is="true">j</mi></mrow></munder><mrow is="true"><mrow is="true"><mo stretchy="true" is="true">[</mo><mrow is="true"><msub is="true"><mi is="true">A</mi><mrow is="true"><mi is="true">i</mi><mo is="true">,</mo><mi is="true">j</mi></mrow></msub><mo is="true">−</mo><mfrac is="true"><mrow is="true"><msub is="true"><mi is="true">k</mi><mi is="true">i</mi></msub><msub is="true"><mi is="true">k</mi><mi is="true">j</mi></msub></mrow><mrow is="true"><mn is="true">2</mn><mi is="true">m</mi></mrow></mfrac></mrow><mo stretchy="true" is="true">]</mo></mrow><mi is="true">δ</mi><mrow is="true"><mo stretchy="true" is="true">(</mo><mrow is="true"><msub is="true"><mi is="true">c</mi><mi is="true">i</mi></msub><mo is="true">,</mo><msub is="true"><mi is="true">c</mi><mi is="true">j</mi></msub></mrow><mo stretchy="true" is="true">)</mo></mrow></mrow></mrow></math>where Ai,j represents the weight of the edge between i and j, ki=∑jAi,j<math><mrow is="true"><msub is="true"><mi is="true">k</mi><mi is="true">i</mi></msub><mo is="true">=</mo><msub is="true"><mo is="true">∑</mo><mi is="true">j</mi></msub><msub is="true"><mi is="true">A</mi><mrow is="true"><mi is="true">i</mi><mo is="true">,</mo><mi is="true">j</mi></mrow></msub></mrow></math> is the sum of the weights of the edges attached to vertex i, where kj is the sum of the weights of the edges attached to vertex j, ci is the community to which vertex iis assigned, the δ(u, v) function is 1 if u = v or 0 otherwise and m=12∑i,jAi,j<math><mrow is="true"><mi is="true">m</mi><mo is="true">=</mo><mfrac is="true"><mn is="true">1</mn><mn is="true">2</mn></mfrac><munder is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">i</mi><mo is="true">,</mo><mi is="true">j</mi></mrow></munder><msub is="true"><mi is="true">A</mi><mrow is="true"><mi is="true">i</mi><mo is="true">,</mo><mi is="true">j</mi></mrow></msub></mrow></math>.
BGLL algorithm is divided into two steps that are looped iteratively. Assume a weighted network with N nodes.
First step:
(1) Allocate a unique community to each node of the network. In this initial partition the number of communities is the same with that of nodes.
(2) For each node i we consider the neighbors j of i, we evaluate the gain of modularity that would take place by removing i from its community and by placing it in the community of j. The node i is then placed in the community for which this gain is maximum and positive, or i stays in its original community.
(3)This process is applied repeatedly and sequentially for all nodes until no further improvement could be achieved.
Note that the ordering of the nodes could influence the computation time and part of the algorithm efficiency results from the fact that the gain in modularity ΔQ obtained by moving an isolated node i into a community C can easily be computed by:(2)ΔQ=[Σin+ki,in2m−(Σtot+ki2m)2]−[Σin2m−(Σtot2m)2−(ki2m)2]<math><mrow is="true"><mstyle mathvariant="normal" is="true"><mi is="true">Δ</mi></mstyle><mi is="true">Q</mi><mo is="true">=</mo><mrow is="true"><mo stretchy="true" is="true">[</mo><mrow is="true"><mfrac is="true"><mrow is="true"><msub is="true"><mstyle mathvariant="normal" is="true"><mi is="true">Σ</mi></mstyle><mrow is="true"><mi is="true">i</mi><mi is="true">n</mi></mrow></msub><mo is="true">+</mo><msub is="true"><mi is="true">k</mi><mrow is="true"><mi is="true">i</mi><mo is="true">,</mo><mi is="true">i</mi><mi is="true">n</mi></mrow></msub></mrow><mrow is="true"><mn is="true">2</mn><mi is="true">m</mi></mrow></mfrac><mo is="true">−</mo><msup is="true"><mrow is="true"><mrow is="true"><mo stretchy="true" is="true">(</mo><mfrac is="true"><mrow is="true"><msub is="true"><mstyle mathvariant="normal" is="true"><mi is="true">Σ</mi></mstyle><mrow is="true"><mi is="true">t</mi><mi is="true">o</mi><mi is="true">t</mi></mrow></msub><mo is="true">+</mo><msub is="true"><mi is="true">k</mi><mi is="true">i</mi></msub></mrow><mrow is="true"><mn is="true">2</mn><mi is="true">m</mi></mrow></mfrac><mo stretchy="true" is="true">)</mo></mrow></mrow><mn is="true">2</mn></msup></mrow><mo stretchy="true" is="true">]</mo></mrow><mo is="true">−</mo><mrow is="true"><mo stretchy="true" is="true">[</mo><mrow is="true"><mfrac is="true"><msub is="true"><mstyle mathvariant="normal" is="true"><mi is="true">Σ</mi></mstyle><mrow is="true"><mi is="true">i</mi><mi is="true">n</mi></mrow></msub><mrow is="true"><mn is="true">2</mn><mi is="true">m</mi></mrow></mfrac><mo is="true">−</mo><msup is="true"><mrow is="true"><mrow is="true"><mo stretchy="true" is="true">(</mo><mfrac is="true"><msub is="true"><mstyle mathvariant="normal" is="true"><mi is="true">Σ</mi></mstyle><mrow is="true"><mi is="true">t</mi><mi is="true">o</mi><mi is="true">t</mi></mrow></msub><mrow is="true"><mn is="true">2</mn><mi is="true">m</mi></mrow></mfrac><mo stretchy="true" is="true">)</mo></mrow></mrow><mn is="true">2</mn></msup><mo is="true">−</mo><msup is="true"><mrow is="true"><mrow is="true"><mo stretchy="true" is="true">(</mo><mfrac is="true"><msub is="true"><mi is="true">k</mi><mi is="true">i</mi></msub><mrow is="true"><mn is="true">2</mn><mi is="true">m</mi></mrow></mfrac><mo stretchy="true" is="true">)</mo></mrow></mrow><mn is="true">2</mn></msup></mrow><mo stretchy="true" is="true">]</mo></mrow></mrow></math>
where Σin is the sum of the weights of the edges inside C, Σtot is the sum of the weights of the edges incident to nodes in C, ki is the sum of the weights of the edges incident to node i, ki,in is the sum of the weights of the edges from i to nodes in C and m is the sum of the weights of all the edges in the network.
Second step:
(4) The weights of the links between the new nodes are given by the sum of the weights of the links between nodes in the corresponding two communities.
(5) Links between nodes of the same community lead to self-loops for this community in the new network.
(6) The first step is reapplied to the resulting weighted network and iterated.
Note that the second step consists in building a new network whose nodes are now the communities found during the first step. The passes are iterated until there are no more changes and a maximum of modularity is attained.
The BGLL algorithm described above is employed on the Chinese domestic movie complex network depicted in Fig. 5 and four distinct communities are detected. We utilize different colors to paint these communities, which is shown in Fig. 6.
The most influential elements in each community are identified by their eigen vector centralities (EVC), which are calculated as: (3)EVCv=1λ∑t∈neighbors(v)αv,tEVCt<math><mrow is="true"><mi is="true">E</mi><mi is="true">V</mi><msub is="true"><mi is="true">C</mi><mi is="true">v</mi></msub><mo is="true">=</mo><mfrac is="true"><mn is="true">1</mn><mi is="true">λ</mi></mfrac><munder is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">t</mi><mo is="true">∈</mo><mi is="true">n</mi><mi is="true">e</mi><mi is="true">i</mi><mi is="true">g</mi><mi is="true">h</mi><mi is="true">b</mi><mi is="true">o</mi><mi is="true">r</mi><mi is="true">s</mi><mrow is="true"><mo stretchy="true" is="true">(</mo><mi is="true">v</mi><mo stretchy="true" is="true">)</mo></mrow></mrow></munder><mrow is="true"><msub is="true"><mi is="true">α</mi><mrow is="true"><mi is="true">v</mi><mo is="true">,</mo><mi is="true">t</mi></mrow></msub><mi is="true">E</mi><mi is="true">V</mi><msub is="true"><mi is="true">C</mi><mi is="true">t</mi></msub></mrow></mrow></math>
Reference [20] introduced that λ is a constant, EVCi represents the eigen vector centrality of vertex i and αv,t equals to 1 if vertex vis linked to vertex tin movie complex network (0 otherwise). We propose two improvements of this method. Firstly, there will be many different eigenvalues (λ) for which an eigen vector solution exists. However, according to Perron–Frobenius theorem, only the greatest eigen value results in the desired centrality measure. Therefore, we decide to follow this rule. Secondly, since the movie genome co-occurrence network is not an unweighted directed graph but a weighted one, we deem that αv,t equals to the weight value of the connection between vertex v and vertex t instead of 1 (0 otherwise). Taking an example depicted in Fig. 7.
The EVC values of three nodes are the same in matrix A, which is 0.5774 through calculation. There is no obvious center node in the left graph. While in matrix B, we can conclude that node ‘a’ is the core based on both intuition observation and scientific computation of EVC values, which are 0.6945 of node ‘a’, 0.5088 of node ‘b’ and 0.5088 of node ‘c’ in the right paragraph. Consequently introducing edge weight allows us to identify the importance of the node in movie complex network more quickly and reasonably.
Gene elements with highest eigen vector centralities are exhibited in Table 1. Community one contains gene elements which are sentimental, human_nature, tragic_love, unfulfilled_love, like “Lost and Love” (also named “Shi gu”). Community two contains gene elements of tense, chaos_and_mayhem, twist_and_turns, comedy and “Goodbye Mr. Loser” (also named “Xia Luo Te Fan Nao”) falls into this category. Community three contains gene elements which are emotional, social_misfits, twenty-first century and good friend, just as “Mr. Six” (also named “Lao Paor”). Community four contains gene elements of rivalry, uplifting, teens and animal_life, like “Boonie Bears Series” (also named “Xiong Chu Mo”) belongs to this type.
Our objective is to find the optimal cluster of gene elements which could produce a box office success, which is described in Fig. 8. Genetic algorithm (GA) is a suitable algorithm which combines the characteristics of gene elements and genetic optimization. Traditional GA is divided into three steps: (1) interpret all the elements into binary strings and select the initial population size; (2) evaluate the fitness of every gene in the population with a defined fitness function; (3) update the cluster of gene elements continuously through the methods of selection, crossover and mutation until the calculation result of fitness function does not improve any more.
The fitness function in reference [20] is composed of three parts, EVC of good films, EVC of bad films and clustering coefficients of communities. (4)Fitnessx=2∑i∈MGCt250αi−∑j∈MGCt100αj+1k∑k=1Ckδck<math><mrow is="true"><mi is="true">F</mi><mi is="true">i</mi><mi is="true">t</mi><mi is="true">n</mi><mi is="true">e</mi><mi is="true">s</mi><msub is="true"><mi is="true">s</mi><mi is="true">x</mi></msub><mo is="true">=</mo><mn is="true">2</mn><munder is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">i</mi><mo is="true">∈</mo><mi is="true">M</mi><mi is="true">G</mi><msup is="true"><mi is="true">C</mi><mrow is="true"><mi is="true">t</mi><mn is="true">250</mn></mrow></msup></mrow></munder><msub is="true"><mi is="true">α</mi><mi is="true">i</mi></msub><mo is="true">−</mo><munder is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">j</mi><mo is="true">∈</mo><mi is="true">M</mi><mi is="true">G</mi><msup is="true"><mi is="true">C</mi><mrow is="true"><mi is="true">t</mi><mn is="true">100</mn></mrow></msup></mrow></munder><msub is="true"><mi is="true">α</mi><mi is="true">j</mi></msub><mo is="true">+</mo><mfrac is="true"><mn is="true">1</mn><mi is="true">k</mi></mfrac><munderover is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">k</mi><mo is="true">=</mo><mn is="true">1</mn></mrow><msub is="true"><mi is="true">C</mi><mi is="true">k</mi></msub></munderover><msub is="true"><mi is="true">δ</mi><msub is="true"><mi is="true">c</mi><mi is="true">k</mi></msub></msub></mrow></math>where i, j ∈ x are the gene element of gene x, αi is the eigen vector centrality of the node element i, represents the number of different movie complex network communities in which the element of x lies, ck is the subset of x that lies in community k of MGC250 and δS is the clustering coefficient of nodes in set s.
Compared to our circumstance, we put forward three improvements here. First, the second part is dropped because of no standard to determine a domestic “bad” movies. Second, the coefficient value of the first part is set to two in Eq. (4), but there is no reasonable explanation in reference [21]. Consequently, we utilize the normalization method. Lastly but the most importantly, the coefficient of the third part is a simple average and it is also unreasonable to set this value (which is 1) to the whole third part. Therefore, we use parameter λ as a balance factor in this part. We introduce a novel evaluation method of optimization in the following formulation. Note that ck is the subset of x that lies in community k of successful Chinese domestic motion pictures here. (5)Fitnessx=∑αi+λ∑k=1Ckδck<math><mrow is="true"><mi is="true">F</mi><mi is="true">i</mi><mi is="true">t</mi><mi is="true">n</mi><mi is="true">e</mi><mi is="true">s</mi><msub is="true"><mi is="true">s</mi><mi is="true">x</mi></msub><mo is="true">=</mo><mo is="true">∑</mo><msub is="true"><mi is="true">α</mi><mi is="true">i</mi></msub><mo is="true">+</mo><mi is="true">λ</mi><munderover is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">k</mi><mo is="true">=</mo><mn is="true">1</mn></mrow><msub is="true"><mi is="true">C</mi><mi is="true">k</mi></msub></munderover><msub is="true"><mi is="true">δ</mi><msub is="true"><mi is="true">c</mi><mi is="true">k</mi></msub></msub></mrow></math>
Our team defines 603 unique elements to describe successful Chinese domestic motion pictures. Hence we decide to use 10 binary bits to interpret all these gene elements. According to reference [20], they select 220 gene elements as the population size, which means that they randomly choose 220 gene elements from movie gene database to generate the initial population of gene elements. This value is obtained with experiments based on the following efficiency function. (6)efficiency=reliability−w·(#fitnessevaluationsN)<math><mrow is="true"><mi is="true">e</mi><mi is="true">f</mi><mi is="true">f</mi><mi is="true">i</mi><mi is="true">c</mi><mi is="true">i</mi><mi is="true">e</mi><mi is="true">n</mi><mi is="true">c</mi><mi is="true">y</mi><mo is="true">=</mo><mi is="true">r</mi><mi is="true">e</mi><mi is="true">l</mi><mi is="true">i</mi><mi is="true">a</mi><mi is="true">b</mi><mi is="true">i</mi><mi is="true">l</mi><mi is="true">i</mi><mi is="true">t</mi><mi is="true">y</mi><mo is="true">−</mo><mi is="true">w</mi><mo is="true">·</mo><mrow is="true"><mo stretchy="true" is="true">(</mo><mfrac is="true"><mrow is="true"><mo is="true">#</mo><mi is="true">f</mi><mi is="true">i</mi><mi is="true">t</mi><mi is="true">n</mi><mi is="true">e</mi><mi is="true">s</mi><mi is="true">s</mi><mspace width="0.16em" is="true"></mspace><mspace width="0.16em" is="true"></mspace><mi is="true">e</mi><mi is="true">v</mi><mi is="true">a</mi><mi is="true">l</mi><mi is="true">u</mi><mi is="true">a</mi><mi is="true">t</mi><mi is="true">i</mi><mi is="true">o</mi><mi is="true">n</mi><mi is="true">s</mi></mrow><mi is="true">N</mi></mfrac><mo stretchy="true" is="true">)</mo></mrow></mrow></math>
However, this function is not applicable to the case we have to deal with. Firstly, there is no such authority to release the movie profitability scores like MPAA in China, thus the reliability is doubtable. Secondly, unsuccessful domestic films are dropped at the beginning for lack of standard evaluation criteria. Lastly, a designed equation is adopted to calculate the efficiency value but how to set the parameters (w = 3, N = 100,000)) is not given in the reference paper. Therefore, we decide to design the evaluation function and deduce related parameters with the training set. (7)Evaluation(pc,pm,λ)=∑fβfN(thenumberoftestfilms)<math><mrow is="true"><mi is="true">E</mi><mi is="true">v</mi><mi is="true">a</mi><mi is="true">l</mi><mi is="true">u</mi><mi is="true">a</mi><mi is="true">t</mi><mi is="true">i</mi><mi is="true">o</mi><mi is="true">n</mi><mrow is="true"><mo is="true">(</mo><msub is="true"><mi is="true">p</mi><mi is="true">c</mi></msub><mo is="true">,</mo><msub is="true"><mi is="true">p</mi><mi is="true">m</mi></msub><mo is="true">,</mo><mi is="true">λ</mi><mo is="true">)</mo></mrow><mo is="true">=</mo><mfrac is="true"><mrow is="true"><munder is="true"><mo is="true">∑</mo><mi is="true">f</mi></munder><msub is="true"><mi is="true">β</mi><mi is="true">f</mi></msub></mrow><mrow is="true"><mi is="true">N</mi><mo is="true">(</mo><mi is="true">t</mi><mi is="true">h</mi><mi is="true">e</mi><mspace width="0.16em" is="true"></mspace><mspace width="0.16em" is="true"></mspace><mi is="true">n</mi><mi is="true">u</mi><mi is="true">m</mi><mi is="true">b</mi><mi is="true">e</mi><mi is="true">r</mi><mspace width="0.16em" is="true"></mspace><mspace width="0.16em" is="true"></mspace><mi is="true">o</mi><mi is="true">f</mi><mspace width="0.16em" is="true"></mspace><mspace width="0.16em" is="true"></mspace><mi is="true">t</mi><mi is="true">e</mi><mi is="true">s</mi><mi is="true">t</mi><mspace width="0.16em" is="true"></mspace><mspace width="0.16em" is="true"></mspace><mi is="true">f</mi><mi is="true">i</mi><mi is="true">l</mi><mi is="true">m</mi><mi is="true">s</mi><mo is="true">)</mo></mrow></mfrac></mrow></math>(8)βf=#{x|x∈fandx∈pop}#{x|x∈forx∈pop}<math><mrow is="true"><msub is="true"><mi is="true">β</mi><mi is="true">f</mi></msub><mo is="true">=</mo><mfrac is="true"><mrow is="true"><mo is="true">#</mo><mrow is="true"><mo stretchy="true" is="true">{</mo><mrow is="true"><mi is="true">x</mi><mo is="true">|</mo><mi is="true">x</mi><mo is="true">∈</mo><mi is="true">f</mi><mspace width="0.16em" is="true"></mspace><mspace width="0.16em" is="true"></mspace><mi is="true">a</mi><mi is="true">n</mi><mi is="true">d</mi><mspace width="0.16em" is="true"></mspace><mspace width="0.16em" is="true"></mspace><mi is="true">x</mi><mo is="true">∈</mo><mi is="true">p</mi><mi is="true">o</mi><mi is="true">p</mi></mrow><mo stretchy="true" is="true">}</mo></mrow></mrow><mrow is="true"><mo is="true">#</mo><mrow is="true"><mo stretchy="true" is="true">{</mo><mrow is="true"><mi is="true">x</mi><mo is="true">|</mo><mi is="true">x</mi><mo is="true">∈</mo><mi is="true">f</mi><mspace width="0.16em" is="true"></mspace><mspace width="0.16em" is="true"></mspace><mi is="true">o</mi><mi is="true">r</mi><mspace width="0.16em" is="true"></mspace><mspace width="0.16em" is="true"></mspace><mi is="true">x</mi><mo is="true">∈</mo><mi is="true">p</mi><mi is="true">o</mi><mi is="true">p</mi></mrow><mo stretchy="true" is="true">}</mo></mrow></mrow></mfrac></mrow></math>
We set pop to represent the final optimal result of GA, whose fitness value is the top one among all the elements in the gene pool. The three parameters listed in the left of Eq. (7) are utilized in the GA process, so their values define the ultimate value of pop. And we set f to represent the high box-office domestic films from 2012 to 2015 which is the training dataset. We choose each film from f to compute the result of βf. The upper part of Eq. (8) represents the intersection gene elements of the optimal outcome with every element in the f collection, where the lower part represents their union. Therefore the value of βf represents the coincidence rate and we could obtain the optimal solution of pc, pmand λ through plugging them into Eq. (7), which means that the average ratio of common gene elements between the optimal result and the training dataset.
We plan to solve the GA problem with dual loops. The inner loop is set to obtain the optimal result of gene elements which would be capable of producing the most successful Chinese domestic movies with big receipts. Since some parameters of GA are supposed to be set before the inner loop and their values are closely related to the final result, we decide to handle this puzzle with the outer loop. We utilize the result of the inner loop and plug them into the outer loop, which could produce the result of Eq. (7). Through adjusting the value of one parameter and remaining the others stable, the most reasonable result of each parameter could be calculated. Finally the GA procedure is designed with the following steps depicted in Table 2.
The famous selection scheme named roulette wheel is adopted during this process, which follows the fitness proportionate selection routine. We utilize symbol X, to represent the selection criteria during each round in the inner loop while the calculation of the fitness value is listed in Eq. (5). (9)pf=Fitnessf∑f∈XFitnessf<math><mrow is="true"><msub is="true"><mi is="true">p</mi><mi is="true">f</mi></msub><mo is="true">=</mo><mfrac is="true"><mrow is="true"><mi is="true">F</mi><mi is="true">i</mi><mi is="true">t</mi><mi is="true">n</mi><mi is="true">e</mi><mi is="true">s</mi><msub is="true"><mi is="true">s</mi><mi is="true">f</mi></msub></mrow><mrow is="true"><msub is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">f</mi><mo is="true">∈</mo><mi is="true">X</mi></mrow></msub><mrow is="true"><mi is="true">F</mi><mi is="true">i</mi><mi is="true">t</mi><mi is="true">n</mi><mi is="true">e</mi><mi is="true">s</mi><msub is="true"><mi is="true">s</mi><mi is="true">f</mi></msub></mrow></mrow></mfrac></mrow></math>
The crossover probability means that two sections of some gene elements, which are randomly selected withpc, are interchanged during this process. We set fixed values for pm, λ and initial value for pc. Then plug them into GA algorithm to calculate Eq. (7). We also adjust pc to obtain the optimal value. The range of pc is set from 0.001 to 0.4. (10)pc=MaxpE(p,pm,λ)<math><mrow is="true"><msub is="true"><mi is="true">p</mi><mi is="true">c</mi></msub><mo is="true">=</mo><munder is="true"><mrow is="true"><mi is="true">M</mi><mi is="true">a</mi><mi is="true">x</mi></mrow><mi is="true">p</mi></munder><mi is="true">E</mi><mrow is="true"><mo stretchy="true" is="true">(</mo><mrow is="true"><mi is="true">p</mi><mo is="true">,</mo><msub is="true"><mi is="true">p</mi><mi is="true">m</mi></msub><mo is="true">,</mo><mi is="true">λ</mi></mrow><mo stretchy="true" is="true">)</mo></mrow></mrow></math>
Empirical results shown in the following graph indicate that pc = 0.003 produces the best evaluation (Fig. 9).
The mutation probability indicates that the possibilities of random selected bits in the gene elements are altered in order to introduce more diversity into evolution process. For example, if one bit of a gene element was indicated by 0 in the original population, then the mutation occurs with the ratio of pm , which changes the specified bit from 0 to 1.We still adopt the method referred to the last section while the range of pm is chosen from 0.000005 to 0.05. (11)pm=MaxpE(pc,p,λ)<math><mrow is="true"><msub is="true"><mi is="true">p</mi><mi is="true">m</mi></msub><mo is="true">=</mo><munder is="true"><mrow is="true"><mi is="true">M</mi><mi is="true">a</mi><mi is="true">x</mi></mrow><mi is="true">p</mi></munder><mi is="true">E</mi><mrow is="true"><mo stretchy="true" is="true">(</mo><mrow is="true"><msub is="true"><mi is="true">p</mi><mi is="true">c</mi></msub><mo is="true">,</mo><mi is="true">p</mi><mo is="true">,</mo><mi is="true">λ</mi></mrow><mo stretchy="true" is="true">)</mo></mrow></mrow></math>
Empirical results displayed in the following graph reveal that pm = 0.00005 produces the best evaluation (Fig. 10).
The balance factor of lambda (λ) in Eq. (5) is another parameter which also need to be set in this scenario. It is utilized to balance the influences of nodes within movie complex network and their communities. Through resorting to the method mentioned above, the following equation is given. (12)Lambda=MaxλE(pc,pm,λ)<math><mrow is="true"><mi is="true">L</mi><mi is="true">a</mi><mi is="true">m</mi><mi is="true">b</mi><mi is="true">d</mi><mi is="true">a</mi><mo is="true">=</mo><munder is="true"><mrow is="true"><mi is="true">M</mi><mi is="true">a</mi><mi is="true">x</mi></mrow><mi is="true">λ</mi></munder><mi is="true">E</mi><mrow is="true"><mo stretchy="true" is="true">(</mo><mrow is="true"><msub is="true"><mi is="true">p</mi><mi is="true">c</mi></msub><mo is="true">,</mo><msub is="true"><mi is="true">p</mi><mi is="true">m</mi></msub><mo is="true">,</mo><mi is="true">λ</mi></mrow><mo stretchy="true" is="true">)</mo></mrow></mrow></math>
The range of lambda (λ) is selected from 0.001 to 0.4 and the empirical results depicted in the following graph present thatλ = 0.4 produces the best evaluation (Fig. 11).
The number of gene elements to be utilized as the population is an important parameter to be set in this scenario. To solve this problem, we adjust the value of population size incrementally to calculate the result of Eq. (7). The empirical results described in the following graph manifest that the evaluation result will be no great changes when the population size is bigger than 50, which is set to be the value (Fig. 12).
It is relatively fixed to solve the loop count used in GA. We set the threshold represented as eps (ε) whose value is 10−3. When the change of fitness values is smaller than ε, the loop count is obtained. The final result of loop count is set as 5000 (Fig. 13).
The final evaluation value of our training dataset is 0.1802. The top ten gene elements obtained from GA are depicted in the following Table 3.
This ranking list is close to the reality situation. Then we utilize the testing data, which represents the gene elements of the high box-office movies from January to August in 2016, to calculate the evaluation function, whose result is 0.1574. Since there's small difference between the evaluation value of the training dataset and that of the testing dataset, it also proves the validity of the final result.
We retrieve Jinni's non-public database to construct a professional fine-grained semantic information database of Chinese domestic films. Through cooperating with the professional film connoisseurs from the Chinese famous movie magazines, we revise the original gene pool obtained from abroad carefully (by including Chinese film features), and then, label domestic films screened from January 2012 to August 2016 with these gene elements by virtue of the IoT technology and smart mobile devices. Then the data are divided into two types for classification and prediction via cross-validation method, one is the training dataset (“successful” films from 2012 to 2015) and the other is the testing dataset (“successful” films in 2016). After that, we construct the movie gene co-occurrence network and improve the complex network from the unweighted graph (reference [21]) to the weighted one. The community detection scheme is adopted to depict the influence of the gene elements in their communities. Combining with the eigen vector centrality in the whole movie gene complex network, we develop a genetic algorithm to generate the recipe of producing successful domestic movies in China. We also propose an evaluation function to set reasonable parameters used in GA procedure. The complete GA process is applied to the training dataset and the result is validated through the testing dataset. Future work includes that more methods and more empirical experiments should be conducted with our success recipe.
This work is supported by “the Fundamental Research Funds for the Central Universities (Grant No. 2014PTB-00-02)”, and “the National Science Fund for Distinguished Young Scholars in China (Grant No. 61425012)”.