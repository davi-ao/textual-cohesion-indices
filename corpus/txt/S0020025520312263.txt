Many real-world systems can be naturally represented by sequences corresponding to chains of events or transitions between states, including human actions [10], machine workflow [43], scientists mobility [23] and language [15]. Communication can also be accomplished by encoding and decoding data into sequences of symbols or continuous signals. Indeed, a significant portion of datasets derived from real-world systems is available in this form. For a complex system, one can understand that sequences can be generated by a process driving the changes among states across a certain space of allowed transitions [6].
Network science has been employed to represent a great variety of complex systems [18], [19], [3], [21], [32], [8]. In recent studies, complex networks have displayed the potential to represent the space of transitions between states for many types of systems [15], [28], [29]. In this context, the driving processes generating sequences are represented by stochastic walks of a variety of heuristics. An example of this case is the knowledge acquisition process [7], in which nodes represent knowledge that is connected according to how related they are. One or multiple agents (such as researchers) navigate in this knowledge space, which is unknown from the start, and discoveries are made when the agents visit new nodes. In such a system, sequences are derived by the paths taken by the agents.
While Markov chains [39] are a simple way to model and recover the inherent network of transition probabilities, it relies on considering that the studied phenomenon is driven by a simple stochastic process with no a priori knowledge of its space. Many real-systems, however, may present more intricate driving stochastic dynamics (which may depend on long term memory or properties of the nodes, for instance). An example of that system is urban transportation, where agents navigate across a system of roads with possibly predefined origin and destinations. The paths taken by connecting these endpoints cannot be driven solely based on local probabilities. Also, the inherent space of state transitions can display a variety of different topologies [18] in contrast to more well-defined structures, such as regular graphs, as a consequence, even simple stochastic dynamics can lead to intricate sequences [6].
In many real-world problems, only the sequences generated by the system are observed. Thus, having a way to discriminate characteristics that are either consequence of the dynamics or from the network can lead to a better understanding of the studied phenomenon. A simple property derived from sequences that can be differently impacted by both of these aspects is the rate of appearance of new symbols. This corresponds to the exploration coverage of a network under the action of a walking dynamics, which is also related to the learning curve in a knowledge acquisition process. This property is also related to how well an agent performs in discovering knowledge.
To our knowledge, no previous study focused on a systematic analysis among the dynamics, networks, and the sequences generated by them. Here we analyzed the learning curves for sequences obtained from four random walk dynamics and four network models with different topological structures. At first, we are interested in knowing if the learning curves are already good criteria for determining both the model and the dynamics used to generate a sequence.
Our analysis revealed that, among the considered stochastic walk dynamics using only local network information, the true self-avoiding dynamics (TSAW) was found to present the best performance in coverage rate for the considered network models. In addition to that, different patterns for the performances of coverage rate were observed. Aside from TSAW, the ranking based on performance of exploration for different sets of walk dynamics tends to depend on the network structure. For instance, when the stochastic walk is biased according to the node degree, better performance is attained when the network is sparse and the walks are biased towards preferring highly connected nodes. On the other hand, if the network is denser, better performance is reached when the walk avoids highly connected nodes. We also encountered situations in which there exists ambiguity in the coverage property for certain combinations of dynamics and network models. This indicates that it would be possible to swap the dynamics and the inherent structure and even so, attain similar learning curves. These developments could shed a light on the analysis of the mechanisms leading to text generation, for instance, to better understand how the vocabulary grows along with the text.
The following section explores the related literature to the problem of modeling real-world phenomena in terms of networks, dynamics, and sequences. Next, the methodology is presented alongside the description of the considered network models and dynamics. Results are presented together with discussions, which is followed by conclusions.
Random walks (RW) have been studied in many networked applications [9], [38], [14], [16]. In the early studies of the emergent network science field, the properties of RW was investigated in power-law distributed networks. In [1], the authors compared the efficiency of random and self-avoiding walks in transferring messages through the network. Hubs were found to play the role of centralizing and distributing information to other nodes. Most importantly, this finding revealed that the efficiency of discovering new nodes depends on the topology of the underlying network.
The process of network discovering has been approached by several recent studies [6], [33], [7], [46], [25]. In [7], the authors compared the learning speed of several dynamics for particular network topologies. Specifically, they analyzed how effective different dynamics are when discovering new nodes in the network. In addition to traditional random walks, this study considered also random walks with Lévy flights [45]. Thus, the agents were allowed to visit any node in the network in the next step with a certain probability. The authors found that more frequent jumps favors the discovery rate, specially in Barabási-Albert networks. In particular topologies, though, jumps were found not to be as effective. This is the case of geographic networks. Another interesting finding is that the discovery of new nodes occurs with different speed in different network regions. The core – as identified via accessibility (entropy diversity) [48], [5] – tends to be covered faster than the network borders.
In [33] the authors studied the efficiency of agents walking over the network to learn the structure of the network. Differently from other works, the authors considered a model where knowledge discovered by different agents is integrated in a specific entity of the system. This system is referred to as network brain. This type of dynamics was intended to represent e.g. the knowledge acquisition when mapping communities of similar interests in the Web. The most surprising result arising from this study is the fact that the learning behavior, considering variations of the self-avoiding walk, has a very weak dependence on the considered dynamics and network topologies.
The problem of knowledge acquisition in networks has also been studied in the context of information theory applications [6]. In [6], distinct random walks are performed over different topologies. The sequence of visited nodes generates a sequence of symbols, which is further analyzed in function of the observed compression ratio – computed via Huffman coding. Finally, such a sequence is used to reconstruct the original network, and the error is analyzed for distinct topologies and agent dynamics. Several interesting results have been found using the framework combining knowledge acquisition and information theory. Interestingly, the best performance in the framework constructed for representing the phenomena of compression (during transmission) and reconstruction of networks revealed that a simple knitted network model [17] yielded the best performance. This finding is compatible with the idea that language is optimized for transmission [12], since knitted networks are representations of co-occurrence language networks [13], [44], [47], [37].
The study reported in [29] aimed at identifying key Physics concepts from students’ representations of perceived similarity between distinct topics. The representation used in this work was a concept network, where nodes represent the concepts (in the sense of quantities, laws, models, or experiments), and edges represent similarities between these concepts, such as actions for determining a model or the realization of a experiment using some law [46]. The paper studies these concept networks using subgraph and communicability betweenness centrality. The most relevant concept networks were identified using an importance ranking coefficient, which is a normalized geometric mean of the considered centrality measurements. While this study does not relies on random walks to represent the acquired network, the concepts networks are used as examples of networks representing the knowledge acquired by students, according to unknown knowledge acquisition dynamics.
The study conducted in [25] analyzed the properties of self-avoiding walks (SAW) in clustered scale-free networks. The study investigated how the number of SAWs changes as the desired walk length increases. The main result of the paper shows that, for scale-free networks with same average degree, there are more SAWs in clustered networks when compared to unclustered networks. This result suggests that the modular organization in the same topological family of networks may impact the discovery process in the network. Differently from most of the works in the literature, here we analyze the knowledge acquisition problem in terms of a generalist point of view. We analyze whether different network topologies and dynamics can lead to the same behavior in the observed learning curves. In other works, we analyze the behavior of learning curves by comparing, at the same time, different configurations of network topology and agents dynamics.
The main objective of this paper is to compare the efficiency of different walking strategy to discover new nodes in the network. In this knowledge acquisition approach, we consider that a single agent is walking through the network, and every new node discovered is regarded as a new piece of knowledge. This process of discovery of nodes is relevant in practice because it is useful in network search applications where topology is not known on a global scale [49], [30]. Here we refer to knowledge acquisition process in a wider context. While a random walk on a network is conceptually similar to the process of reading and writing a text, the notion of knowledge acquisition goes beyond the cognitive process of learning. We refer to knowledge in a broader way, where any complex system represented by a network can be discovered via exploration. In our definition, a new knowledge is acquired when a new site (node) is visited. For this reason, in this work, we do not restrict our analysis to dynamics or topologies that are related to cognitive processes. We focus our study on the behavior of nodes exploration in any complex system. For this reason, we studied the dynamics performance for well-known random walks and network topologies. Most importantly, we analyze the behavior of “learning curves” for each pair topology/dynamics in order to analyze whether different combinations of topology and random walks can lead to the same learning curve (and vice versa).
The adopted methodology is illustrated in Fig. 1 and summarized in the following steps:
Network topology: we selected different network topologies. We have selected well-known network models reproducing the characteristics of real-world networks. A brief description of the adopted models is provided in Section 3.1.
Network dynamics: different ways to walk over the networks were considered, including dynamics based on traditional random walks and dynamics biased towards particular neighbor properties. A brief description of the adopted network dynamics is provided in Section 3.2.
Learning curves: For each pair of topology and dynamics, we obtain the learning curves. This learning curve describes how fast new nodes are discovered as the dynamics unfolds (see Section 3.3).
Cluster analysis: in this phase, each learning curves are mapped into a vector. This is used to measure the similarity between two curves. Similar curves are then identified via cluster analysis. This step is important to show that the behavior curve A brief description of this process is provided in Section 3.4.
Artificial networks were built for each set of network models. The following parameters were used to create the networks: number of nodes (N)={500,1000,5000}<math><mrow is="true"><mo stretchy="false" is="true">(</mo><mi is="true">N</mi><mo stretchy="false" is="true">)</mo><mo linebreak="goodbreak" linebreakstyle="after" is="true">=</mo><mo stretchy="false" is="true">{</mo><mn is="true">500</mn><mo is="true">,</mo><mn is="true">1000</mn><mo is="true">,</mo><mn is="true">5000</mn><mo stretchy="false" is="true">}</mo></mrow></math> and average degree (〈k〉)={4,6,8,10}<math><mrow is="true"><mo stretchy="false" is="true">(</mo><mo stretchy="false" is="true">〈</mo><mi is="true">k</mi><mo stretchy="false" is="true">〉</mo><mo stretchy="false" is="true">)</mo><mo linebreak="goodbreak" linebreakstyle="after" is="true">=</mo><mo stretchy="false" is="true">{</mo><mn is="true">4</mn><mo is="true">,</mo><mn is="true">6</mn><mo is="true">,</mo><mn is="true">8</mn><mo is="true">,</mo><mn is="true">10</mn><mo stretchy="false" is="true">}</mo></mrow></math>. We have worked with four well-known undirected network topology models:
Erdős-Rényi (ER): this model generates random networks. In this fashion, nodes have similar degrees. The probability of creating an edge is equally distributed among the nodes.
Barabási-Albert (BA): this topology implements the scale-free model, inherent to many real networks. BA networks are characterized by a few hubs with a very high degree, while most nodes have small degrees.
Waxman (Wax): this a traditional geographic model, which comprehends a set of nodes in a two dimensional space that incorporates new edges through an algorithm in which the probability decays exponentially as the distance between each pair of nodes grows. More specifically, the probability of two nodes to be linked is given by:(1)πij=aexp(dij/β),<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">π</mi></mrow><mrow is="true"><mi mathvariant="italic" is="true">ij</mi></mrow></msub><mo linebreak="goodbreak" is="true">=</mo><mi is="true">a</mi><mi mathvariant="normal" is="true">exp</mi><mo stretchy="false" is="true">(</mo><msub is="true"><mrow is="true"><mi is="true">d</mi></mrow><mrow is="true"><mi mathvariant="italic" is="true">ij</mi></mrow></msub><mo is="true">/</mo><mi is="true">β</mi><mo stretchy="false" is="true">)</mo><mo is="true">,</mo></mrow></math>where a is a normalization factor, dij<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">d</mi></mrow><mrow is="true"><mi mathvariant="italic" is="true">ij</mi></mrow></msub></mrow></math> is the geographic distance between nodes vi<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">v</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></math> and vj<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">v</mi></mrow><mrow is="true"><mi is="true">j</mi></mrow></msub></mrow></math> and β<math><mrow is="true"><mi is="true">β</mi></mrow></math> is a parameter that defines the connectivity of the network.
Modular Networks (LFR): networks with community structure were implemented using the methodology described in [31]. In this model, each community is represented as a scale-free network. In addition to the number of nodes and average degree, additional parameters can be considered to generate the networks. The main parameters describing this model are the number of communities (nC<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">n</mi></mrow><mrow is="true"><mi is="true">C</mi></mrow></msub></mrow></math>), the minus exponent for the degree sequence (t1<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">t</mi></mrow><mrow is="true"><mn is="true">1</mn></mrow></msub></mrow></math>), the minus exponent for the community size distribution (t2<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">t</mi></mrow><mrow is="true"><mn is="true">2</mn></mrow></msub></mrow></math>), the maximum degree (maxk<math><mrow is="true"><msub is="true"><mrow is="true"><mi mathvariant="normal" is="true">max</mi></mrow><mrow is="true"><mi is="true">k</mi></mrow></msub></mrow></math>), and the the mixing parameter (μ<math><mrow is="true"><mi is="true">μ</mi></mrow></math>), which determines the fraction of edges linking distinct network communities. Here we used nC=5,t1=3,t2=0,μ=0.20<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">n</mi></mrow><mrow is="true"><mi is="true">C</mi></mrow></msub><mo linebreak="goodbreak" linebreakstyle="after" is="true">=</mo><mn is="true">5</mn><mo is="true">,</mo><msub is="true"><mrow is="true"><mi is="true">t</mi></mrow><mrow is="true"><mn is="true">1</mn></mrow></msub><mo linebreak="goodbreak" linebreakstyle="after" is="true">=</mo><mn is="true">3</mn><mo is="true">,</mo><msub is="true"><mrow is="true"><mi is="true">t</mi></mrow><mrow is="true"><mn is="true">2</mn></mrow></msub><mo linebreak="goodbreak" linebreakstyle="after" is="true">=</mo><mn is="true">0</mn><mo is="true">,</mo><mi is="true">μ</mi><mo linebreak="goodbreak" linebreakstyle="after" is="true">=</mo><mn is="true">0.20</mn></mrow></math>. The maximum degree maxk<math><mrow is="true"><msub is="true"><mrow is="true"><mi mathvariant="normal" is="true">max</mi></mrow><mrow is="true"><mi is="true">k</mi></mrow></msub></mrow></math> were chosen so as to obtain networks with the desired average degree 〈k〉<math><mrow is="true"><mo stretchy="false" is="true">〈</mo><mi is="true">k</mi><mo stretchy="false" is="true">〉</mo></mrow></math>.
A visualization of the considered models for selected parameters is illustrated in Fig. 2. The visualizations were generated using the Networks3d software [42]. It is clear that for different models the nodes with highest degrees (orangish nodes) are distributed in different ways.
We also included two real-world networks for comparison: citation network of complex networks papers (CN) [42] and a Wikipedia network comprising only articles related to the subcategories of Physics and Mathematics [7].
The network dynamics aims at generating a sequence of visited nodes, which represents the set of acquired knowledge. The dynamics observed by visiting sequentially network nodes has an analogy with the process of generating written texts [6]. If we consider that, at each step, a symbol is generated to represent that the current node has been visited, after NS<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">N</mi></mrow><mrow is="true"><mi is="true">S</mi></mrow></msub></mrow></math> steps we have a sequence of symbols (i.e. a text) comprising NS<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">N</mi></mrow><mrow is="true"><mi is="true">S</mi></mrow></msub></mrow></math> words (or tokens). The learning curve can thus be seen as the vocabulary size observed for a given text length. While in written texts the relationship between vocabulary size and text length is well described by the Heaps’ Law [35], the learning curve observed in network discovery processes tends to follow a different pattern [7].
In order to recover the symbols from these models we have worked with the following walk dynamics: traditional random walk (RW) [34], random walk biased by degree (RWD) [11], random walked biased by the inverse of the degree (RWID) [11], and true self-avoiding walk (TSAW) [28], [4]. These walks have been widely employed to study the dynamics of learning curves in the last few years [6], [7], [33]. The main differences among these walk dynamics are detailed below:
Traditional random walks: the random walk dynamics is one of the most used in literature, and a very simple one. If the walker is at node vi<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">v</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></math> and Γi<math><mrow is="true"><msub is="true"><mrow is="true"><mi mathvariant="normal" is="true">Γ</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></math> is the set of neighbors of vi<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">v</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></math>, all nodes in Γi<math><mrow is="true"><msub is="true"><mrow is="true"><mi mathvariant="normal" is="true">Γ</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></math> have the same probability to be chosen as next node in the walk. In other words, the probability of transition from vi<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">v</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></math> to vj∈Γi<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">v</mi></mrow><mrow is="true"><mi is="true">j</mi></mrow></msub><mo is="true">∈</mo><msub is="true"><mrow is="true"><mi mathvariant="normal" is="true">Γ</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></math> is pij=ki-1<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">p</mi></mrow><mrow is="true"><mi mathvariant="italic" is="true">ij</mi></mrow></msub><mo linebreak="goodbreak" linebreakstyle="after" is="true">=</mo><msubsup is="true"><mrow is="true"><mi is="true">k</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow><mrow is="true"><mo is="true">-</mo><mn is="true">1</mn></mrow></msubsup></mrow></math>.
Degree-biased random walk: in this walking dynamics, a higher probability of transition pij<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">p</mi></mrow><mrow is="true"><mi mathvariant="italic" is="true">ij</mi></mrow></msub></mrow></math> is given to those neighbors with higher degrees. Mathematically, pij<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">p</mi></mrow><mrow is="true"><mi mathvariant="italic" is="true">ij</mi></mrow></msub></mrow></math> is proportional to the degree kj<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">k</mi></mrow><mrow is="true"><mi is="true">j</mi></mrow></msub></mrow></math> of vj∈Γi<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">v</mi></mrow><mrow is="true"><mi is="true">j</mi></mrow></msub><mo is="true">∈</mo><msub is="true"><mrow is="true"><mi mathvariant="normal" is="true">Γ</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></math>:(2)pij=kj∑l∈Γikl.<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">p</mi></mrow><mrow is="true"><mi mathvariant="italic" is="true">ij</mi></mrow></msub><mo linebreak="goodbreak" is="true">=</mo><mfrac is="true"><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">k</mi></mrow><mrow is="true"><mi is="true">j</mi></mrow></msub></mrow><mrow is="true"><msub is="true"><mrow is="true"><mo is="true">∑</mo></mrow><mrow is="true"><mi is="true">l</mi><mo is="true">∈</mo><msub is="true"><mrow is="true"><mi mathvariant="normal" is="true">Γ</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></msub><msub is="true"><mrow is="true"><mi is="true">k</mi></mrow><mrow is="true"><mi is="true">l</mi></mrow></msub></mrow></mfrac><mtext is="true">.</mtext></mrow></math>In other words, the RWD dynamics always tries to explore the network by prioritizing visits to nodes with the highest number of neighbors.
Low degree-biased random walk: a different variation of the traditional random walk is the walk biased towards the inverse of the degree. In this case, the probability of transition from vi<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">v</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></math> to vj∈Γi<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">v</mi></mrow><mrow is="true"><mi is="true">j</mi></mrow></msub><mo is="true">∈</mo><msub is="true"><mrow is="true"><mi mathvariant="normal" is="true">Γ</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></math> is:(3)pij=kj-1∑l∈Γikl-1.<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">p</mi></mrow><mrow is="true"><mi mathvariant="italic" is="true">ij</mi></mrow></msub><mo linebreak="goodbreak" is="true">=</mo><mfrac is="true"><mrow is="true"><msubsup is="true"><mrow is="true"><mi is="true">k</mi></mrow><mrow is="true"><mi is="true">j</mi></mrow><mrow is="true"><mo is="true">-</mo><mn is="true">1</mn></mrow></msubsup></mrow><mrow is="true"><msub is="true"><mrow is="true"><mo is="true">∑</mo></mrow><mrow is="true"><mi is="true">l</mi><mo is="true">∈</mo><msub is="true"><mrow is="true"><mi mathvariant="normal" is="true">Γ</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></msub><msubsup is="true"><mrow is="true"><mi is="true">k</mi></mrow><mrow is="true"><mi is="true">l</mi></mrow><mrow is="true"><mo is="true">-</mo><mn is="true">1</mn></mrow></msubsup></mrow></mfrac><mtext is="true">.</mtext></mrow></math>Therefore, in this case, the walker tends to select nodes with low-degree in the next step of the random walk.
True self-avoiding walk: in a true self-avoiding walk dynamics, already visited nodes are avoided. This is achieved this by memorizing edges that have already been visited. The transition probability is computed as(4)pij=e-λfij∑l∈Γie-λfil,<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">p</mi></mrow><mrow is="true"><mi mathvariant="italic" is="true">ij</mi></mrow></msub><mo linebreak="goodbreak" is="true">=</mo><mfrac is="true"><mrow is="true"><msup is="true"><mrow is="true"><mi is="true">e</mi></mrow><mrow is="true"><mo is="true">-</mo><mi is="true">λ</mi><msub is="true"><mrow is="true"><mi is="true">f</mi></mrow><mrow is="true"><mi mathvariant="italic" is="true">ij</mi></mrow></msub></mrow></msup></mrow><mrow is="true"><msub is="true"><mrow is="true"><mo is="true">∑</mo></mrow><mrow is="true"><mi is="true">l</mi><mspace width="0.12em" is="true"></mspace><mo is="true">∈</mo><mspace width="0.12em" is="true"></mspace><msub is="true"><mrow is="true"><mi mathvariant="normal" is="true">Γ</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></msub><msup is="true"><mrow is="true"><mi is="true">e</mi></mrow><mrow is="true"><mo is="true">-</mo><mi is="true">λ</mi><msub is="true"><mrow is="true"><mi is="true">f</mi></mrow><mrow is="true"><mi mathvariant="italic" is="true">il</mi></mrow></msub></mrow></msup></mrow></mfrac><mo is="true">,</mo></mrow></math>where fij<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">f</mi></mrow><mrow is="true"><mi mathvariant="italic" is="true">ij</mi></mrow></msub></mrow></math> is the frequency of visits to the edge linking nodes vi<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">v</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></math> and vj<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">v</mi></mrow><mrow is="true"><mi is="true">j</mi></mrow></msub></mrow></math>. The parameter λ>0<math><mrow is="true"><mi is="true">λ</mi><mo is="true">&gt;</mo><mn is="true">0</mn></mrow></math> corresponds to the exponential decay factor for which the probabilities decrease with the number visits. In this study, we use λ=ln2<math><mrow is="true"><mi is="true">λ</mi><mo linebreak="goodbreak" linebreakstyle="after" is="true">=</mo><mi mathvariant="normal" is="true">ln</mi><mn is="true">2</mn></mrow></math>.
The main advantage of this dynamics is that it tends to present a higher learning rate when many nodes have already been visited. When the walker is visiting a region with no visited nodes, this random walk behaves similarly to the RW dynamics. In some studies, it has been shown that TSAWs tend to display the best learning performance [28]. Here we use TSAWs as a reference to probe how close is the performance of other dynamics (in different topologies) when compared to TSAW. Most importantly, we aim at verifying if there are other combinations of topology/dynamics yielding learning curves similar to the ones observed with TSAWs.
The measure used to characterize each dynamics is the so-called learning rate. This is an important property in network science and is related to many processes on complex networks, including knowledge acquisition, discovery processes, diffusion and spreading [20]. For each pair of network and random walk dynamics, we considered 5000 iterations (steps). Learning curves are then obtained as the fraction of the total number of different nodes visited after a given number of steps.
Principal Component Analysis (PCA) is a statistical method for dimensionality-reduction widely used to simplify large data sets described by a large number of features. This is achieved by reducing the number of variables from the original data set of D dimensions into a set of d<D<math><mrow is="true"><mi is="true">d</mi><mo is="true">&lt;</mo><mi is="true">D</mi></mrow></math> features. As a result, most of the information from the original data is kept because redundancy (measured via co-variance) is removed [40], [26], [27]. A data projection via PCA involves the following sequence: (i) data standardization; (ii) co-variance matrix computation; (iii) identification of the eigenvectors and their corresponding eigenvalues from the co-variance matrix; (iv) identification of the d principal components as the eigenvectors associated to the d largest eigenvalues; and (v) projection of the original data points into the principal components [24]. More specifically, the removal of correlations is accomplished via a n-dimensional rotation applied to the original feature spaces. A detailed proof of how such a rotation minimizes the correlations among the axes of the rotated space can be found in [24].
Here different learning curves are compared and similar learning curves is observed. To quantify the similarity between curves we represent each curve as n-dimensional vector, where the ith position of the vector represents the fraction of nodes visited after the ith step. Because such a representation of curves yields several strongly correlated features, we use PCA [24] to remove possible correlations. In fact, as we shall show, two dimensions of the PCA (i.e. d=2<math><mrow is="true"><mi is="true">d</mi><mo linebreak="goodbreak" linebreakstyle="after" is="true">=</mo><mn is="true">2</mn></mrow></math>) accounts for more than 95% of the data variation.
After the learning curves are represented in a two-dimensional space, clusters can be identified. Because our objective is to analyze whether similar learning curves can be obtained with different topology/dynamics choices, the identification of clusters was performed via visual inspection. However, a scenario with several instances could also be analyzed by using traditional clustering algorithms [41].
Our analyses take into account the exploration coverage over time for agents discovering knowledge in network models as they explore nodes through edges. The first step is obtaining the learning curves for the considered pairs of dynamics (RW, TSAW, RWD, and RWID) and network models (ER, BA, Wax, and LFR models). For each network model setup, we generated 5 networks and recorded the learning curves for 50 realizations of each dynamics. The starting position of each realization was drawn uniformly from the network nodes and for each configuration we computed the average and standard deviation of the coverage (learning) curves. The resulting curves are shown in Fig. 3. Each row and column corresponds to different network models and average degree, respectively. The panels contain curves colored according to the considered dynamics.
An initial observation shows that the TSAW dynamics outperformed the other dynamics in all the experiments, corroborating previous studies in which TSAW was found to be among the most optimal stochastic walks [7]. On the other hand, the RWD and RWID dynamic resulted in the worst performance among the considered configurations.
All curves seem to present similar shapes but different growing speeds, with faster coverage as 〈k〉<math><mrow is="true"><mo stretchy="false" is="true">〈</mo><mi is="true">k</mi><mo stretchy="false" is="true">〉</mo></mrow></math> increases, a behavior that is stronger for the RWD and RWID dynamics. In particular, for ER, the performance among the dynamics becomes substantially similar as the average degree increases. This indicates that the considered dynamics performs very similarly for denser networks. An exception to this rule is the RWD for the BA and LFR. In these cases, the performance of RWD gets slightly worse as network connectivity increases. This is probably related to the fact that a scale-free network (such as BA or LFR) allows the existence of extremely connected nodes in which a walker could get stuck given its preference to move to nodes with high degrees.
Another important aspect of the analysis is how the ranking of dynamics performance change amongs the experiments. In general, TSAW is followed by RW, except for the LFR and BA networks with high connectivity. In this case, RWID attains a second place. This reveals that, in these networks, avoiding hubs can be a good strategy to explore them more quickly. When the degree is lower, however, RWD performs better than RWID, indicating that, in this case, it is preferable to reach the hubs than avoiding them to attain better performance.
In addition to the previous analyses, we observe two distinct patterns for the behavior of the curves among the network models, one for ER and Wax, and another for BA and LFR. While these pairs do not necessarily display exactly the same behavior, the performance rankings of the dynamics within these pairs of models do not change much.
We also analyzed the differences (rates of growth or learning rate) of the cumulative discovery curves. Fig. 4 shows the obtained rate curves for all the considered configurations. Both the ranks and other overall observations drawn from the cumulative curves can also be drawn for the rate curves. In sum, TSAW also seems to present the highest rates of growth among the considered random walks. In addition, all curves seems to have the same shape, with the exception of RWD in BA and LFR networks. In both cases, the decrease in the observed rate is more abrupt during the first steps. This might be related to the fact that both models have hubs, and RWD tends to explore already visited hubs, as mentioned before. The ranks of learning rate also confirms that TSAW tends to be followed by RW, especially for BA and LFR networks.
To summarize the main characteristics of the obtained learning curves, we applied PCA as a way to reduce their dimension. For each experiment, we derive a set of 50 features corresponding to the values of the learning rate curves (i.e., the derivatives shown in Fig. 4) at epochs 100 iterations apart (see Section 3.4). In other words, each curve was described by the following set of features (f1,f2,f3…f50)<math><mrow is="true"><mo stretchy="false" is="true">(</mo><msub is="true"><mrow is="true"><mi is="true">f</mi></mrow><mrow is="true"><mn is="true">1</mn></mrow></msub><mo is="true">,</mo><msub is="true"><mrow is="true"><mi is="true">f</mi></mrow><mrow is="true"><mn is="true">2</mn></mrow></msub><mo is="true">,</mo><msub is="true"><mrow is="true"><mi is="true">f</mi></mrow><mrow is="true"><mn is="true">3</mn></mrow></msub><mo is="true">…</mo><msub is="true"><mrow is="true"><mi is="true">f</mi></mrow><mrow is="true"><mn is="true">50</mn></mrow></msub><mo stretchy="false" is="true">)</mo></mrow></math>, where fi<math><mrow is="true"><msub is="true"><mrow is="true"><mi is="true">f</mi></mrow><mrow is="true"><mi is="true">i</mi></mrow></msub></mrow></math> corresponds to the observed fraction of discovered nodes after 100×i<math><mrow is="true"><mn is="true">100</mn><mo is="true">×</mo><mi is="true">i</mi></mrow></math> steps were taken by the walker. While we could have sampled the obtained learning curve in a higher frequency rate, preliminary results have shown that 50 or more features are equally discriminative, i.e. they lead to a similar PCA distribution. As we shall show, this happens because the derived features are strongly correlated to each other.
The obtained data projection, shown in Fig. 5, reveals that almost 100%<math><mrow is="true"><mn is="true">100</mn><mo is="true">%</mo></mrow></math> of the variance in the curves can be explained by only two components. In particular, the first component covers about 95.1%<math><mrow is="true"><mn is="true">95.1</mn><mo is="true">%</mo></mrow></math> of the variance. This outcome indicates a high correlation among the curves. At the positive extreme of the first principal component, we find a separated group corresponding to the curves obtained for RWD dynamics simulated on the BA and LFR networks. These correspond to the curves with worst performance among the considered experiments. The RWID curves spread across the PCA1 axis, revealing its diversified behavior with each curve depending on the network model and connectivity.
Along the negative segment of the first principal component, we observe a substantial overlap among the curves for different experiment configurations. This region corresponds to configurations of high node degree or simulated through the TSAW dynamics. Among the notable overlapping configurations are ER and Wax. This is a surprising result, since they present very distinct characteristics in terms of global structure. At least three other regions are shared by different combinations of networks and dynamics. This includes those obtained from ER, Wax and LFR models when the dynamics are TSAW for LFR, and RW for the others. Another example are the RW curves for the BA, Wax, and ER. These results indicate that just by looking at the coverage performance curves it is not trivial to distinguish between network models and dynamics. In addition to that analysis, we also probed whether the results can be explained by the degree assortativity of the networks. Fig. S1 of the supplementary material shows the positions of the curves considering TSAW dynamics according to the obtained PCA colored by degree assortativity. We could not find any specific pattern as the adopted network models present low degree assortativity.
The profile of the PCA axes in the original space, shown in Fig. 6, reveals that the first principal component (PCA1) is almost flat along the iterations. This indicates that all epochs are equally important for the principal component. Conversely, PCA2 seems to capture the difference of rates at the beginning and end of the curves. To further explore these aspects we plotted together all the averaged cumulative learning curves of the considered configurations colored by PCA1 and PCA2. This result is shown in Fig. 7. We note that PCA1 (a) indeed correspond to the inverse of total learning coverage, which is somewhat independent from the shape of the curves. A second order effect seems to be captured by PCA2 (b), corresponding to how fast the rates of the learning curves are increasing across the epochs. This becomes more clear when all the curves are aligned so that the starts and ends match, as shown in (c). Curves with low values of PCA2 tends to be more concave (presenting high curvature) and vice versa. All in all, PCA1 corresponds to the average learning speed, while PCA2 seems to be related to the acceleration of the curves.
We also analyzed the PCA of the learning curves obtained for real networks. Since these networks have different sizes and density compared to the considered model realizations previously employed in this section, we generated a unique PCA for each real network. This was accomplished by using the models to generate networks of similar number of nodes and node degree as in the real networks. The results are shown in Figs. S2 and S3 of the supplementary information. The PCA of both real networks resulted in positions very far from any of the existing models, indicating that even sharing topological properties with the adopted models, such as scale-free degree distribution and community structure, the real networks still have different characteristic learning curves. Also, in both networks, the curves obtained for the RW dynamics behaves similarly to those obtained for the TSAW dynamics. Finally, the walk dynamics biased by the degree (RWD) and inverse of the degree (RWID) are located far from each other and from the other dynamics.
With many real-world phenomena being modeled and represented as sequences, one way to characterize their respective complex system is by separating the dynamics encoding the sequences from their underlying state space. In this context, a certain stochastic walk dynamics acts as the encoder while a complex network can be used to represent the state space. While this framework has been used to model several real-world problems, no systematic analysis of the relationships among these three aspects of the systems exists in the literature.
In this paper, we performed a systematic analysis of the behavior of different dynamics in well-known network topologies. Whenever a dynamics (or exploration strategy) is performed on a network, one obtains a sequence of visited nodes. We aimed at studying how both topology and network dynamics affects the observed sequence of visited nodes. Here we focused in one property of the sequences, the total number of different visited nodes. This property has many applications in network science, and is oftentimes related to the process of knowledge acquisition [7], [6]. In a semantic network, for example, each visited node can be considered as a new learned concept.
We adopted a framework to study the behavior of learning curves. For each combination of network topology and dynamics, we obtained the corresponding learning curves. Then, each learning curve was mapped into a two-dimensional space via PCA. This allowed us to compare curves in a more systematic way, with the advantage of removing correlations while keeping the variability of the original learning curves space.
Several interesting results have been found with our approach. Overall we found that true self avoiding walks outperformed all other dynamics, while the variations of random walks biased towards high or low degree displayed the worst learning curve performances. Despite such differences in performance, we found that all learning curves presented similar shapes. A further investigation of growth rates (i.e. the derivatives) of learning curves revealed that no additional information can be obtained from such an analysis. This means that the learning curves are sufficient to discriminate different network topologies and dynamics.
The Principal Component Analysis confirmed that, despite distinct performances, all curves shapes are similar. This could be confirmed by the fact that curves could be mapped into a two-dimensional space virtually without any lost in the original data variation. Surprisingly, the first component accounted for 95% of the original variation. The visualization provided by PCA allowed us to observe some interesting patterns. Some regions were found to share different combinations of topologies and dynamics. For example, similar learning curves were found in ER and Wax, showing that the same behavior can be obtained even in very distinct network topologies. The PCA visualization also revealed the variability of learning curves with different topologies. While RWD and RWID were found to be very dependent upon topology, learning curves obtained with TSAW dynamics were found to be much less sensitive to distinct network topologies.
The ambiguity of the behavior of learning curves observed in the PCA space can be useful in practical scenarios. For example, in a knowledge acquisition scenario, the network topology can represent how concepts are linked to each other, while the chosen dynamics can be interpreted as the methodology used to cover the concepts being taught. In such educational scenario, our results suggest that one can be able to deliver the same learning experience by adopting completely different knowledge organization (i.e. network topology) and teaching sequence (i.e. network dynamics).
The obtained results have some implications for text analysis. If the network that should be discovered is a semantic (or cognitive) network, one could analyze whether different authors experience different types of accelerations in learning curves. In the same way, one could derive complexity metrics, based on how easy it is to discover a specific concept. Thus, one could guess that texts with poorly connected concepts tend to be more complex than other texts with words that can be more easily explored. In a similar fashion, one could identify how easy a hapax legonema can be found in such semantic networks [2]. We expect that particular classes of words in texts may have different learning behaviors. Finally, one could also apply similar ideas to analyze how learning processes are affected in the presence of cognitive impairment [36], [22].
Our results show that when one uses learning curves to describe sequences of visited nodes ambiguous behaviors may arise. In other words, sequences with similar behavior can be observed from distinct pairs of topology/dynamics. This result suggests that the reconstruction of the processes underlying network construction and topology cannot rely only on learning curves as descriptive features of sequences. For this reason, in future works, we intend to study additional sequence features to identify a minimum set of sequence descriptors that are able to discriminate both the topology and dynamics generating the observed sequence. Because sequences are used to construct embeddings, further studies can analyze if similar embeddings can be obtained from distinct topologies and walks.
Lucas Guerreiro: Software, Validation, Formal analysis, Investigation, Data curation, Writing - review & editing, Visualization. Filipi N. Silva: Conceptualization, Methodology, Validation, Formal analysis, Investigation, Data curation, Writing - original draft, Writing - review & editing, Supervision, Project administration, Funding acquisition. Diego R. Amancio: Conceptualization, Methodology, Validation, Formal analysis, Investigation, Data curation, Writing - original draft, Writing - review & editing, Supervision, Project administration, Funding acquisition.
The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper.
D.R.A. acknowledges financial support from CNPq-Brazil (Grant No. 304026/2018–2).
The following are the Supplementary data to this article:
Download : Download Acrobat PDF file (1MB)