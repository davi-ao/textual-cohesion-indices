Most biological regulation systems can be described in terms of networks (Giuliani et al., 2014). In networks, the semantically (biologically) relevant information resides in the interaction among constituting elements: seminal examples include protein contact networks (Di Paola et al., 2012, Krishnan et al., 2008), metabolic networks (Jeong et al., 2000) and protein-protein interaction networks (Di Paola and Giuliani, 2017, Wuchty, 2001). Solving pattern recognition problems in structured domains such as graphs or sequences poses specific challenges. Indeed, many structured domains are non-metric in nature and patterns may lack any geometrical interpretation (Livi and Sadeghian, 2016, Livi et al., 2015, Martino et al., 2018a). In brief, an input space is said to be non-metric if pairwise dissimilarities between patterns lying in such space do not satisfy all the four properties of a metric (Martino et al., 2018a, Pękalska and Duin, 2005), namely non-negativity, identity, symmetry, triangle inequality.
In literature, several main strategies can be found in order to deal with such problems (Martino et al., 2018a), including feature generation and feature engineering (where numerical features are ad-hoc extracted from the input patterns); ad-hoc dissimilarities in the input space, such as edit distances (Bunke, 1997; Cinti et al., 2019; Levenshtein, 1966; Livi and Rizzi, 2013a, 2013b; Neuhaus and Bunke, 2007) (where custom dissimilarity measures are designed in order to directly process patterns in the input space, without moving towards metric spaces); kernel methods (Shawe-Taylor and Cristianini, 2004; Schölkopf and Smola, 2002; Cristianini and Shawe-Taylor, 2000; Mercer, 1909; Cover, 1965) (where the mapping between the original input space and the Euclidean space exploits positive-definite kernel functions); dissimilarity representations (Pękalska and Duin, 2005, Pękalska et al., 2006) (where each pattern is described by the pairwise distances with respect to other patterns) and embedding via information granulation.
As the latter is concerned, embedding techniques are gaining attention, especially since the introduction of Granular Computing (Bargiela and Pedrycz, 2003, Pedrycz et al., 2008). Granular Computing is a human-inspired computing and information processing paradigm, whose concepts arose from many branches of natural and social sciences (Howard and Lieberman, 2014, Bargiela and Pedrycz, 2016, Yao, 2016). Granular Computing acknowledges the existence of multiple levels of granularity (Yao, 2008, Pedrycz and Homenda, 2013, Yao and Zhao, 2012, Wang et al., 2017, Yang et al., 2018), yet fosters towards the extraction of meaningful, suitable entities (information granules) arising from both the problem at hand and the data representation. These information granules are usually extracted in a data-driven manner and describe data aggregates, namely data which are similar according to structural and/or functional similarity (Martino et al., 2018a, Livi and Sadeghian, 2016, Livi et al., 2015). For example, data clustering is a promising tool1 for extracting information granules, hence Granular Computing, along with the symbolic histograms approach, is at the basis of recently developed frameworks in pattern recognition and computational intelligence (Livi et al., 2012, Livi et al., 2014, Baldini et al., 2019, Bianchi et al., 2016, Bianchi et al., 2014, Singh, 2018, Lin et al., 2013, Rizzi et al., 2012, Del Vescovo and Rizzi, 2007, Martino et al., 2019b). According to the symbolic histograms approach, the set of information granules forms an alphabet and a given (possibly structured) input pattern is described according to the presence/absence (or number of occurrences) of each symbol from the alphabet within the pattern itself. Thanks to the symbolic histogram embedding, the problem is moved from the structured input space towards the Euclidean space, where standard computational intelligence techniques can be used without alterations (Livi and Sadeghian, 2016). On the negative side, synthesising the alphabet is not trivial: the resulting embedding space must preserve (the vast majority of) the original input space properties2 (Martino et al., 2018a, Pękalska and Duin, 2005). Further, there is no guarantee that all symbols in the alphabet are indeed useful/meaningful for the pattern recognition problem at hand.
As far as graphs are concerned, the way a meaningful alphabet can be automatically determined starting from the dataset at hand depends on the specific data domain considered for labelling nodes N<math><mi mathvariant="bold-script" is="true">N</mi></math> and edges E<math><mi mathvariant="bold-script" is="true">E</mi></math> belonging to a given graph G<math><mi mathvariant="bold-script" is="true">G</mi></math>. In general, elements in N<math><mi mathvariant="bold-script" is="true">N</mi></math> and E<math><mi mathvariant="bold-script" is="true">E</mi></math> could be any data structures, where a (possibly metric) dissimilarity measure is defined. For example, in Bianchi et al. (2016) images are encoded into graphs by a segmentation procedure whose nodes’ and edges’ labels are real-valued feature vectors, that can be compared by a suitable distance function. In such cases, groups of frequent substructures can be discovered by relying on clustering techniques based on inexact matching procedures, such as graph edit distances (2013, 2013; Bunke, 1997). In the following, we will consider graph domains where nodes are labelled by attributes belonging to a finite nominal categorical set, while edges are originally unlabelled.3 Let us denote this particular class of labelled graphs as P<math><mi mathvariant="bold-script" is="true">P</mi></math>.
In this paper, we propose a classification system able to deal with any input domain belonging to P<math><mi mathvariant="bold-script" is="true">P</mi></math>. The effectiveness of the proposed approach in synthesising automatically performing classification models will be discussed in terms of generalisation capabilities and knowledge discovery properties relying on a biological case study, namely the problem of classifying biological organisms on the sole basis of their metabolic networks. The definition of a ‘meaningful aggregation level’ supporting information granules is at the core of biological multi-level organisation.
Specifically, we investigate a procedure for extracting meaningful substructures thanks to a sensitivity/specificity integrated evaluation approach inherited from a classical ecological method, originally proposed in Dufrêne and Legendre (1997) and developed for individuating the ‘signature species’ of a given environment. The philosophy at the basis of this method (INDVAL) is straightforward: a given species S is ‘representative’ (and thus useful for the recognition of a given environmental condition EC) if it satisfies both of the following properties
S must be present only (or almost only) in the EC-positive objects
S must be present in all (or the great majority) of the EC-positive cases
Rather than individuating ‘signature species’ of different environments, in this work the INDVAL is used to spot ‘signature substructures’ in structured data. These ‘signature substructures’ form a symbols alphabet on the top of which the embedding via symbolic histograms can be performed. In the embedding (Euclidean) space, the classifier can as well be equipped with feature selection techniques in order to extract the most useful subset of alphabet symbols in order to maximise its discrimination capabilities.
The proposed approach is tested on real metabolic pathways data, with the target of classifying metabolic networks corresponding to different organisms at different taxonomical scales on the top of their ‘signature chemical reactions’. Moreover, such ‘signature chemical reactions’ were demonstrated to be highly consistent with biological knowledge and suggestive of new research avenues.
This paper is organised as follows: in Section 2 we address how metabolic pathways can be modelled as networks, along with a discussion of the biological relevance of the considered application; in Section 3 the information granulation embedding via INDVAL score and subsequent embedding and classification stages are described. In Section 4 we propose four classification problems following several scales of the Linnean taxonomy, along with a benchmark test and a sensitivity test regarding the only parameter which shall be personalised by the end-user. In Section 5 we address one of the key features in information granulation-based techniques, namely the model interpretability, showing how relevant alphabet symbols can be analysed by field-experts in order to derive insights for the problem at hand. Finally, in Section 6, we draw some conclusion and propose interesting future directions.
Life on earth builds upon the ability of the cells to carry out simultaneously thousands of chemical reactions producing energy, molecules and supra-molecular structures needed for survival. These chemical reactions establish a flux going from complex organic molecules (proteins, nucleic acids, sugars, lipids) entering the system as nutrients to simple end-products (e.g., Carbon Dyoxide) eliminated by the organism. This process is called metabolism. Metabolism can be naturally modelled as a network whose nodes are chemical species (metabolites) and edges represent reactions transforming the connected chemical species one into another. Inside these metabolic networks we identify some preferred (more relevant for organism survival and/or devoted to the production/digestion of particular chemical classes) metabolic pathways. A metabolic network is a static representation of the chemical reactions that can happen in a particular organism: it derives from the knowledge of the reaction(s) catalysed by each single enzyme of the organism. The complete list of those enzymes is known with no uncertainty and derives from the total DNA sequencing of the organism. The involved players (i.e., metabolites, which are the nodes of the network) are physical objects that interact by a dynamical link (chemical reaction catalysed by an enzyme) but the kinetic data cannot be represented in a unique way (in addition they are very difficult to ascertain in vivo) because they can change up to four orders of magnitude depending to microenvironmental conditions (pH, nutrient concentration state, cell cycle phase,...) thus inhibiting any consistent network representation. This is why in literature a binary yes/no information linked to the presence/absence of enzymes is currently used (i.e., presence/absence of a reaction transforming metabolite i into metabolite j) (Martino et al., 2019a; Palumbo et al., 2005; Tun et al., 2006).
The interruption of the global connectivity of the metabolic network caused by a mutation that impairs the functionality of the enzyme catalysing an essential chemical reaction (and the consequent inability to follow a given pathway) is a necessary (but not sufficient) condition for organism death (Palumbo et al., 2005). The crucial role of metabolic networks makes them a preferred viewpoint for a lot of biomedical applications (Csermely et al., 2005; Bordbar et al., 2017).
This issue is especially crucial in the present case, where we address the analysis of the metabolic networks of biological species at different levels of biological hierarchy. Biological classifications can be carried out starting from different genotypic (e.g., DNA sequences) and phenotypic (e.g., morphological/physiological features) properties, the most relevant biological information derive from the discovery of meaningful relation between genotype and phenotype levels (Green et al., 2008). There are many still open biological questions at both theoretical and applicative level, which classification by metabolic network wiring structures could help to clarify.
At theoretical scale, we can mention:
the recognised lack of any simple one-to-one genotype-phenotype mapping (Reuveni and Giuliani, 2012; Wagner and Zhang, 2011) at single genes level asking for different level of aggregation;
the diversity of phylogenetic trees based on different genotypic features confounding the quest for an optimal evolutionary reconstruction of the tree of life (Huelsenbeck et al., 1996; Hipp et al., 2004) especially evident for microbial species (Martin, 2002; Ereshefsky, 2010).
As for the application side (strictly related to the above theoretical points) is important to stress:
the difficulty to find a phenotype shared at all levels of biological organisation from bacteria to metazoan allowing for a metric comparison and the consequent generation of global phenetic classifications;
the importance of finding ‘key features’ allowing us to estimate the reliability of translation from results obtained in a given species (family, genus) to another;
the need to characterise microbial communities in terms of functional traits and not only in terms of biodiversity measures based on presence/absence of different species (family, genus). The last point has to do with the growing interest of microbe flora in human intestinal tract (Cani, 2018; Schmidt et al., 2018) for therapeutic purposes.
In this work we will focus on the application side, with particular emphasis on points 1 and 2.
We demonstrate that the universal presence of metabolism in all the forms of life and the coherence of metabolic diversity across different layers of biological organisation allow for a consistent classification spanning at different scales (point 1). Moreover, we are able to detect (by the application of the INDVAL strategy – see later Section 3) the metabolic reactions discriminating different biological groups that give important hints on the molecular bases of ecological and molecular peculiarities of different organisms. The third point has not been faced in this work, but the extension to this analysis to the discrimination of ‘pathological’ and ‘normal’ microbiota by means of functional traits (presence-absence and relative importance of specific metabolic pathways) pertains to the same class of problems herewith discussed.
Let D={G1,…,GNP}<math><mi mathvariant="bold-script" is="true">D</mi><mo is="true">=</mo><mo stretchy="false" is="true">{</mo><msub is="true"><mi mathvariant="bold-script" is="true">G</mi><mn is="true">1</mn></msub><mo is="true">,</mo><mo is="true">…</mo><mo is="true">,</mo><msub is="true"><mi mathvariant="bold-script" is="true">G</mi><mrow is="true"><msub is="true"><mi is="true">N</mi><mi is="true">P</mi></msub></mrow></msub><mo stretchy="false" is="true">}</mo></math> be a dataset of NP graphs, where each graph G=(V,E)<math><mi mathvariant="bold-script" is="true">G</mi><mo is="true">=</mo><mo stretchy="false" is="true">(</mo><mi mathvariant="bold-script" is="true">V</mi><mo is="true">,</mo><mi mathvariant="bold-script" is="true">E</mi><mo stretchy="false" is="true">)</mo></math> is composed by the set of its edges (links) E<math><mi mathvariant="bold-script" is="true">E</mi></math> and the set of its vertices (nodes) V<math><mi mathvariant="bold-script" is="true">V</mi></math>. All graphs in D<math><mi mathvariant="bold-script" is="true">D</mi></math> belong to the domain P<math><mi mathvariant="bold-script" is="true">P</mi></math>. Since a (supervised) classification problem is considered, let L<math><mi mathvariant="bold-script" is="true">L</mi></math> be the set of corresponding ground-truth labels for each of the NP graphs in D<math><mi mathvariant="bold-script" is="true">D</mi></math>. Finally, consider D<math><mi mathvariant="bold-script" is="true">D</mi></math> to be split into three non-overlapping training, validation and test sets, i.e. DTR<math><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">TR</mi></msub></math>, DVAL<math><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">VAL</mi></msub></math> and DTS<math><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">TS</mi></msub></math> (respectively) such that DTR∪DVAL∪DTS=D<math><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">TR</mi></msub><mo is="true">∪</mo><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">VAL</mi></msub><mo is="true">∪</mo><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">TS</mi></msub><mo is="true">=</mo><mi mathvariant="bold-script" is="true">D</mi></math> and DTR∩DVAL∩DTS=∅<math><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">TR</mi></msub><mo is="true">∩</mo><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">VAL</mi></msub><mo is="true">∩</mo><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">TS</mi></msub><mo is="true">=</mo><mo is="true">∅</mo></math>. By extension, consider L<math><mi mathvariant="bold-script" is="true">L</mi></math> to be split accordingly (LTR<math><msub is="true"><mi mathvariant="bold-script" is="true">L</mi><mi mathvariant="normal" is="true">TR</mi></msub></math>, LVAL<math><msub is="true"><mi mathvariant="bold-script" is="true">L</mi><mi mathvariant="normal" is="true">VAL</mi></msub></math> and LTS<math><msub is="true"><mi mathvariant="bold-script" is="true">L</mi><mi mathvariant="normal" is="true">TS</mi></msub></math>, respectively).
In Dufrêne and Legendre (1997), the authors proposed a unified index called INDVAL aimed at identifying the ‘sensitivity’ and ‘specificity’ of single individual elements (species, in their work) belonging to different groups (environments, in their work). As this work is concerned, ‘individual elements’ are edges of a graph (namely, chemical reactions in a metabolic network) and, similarly, ‘groups’ can be deduced by the classification problem at hand thanks to L<math><mi mathvariant="bold-script" is="true">L</mi></math>.
Under the graphs point of view, the INDVAL I can be restated as follows:(1)Ai,j=#patternsinclassjhavinglinki#patternshavinglinki<math><mrow is="true"><msub is="true"><mi is="true">A</mi><mrow is="true"><mi is="true">i</mi><mo is="true">,</mo><mi is="true">j</mi></mrow></msub><mo is="true">=</mo><mfrac is="true"><mrow is="true"><mo is="true">#</mo><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">patterns</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">in</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">class</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">j</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">having</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">link</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">i</mi></mrow><mrow is="true"><mo is="true">#</mo><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">patterns</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">having</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">link</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">i</mi></mrow></mfrac></mrow></math>(2)Bi,j=#patternsinclassjhavinglinki#patternsbelongingtoclassj<math><mrow is="true"><msub is="true"><mi is="true">B</mi><mrow is="true"><mi is="true">i</mi><mo is="true">,</mo><mi is="true">j</mi></mrow></msub><mo is="true">=</mo><mfrac is="true"><mrow is="true"><mo is="true">#</mo><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">patterns</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">in</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">class</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">j</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">having</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">link</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">i</mi></mrow><mrow is="true"><mo is="true">#</mo><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">patterns</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">belonging</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">to</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">class</mi><mtext is="true"></mtext><mtext is="true"></mtext><mi is="true">j</mi></mrow></mfrac></mrow></math>(3)Ii,j=Ai,j·Bi,j·100<math><msub is="true"><mi is="true">I</mi><mrow is="true"><mi is="true">i</mi><mo is="true">,</mo><mi is="true">j</mi></mrow></msub><mo is="true">=</mo><msub is="true"><mi is="true">A</mi><mrow is="true"><mi is="true">i</mi><mo is="true">,</mo><mi is="true">j</mi></mrow></msub><mo is="true">·</mo><msub is="true"><mi is="true">B</mi><mrow is="true"><mi is="true">i</mi><mo is="true">,</mo><mi is="true">j</mi></mrow></msub><mo is="true">·</mo><mn is="true">100</mn></math>By definition, since Ai,j ∈ [0, 1] and Bi,j ∈ [0, 1], then Ii,j ∈ [0, 100]: the maximum value for A is obtained when the ith edge can only be found in patterns of class j, whereas the maximum value for B is obtained if all patterns of class j have the ith edge. Hence, the maximum INDVAL I corresponds to the maximum specificity and sensitivity of the ith edge for the jth group (class), i.e. the ‘perfect edge’: all patterns of class j have the ith link and no patterns belonging to other classes have the ith link.
By considering E¯<math><mover accent="true" is="true"><mi mathvariant="bold-script" is="true">E</mi><mo is="true">¯</mo></mover></math> as the set of unique edges in DTR∪DVAL<math><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">TR</mi></msub><mo is="true">∪</mo><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">VAL</mi></msub></math> and L¯<math><mover accent="true" is="true"><mi mathvariant="bold-script" is="true">L</mi><mo is="true">¯</mo></mover></math> as the set of unique labels for the classification problem at hand, then one can figure A,B,I∈ℝ|E¯|×|L¯|<math><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">A</mtext></mstyle></mrow><mo is="true">,</mo><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">B</mtext></mstyle></mrow><mo is="true">,</mo><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">I</mtext></mstyle></mrow><mo is="true">∈</mo><msup is="true"><mrow is="true"><mstyle mathvariant="double-struck" is="true"><mi is="true">ℝ</mi></mstyle></mrow><mrow is="true"><mo stretchy="false" is="true">|</mo><mrow is="true"><mover accent="true" is="true"><mi mathvariant="bold-script" is="true">E</mi><mo is="true">¯</mo></mover></mrow><mo stretchy="false" is="true">|</mo><mo is="true">×</mo><mo stretchy="false" is="true">|</mo><mrow is="true"><mover accent="true" is="true"><mi mathvariant="bold-script" is="true">L</mi><mo is="true">¯</mo></mover></mrow><mo stretchy="false" is="true">|</mo></mrow></msup></math> as the compact representation of expressions (1), (2) and (3) in a matrix form. Then, one can select edges (rows) from I whether at least one of the INDVALs (columns) is above a given user-defined threshold T. In other words, edges are selected if considered relevant for at least one of the problem-related classes. Let A={s1,…,sM}<math><mi mathvariant="bold-script" is="true">A</mi><mo is="true">=</mo><mo stretchy="false" is="true">{</mo><msub is="true"><mi is="true">s</mi><mn is="true">1</mn></msub><mo is="true">,</mo><mo is="true">…</mo><mo is="true">,</mo><msub is="true"><mi is="true">s</mi><mi is="true">M</mi></msub><mo stretchy="false" is="true">}</mo></math> be the set of selected edges (i.e., the alphabet) and let M=|A|<math><mi is="true">M</mi><mo is="true">=</mo><mo stretchy="false" is="true">|</mo><mi mathvariant="bold-script" is="true">A</mi><mo stretchy="false" is="true">|</mo></math> be its size.
Finally, the embedding follows by relying on the symbolic histogram approach: each pattern from DTR<math><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">TR</mi></msub></math>, DVAL<math><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">VAL</mi></msub></math> and DTS<math><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">TS</mi></msub></math> is individually transformed into an M-length integer-valued vector containing, in position i, the number of occurrences of the ith relevant edge (alphabet symbol) within the original graph. Specifically, each given graph G<math><mi mathvariant="bold-script" is="true">G</mi></math> is cast into an M-length integer vector hG(A)<math><msub is="true"><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">h</mtext></mstyle></mrow><mi mathvariant="bold-script" is="true">G</mi></msub><mo stretchy="false" is="true">(</mo><mi mathvariant="bold-script" is="true">A</mi><mo stretchy="false" is="true">)</mo></math> as follows:(4)hG(A)=[count(s1,G),…,count(sM,G)]<math><msub is="true"><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">h</mtext></mstyle></mrow><mi mathvariant="bold-script" is="true">G</mi></msub><mo stretchy="false" is="true">(</mo><mi mathvariant="bold-script" is="true">A</mi><mo stretchy="false" is="true">)</mo><mo is="true">=</mo><mo stretchy="false" is="true">[</mo><mi mathvariant="normal" is="true">count</mi><mo stretchy="false" is="true">(</mo><msub is="true"><mi is="true">s</mi><mn is="true">1</mn></msub><mo is="true">,</mo><mi mathvariant="bold-script" is="true">G</mi><mo stretchy="false" is="true">)</mo><mo is="true">,</mo><mo is="true">…</mo><mo is="true">,</mo><mi mathvariant="normal" is="true">count</mi><mo stretchy="false" is="true">(</mo><msub is="true"><mi is="true">s</mi><mi is="true">M</mi></msub><mo is="true">,</mo><mi mathvariant="bold-script" is="true">G</mi><mo stretchy="false" is="true">)</mo><mo stretchy="false" is="true">]</mo></math>where counts(a, b) is a function that counts the number of occurrences of a in b. Therefore, the three splits DTR<math><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">TR</mi></msub></math>, DVAL<math><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">VAL</mi></msub></math> and DTS<math><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">TS</mi></msub></math> are cast into three proper instance matrices DTR∈ℝ|DTR|×M<math><msub is="true"><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">D</mtext></mstyle></mrow><mi mathvariant="normal" is="true">TR</mi></msub><mo is="true">∈</mo><msup is="true"><mrow is="true"><mstyle mathvariant="double-struck" is="true"><mi is="true">ℝ</mi></mstyle></mrow><mrow is="true"><mo stretchy="false" is="true">|</mo><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">TR</mi></msub><mo stretchy="false" is="true">|</mo><mo is="true">×</mo><mi is="true">M</mi></mrow></msup></math>, DVAL∈ℝ|DVAL|×M<math><msub is="true"><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">D</mtext></mstyle></mrow><mi mathvariant="normal" is="true">VAL</mi></msub><mo is="true">∈</mo><msup is="true"><mrow is="true"><mstyle mathvariant="double-struck" is="true"><mi is="true">ℝ</mi></mstyle></mrow><mrow is="true"><mo stretchy="false" is="true">|</mo><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">VAL</mi></msub><mo stretchy="false" is="true">|</mo><mo is="true">×</mo><mi is="true">M</mi></mrow></msup></math> and DTS∈ℝ|DTS|×M<math><msub is="true"><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">D</mtext></mstyle></mrow><mi mathvariant="normal" is="true">TS</mi></msub><mo is="true">∈</mo><msup is="true"><mrow is="true"><mstyle mathvariant="double-struck" is="true"><mi is="true">ℝ</mi></mstyle></mrow><mrow is="true"><mo stretchy="false" is="true">|</mo><msub is="true"><mi mathvariant="bold-script" is="true">D</mi><mi mathvariant="normal" is="true">TS</mi></msub><mo stretchy="false" is="true">|</mo><mo is="true">×</mo><mi is="true">M</mi></mrow></msup></math>.
The embedding conceptual scheme is summarised in Fig. 1. Training and validation sets are selected for INDVAL evaluation, namely:
enumeration of unique edges (E¯<math><mover accent="true" is="true"><mi mathvariant="bold-script" is="true">E</mi><mo is="true">¯</mo></mover></math>) in graphs therein contained
enumeration of the unique number of labels (L¯<math><mover accent="true" is="true"><mi mathvariant="bold-script" is="true">L</mi><mo is="true">¯</mo></mover></math>)
evaluation of I according to Eqs. (1)–(3).
The set of edges, along with their respective INDVAL scores, are then subject to thresholding: given the user-defined threshold T, all edges having I > T for at least one of the problem-related classes are collected into the alphabet A<math><mi mathvariant="bold-script" is="true">A</mi></math>. The alphabet contains the pivotal substructures on the top of which the embedding shall be performed, so the three sets (training, validation and test) are individually subject to the embedding procedure thanks to the symbolic histograms (see Eq. (4)) in order to return the three instance matrices, which must be forwarded to the classification stage, described in Section 3.2.
Thanks to the embedding, the problem has been moved from the graph domain towards the Euclidean space (see the three instance matrices DTR, DVAL and DTS). Furthermore, we stress the importance of performing a feature (alphabet symbol) selection whilst training the classification system. Indeed, the number and quality of symbols in A<math><mi mathvariant="bold-script" is="true">A</mi></math> is strictly related to T which, albeit being the only parameter to be defined by the end-user in order to perform the embedding, is also critical. The resulting set of symbols after the feature selection phase might improve the model interpretability, a key feature in information granulation-based classifiers (Martino et al., 2018a). As graph classification problems are concerned, one might indeed ask why these edges are considered as significant for the problem at hand, hence fostering an a-posteriori knowledge discovery phase, possibly leaded by field-experts.
In this work, a classification system based on 1-norm Support Vector Machine (ℓ1 -SVM) (Zhu et al., 2003) is investigated since:
by minimising the 1-norm instead of the 2-norm of the separating hyperplane (as in standard SVMs (Boser et al., 1992, Cortes and Vapnik, 1995)), it returns a solution (hyperplane coefficient vector) which is sparse: this allows to perform feature selection during training
there exist efficient implementations for sparse data (Fan et al., 2008).
In order to tune the ℓ1 -SVM parameters, a genetic algorithm (Goldberg, 1989) has been used.4 Each individual from the evolving population has a genetic code of the form:(5)[C,C+,C−]<math><mo stretchy="false" is="true">[</mo><mi is="true">C</mi><mo is="true">,</mo><mtext is="true"></mtext><msub is="true"><mi is="true">C</mi><mo is="true">+</mo></msub><mo is="true">,</mo><mtext is="true"></mtext><msub is="true"><mi is="true">C</mi><mo is="true">−</mo></msub><mo stretchy="false" is="true">]</mo></math>where C ∈ (0, + 10] is the regularisation term and C+, C− ∈ ([−10, + 10] are two additional weights in order to adjust C in a class-wise fashion: for a given value C, the misclassification penalties for negative and positive instances will have values C · C− and C · C+, respectively. Given the triplet of parameters 〈C, C+, C−〉 written in its genetic code, each individual trains an ℓ1 -SVM on DTR and its results are validated on DVAL. The optimal hyperparameters set is the one that minimises the following fitness function on DVAL:(6)F=α·(1−J)+(1−α)·|β≠0||β|<math><mi is="true">F</mi><mo is="true">=</mo><mi is="true">α</mi><mo is="true">·</mo><mo stretchy="false" is="true">(</mo><mn is="true">1</mn><mo is="true">−</mo><mi is="true">J</mi><mo stretchy="false" is="true">)</mo><mo is="true">+</mo><mo stretchy="false" is="true">(</mo><mn is="true">1</mn><mo is="true">−</mo><mi is="true">α</mi><mo stretchy="false" is="true">)</mo><mo is="true">·</mo><mfrac is="true"><mrow is="true"><mo stretchy="false" is="true">|</mo><mrow is="true"><mstyle mathvariant="bold-italic" is="true"><mi is="true">β</mi></mstyle></mrow><mo is="true">≠</mo><mn is="true">0</mn><mo stretchy="false" is="true">|</mo></mrow><mrow is="true"><mo stretchy="false" is="true">|</mo><mrow is="true"><mstyle mathvariant="bold-italic" is="true"><mi is="true">β</mi></mstyle></mrow><mo stretchy="false" is="true">|</mo></mrow></mfrac></math>where J is the (normalised5) informedness6 (Powers, 2011, Youden, 1950), defined as:(7)J=(Sensitivity+Specificity−1)+12∈[0,1]<math><mi is="true">J</mi><mo is="true">=</mo><mfrac is="true"><mrow is="true"><mo stretchy="false" is="true">(</mo><mi mathvariant="normal" is="true">Sensitivity</mi><mo is="true">+</mo><mi mathvariant="normal" is="true">Specificity</mi><mo is="true">−</mo><mn is="true">1</mn><mo stretchy="false" is="true">)</mo><mo is="true">+</mo><mn is="true">1</mn></mrow><mn is="true">2</mn></mfrac><mo is="true">∈</mo><mo stretchy="false" is="true">[</mo><mn is="true">0</mn><mo is="true">,</mo><mn is="true">1</mn><mo stretchy="false" is="true">]</mo></math>whereas the rightmost term takes into account the sparsity of the hyperplane vector β. Finally, α ∈ [0, 1] is a user-defined parameter which weights the contribution of the leftmost (performance) and rightmost (final alphabet size) terms. Given the (sub-)optimal 〈C★,C+★,C−★〉<math><mo is="true">〈</mo><msup is="true"><mi is="true">C</mi><mo is="true">★</mo></msup><mo is="true">,</mo><msubsup is="true"><mi is="true">C</mi><mo is="true">+</mo><mo is="true">★</mo></msubsup><mo is="true">,</mo><msubsup is="true"><mi is="true">C</mi><mo is="true">−</mo><mo is="true">★</mo></msubsup><mo is="true">〉</mo></math> triplet, the final performances are evaluated on DTS.
It is noteworthy that in the embedding space any classification system can be used, either natively equipped or not with feature selection capabilities. For the sake of argument, a second classification system based on ν-SVM (Schölkopf et al., 2000) is investigated: ν-SVMs minimise the 2-norm of the separating hyperplane, hence they do not return a sparse solution. Following some previous works (De Santis et al., 2018; Martino et al., 2018c, 2017b; Di Noia et al., 2019), the ν-SVM is equipped with the radial basis function kernel:(8)k(x,y)=exp−γ·D2(x,y)<math><mi is="true">k</mi><mo stretchy="false" is="true">(</mo><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">x</mtext></mstyle></mrow><mo is="true">,</mo><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">y</mtext></mstyle></mrow><mo stretchy="false" is="true">)</mo><mo is="true">=</mo><mi mathvariant="normal" is="true">exp</mi><mrow is="true"><mfenced open="{" close="}" is="true"><mrow is="true"><mo is="true">−</mo><mi is="true">γ</mi><mo is="true">·</mo><msup is="true"><mi is="true">D</mi><mn is="true">2</mn></msup><mo stretchy="false" is="true">(</mo><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">x</mtext></mstyle></mrow><mo is="true">,</mo><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">y</mtext></mstyle></mrow><mo stretchy="false" is="true">)</mo></mrow></mfenced></mrow></math>where x, y are two given patterns from the dataset at hand, D(·, ·) is a suitable (dis)similarity measure and γ is the kernel shape parameter. The dissimilarity measure reads as is the weighted Euclidean distance:(9)D(x,y,w)=∑i=1Mwi·(xi−yi)2<math><mi is="true">D</mi><mo stretchy="false" is="true">(</mo><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">x</mtext></mstyle></mrow><mo is="true">,</mo><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">y</mtext></mstyle></mrow><mo is="true">,</mo><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">w</mtext></mstyle></mrow><mo stretchy="false" is="true">)</mo><mo is="true">=</mo><msqrt is="true"><mrow is="true"><munderover is="true"><mo is="true">∑</mo><mrow is="true"><mi is="true">i</mi><mo is="true">=</mo><mn is="true">1</mn></mrow><mi is="true">M</mi></munderover><msub is="true"><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">w</mtext></mstyle></mrow><mi is="true">i</mi></msub><mo is="true">·</mo><msup is="true"><mrow is="true"><mo stretchy="false" is="true">(</mo><msub is="true"><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">x</mtext></mstyle></mrow><mi is="true">i</mi></msub><mo is="true">−</mo><msub is="true"><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">y</mtext></mstyle></mrow><mi is="true">i</mi></msub><mo stretchy="false" is="true">)</mo></mrow><mn is="true">2</mn></msup></mrow></msqrt></math>where M is the number of features (alphabet size) and wi ∈ {0, 1} for i = 1, …, M is the binary weight for the ith feature. Straightforwardly, w acts like β in the sense that both aim at selecting features (corresponding to non-zero elements). However, while β is automatically returned by the training phase, w is orchestrated by genetic optimisation. Hence, the genetic code for ν-SVMs has the form:(10)[ν,γ,w]<math><mo stretchy="false" is="true">[</mo><mi is="true">ν</mi><mo is="true">,</mo><mtext is="true"></mtext><mi is="true">γ</mi><mo is="true">,</mo><mtext is="true"></mtext><mrow is="true"><mstyle mathvariant="bold" is="true"><mtext is="true">w</mtext></mstyle></mrow><mo stretchy="false" is="true">]</mo></math>where ν ∈ (0, 1] by definition and γ ∈ (0, 100]. The training and validation procedure is the same as the ℓ1 -SVMs case: each individual strips the parameter written in its genetic code and
evaluates the kernel matrix using w and γ, cf. (8)–(9)
trains the ν-SVM with regularisation parameter ν using the kernel matrix previously evaluated.
Using the Python Bioservices library (Cokelaer et al., 2013), from the KEGG database (Kanehisa and Goto, 2000,Kanehisa et al., 2016,Kanehisa et al., 2017), the entire dump of 5299 organisms whose metabolic pathway is known has been retrieved. Each organism has been described by its own metabolic network and mapped with a ground-truth class label, according to its taxonomical classification. Specifically, four different classification problems are investigated.

Problem 1

The entire set of 5299 organisms has been divided in two classes, Eukaryotes and Prokaryotes, on the base of their basic cellular architecture. This is the most ‘fundamental’ division of life located at the very basis of cellular architecture. As for the metabolic network wiring, the differences between prokaryotic (bacteria and archaea, the most simple forms of life) and eukaryotic (all the other organisms, from unicellular fungi to mammals) cell are striking. The classification task made few ‘signature’ edges (biochemical transformation) to emerge.

Problem 2

The entire set of 5299 organisms has been divided in six classes, depending on their kingdom: Animals, Archaea, Bacteria, Fungi, Plants and Protists. This is mainly an ‘exercise on evolution’: the ‘kingdom’ is the highest level of biological classification and the discrimination of different kingdoms by means of metabolic network wiring is a sort of ‘benchmark’ for proposing metabolic networks as ‘universal phenotype’ for evolution studies. This is not a trivial task if we consider that while all the organisms can be compared as for their genotype (basically, DNA sequences), this does not hold for phenotypes (i.e., actual physiological features). It is in fact very difficult to think of a sufficiently complex physiological process in common between a yeast and a dog other than the need to perform an efficient metabolism.

Problem 3

The third problem concernes the classification of metazoa (multicellular animal species made of organised tissues and organs). In order to ensure a fair balance between number of classes and number of samples per class:

•

organisms with no (Linnaeus’) class have been discarded

•

(Linnaeus’) classes having less than 5 organisms have been discarded.
The entire set of 5299 organisms has been divided in two classes, Eukaryotes and Prokaryotes, on the base of their basic cellular architecture. This is the most ‘fundamental’ division of life located at the very basis of cellular architecture. As for the metabolic network wiring, the differences between prokaryotic (bacteria and archaea, the most simple forms of life) and eukaryotic (all the other organisms, from unicellular fungi to mammals) cell are striking. The classification task made few ‘signature’ edges (biochemical transformation) to emerge.
The entire set of 5299 organisms has been divided in six classes, depending on their kingdom: Animals, Archaea, Bacteria, Fungi, Plants and Protists. This is mainly an ‘exercise on evolution’: the ‘kingdom’ is the highest level of biological classification and the discrimination of different kingdoms by means of metabolic network wiring is a sort of ‘benchmark’ for proposing metabolic networks as ‘universal phenotype’ for evolution studies. This is not a trivial task if we consider that while all the organisms can be compared as for their genotype (basically, DNA sequences), this does not hold for phenotypes (i.e., actual physiological features). It is in fact very difficult to think of a sufficiently complex physiological process in common between a yeast and a dog other than the need to perform an efficient metabolism.
The third problem concernes the classification of metazoa (multicellular animal species made of organised tissues and organs). In order to ensure a fair balance between number of classes and number of samples per class:
organisms with no (Linnaeus’) class have been discarded
(Linnaeus’) classes having less than 5 organisms have been discarded.
The fourth problem deals with classification of Bacteria. Again, in order to ensure a fair balance between number of classes and number of samples per class all (Linnaeus’) classes having less than 50 organisms have been discarded. The resulting dataset consists in 1456 organisms belonging to 17 classes: Bacillus, Bifidobacterium, Burkholderia, Campylobacter, Chlamydia, Clostridium, Corynebacterium, Escherichia, Helicobacter, Lactobacillus, Mycobacterium, Mycoplasma, Pseudomonas, Salmonella, Staphylococcus, Streptococcus, Streptomyces. The phenotypic classification of Bacteria is a particularly hard problem (Brenner et al., 2015) but has a crucial importance in biomedicine. Two applications with potentially huge consequences for human health are: a) the definition of ‘healthy’ and ‘pathological’ microbiota (the symbiotic/parasitic micro-organism communities playing a crucial role in human metabolism and disease, see (Marchesi et al., 2016)); b) the development of new antibiotic molecules efficiently contrasting emerging iatrogenic infections, see (Weinstein and Hota, 2004).
Fig. 2 shows the classes distribution for Problems 1–4, respectively.
Each of the four datasets has been split in a stratified manner in order to preserve labels’ distribution across DTR, DVAL and DTS. Due to the intrinsic randomness in stratified sampling and in order to show the robustness of the proposed approach, 10 stratified training/validation/test set splits have been performed for each of the four Problems. Percentages in all splits are: training set (50%), validation set (25%) and test set (25%).
As introduced in Section 2, the metabolism of a given organism can be described by a network whose nodes correspond to metabolites (substrate/product of a chemical reaction) and a link between two nodes exist whether there is a chemical reaction involving the two metabolites. As in Tun et al. (2006), for each organism, the metabolic pathway has been described according to a binary N × N adjacency matrix, where N is the total number of metabolites present (at least once) in the analysed dataset: if a given metabolite k is not present in a particular organism, then all entries of the kth row and column of its adjacency matrix are set to 0. Thanks to the maximal coverage set of nodes, adjacency matrices corresponding to metabolic pathways belonging to different organisms have the same size and therefore can easily be compared. The most straightforward idea for measuring dissimilarities between metabolic networks is by matching their adjacency matrices using the Hamming distance (Hamming, 1950): the distance between two networks is given by the number of discrepancies in their respective adjacency matrices.
In a first analysis, the four problems from Section 4.1 have been solved without performing any granulation and embedding, but relying on a K-Nearest Neighbour (K-NN) classifier (Cover and Hart, 1967) equipped with the Hamming distance. The learning procedure does not change with respect to what previously explained in Section 3.2: for a given value of K ∈ [1, 20] (number of neighbours), the K-NN decision rule is applied by taking DTR as the training set and its performances are evaluated on DVAL. The (sub-)optimal K★ is the one which maximises the informedness7 as in Eq. (7) and the final performances are evaluated in DTS.
For a thorough investigation, multiclass problems are casted into binary one-against-all problems: the ith classifier sees the ith class as positive and all other classes as negatives. Performances on DTS are presented via the following performance measures:Accuracy: ACC=TN+TPTN+TP+FN+FP<math><mi is="true">ACC</mi><mo is="true">=</mo><mfrac is="true"><mrow is="true"><mi is="true">TN</mi><mo is="true">+</mo><mi is="true">TP</mi></mrow><mrow is="true"><mi is="true">TN</mi><mo is="true">+</mo><mi is="true">TP</mi><mo is="true">+</mo><mi is="true">FN</mi><mo is="true">+</mo><mi is="true">FP</mi></mrow></mfrac></math>Specificity: SPC=TNTN+FP<math><mi is="true">SPC</mi><mo is="true">=</mo><mfrac is="true"><mi is="true">TN</mi><mrow is="true"><mi is="true">TN</mi><mo is="true">+</mo><mi is="true">FP</mi></mrow></mfrac></math>Sensitivity: SNS=TPTP+FN<math><mi is="true">SNS</mi><mo is="true">=</mo><mfrac is="true"><mi is="true">TP</mi><mrow is="true"><mi is="true">TP</mi><mo is="true">+</mo><mi is="true">FN</mi></mrow></mfrac></math>Negative Prdeictive Value: NPV=TNTN+FN<math><mi is="true">NPV</mi><mo is="true">=</mo><mfrac is="true"><mi is="true">TN</mi><mrow is="true"><mi is="true">TN</mi><mo is="true">+</mo><mi is="true">FN</mi></mrow></mfrac></math>Positive Predictive Value: PPV=TPTP+FP<math><mi is="true">PPV</mi><mo is="true">=</mo><mfrac is="true"><mi is="true">TP</mi><mrow is="true"><mi is="true">TP</mi><mo is="true">+</mo><mi is="true">FP</mi></mrow></mfrac></math>where TP, TN, FP and FN indicate true positives, true negatives, false positives and false negatives (respectively).
Table 1, Table 2, Table 3, Table 4 show the K-NN performances for Problems 1–4, respectively, exhibiting an (almost) perfect discrimination regardless of the taxonomical scale. Figures of merit have been averaged8 across the 10 stratified training/validation/test set splits and are given in percentage. The (sub-)optimal K★, defined as the most frequent K value across the 10 splits for each class, is also reported. Classes are ordered according to Fig. 2a–d (x-axes, left to right).
In Section 4.2 the classification results when using the entire metabolic network are shown. In this Section, the INDVAL-based granulation and subsequent embedding is investigated using the classification systems described in Section 3.2. To ensure a fair comparison between the two SVMs-based classification systems and the K-NN from Section 4.2, the same 10 stratified training/validation/test set splits have been used.
For both SVMs, the fitness function tradeoff parameter α has been set as α = 0.5 in order to give the same importance to sparsity and performances. Since the INDVAL is in range [0, 100], a reasonable threshold T = 50 is selected for prior edges filtering and alphabet synthesis. The genetic algorithm wrapping both SVMs-based systems has the following setup: 100 individuals per 100 generations with a strict early-stop criterion if the average change in the fitness function over 1/3rd of the generations is less than or equal to 10−6, the elitism is set to 10% of the population, the selection follows the roulette wheel heuristic, the crossover operator generates new offsprings in a scattered fashion and the mutation acts in a flip-the-bit fashion for boolean genes (ν-SVM only) and adds to real-valued genes a random number extracted from a zero-mean Gaussian distribution whose variance shrinks as generations go by.
Table 5, Table 6, Table 7, Table 8 show SVMs performances9 for Problems 1–4, respectively. Along with the five figures of merit from Section 4.2, the sparsity is also shown. The latter is defined as the percentage of selected symbols with respect to the starting alphabet size (the lower, the better). Table 9 shows the starting alphabet size for all four Problems, again averaged across the 10 splits.
Amongst the two SVMs-based systems, ℓ1 -SVMs outperform ν-SVMs in terms of alphabet selection in the vast majority of cases (Problems 1–3). The opposite is true only for few classes from Problem 4. Apart from a minor shift in sensitivity, the two systems perform equally for Problem 1 (Table 5). For Problems 2 and 3, ℓ1 -SVMs outperform ν-SVMs in terms of sensitivity and negative predictive value; the opposite is true for specificity and positive predictive value. For Problem 4, classes 4, 7, 9 and 12 seem harder to discriminate given the low precision (PPV) and low sensitivity (for ℓ1 -SVMs). It is possible to improve these results by changing the threshold T, hence Problem 4 has been solved again by lowering the threshold from T = 50 to T = 30. Table 10 shows the corresponding results where, for the sake of shorthand, only classes 4, 7, 9 and 12 are displayed.
As can be easily seen, K-NN slightly outperforms the two SVMs-based classification systems, both relying on the proposed information granulation and embedding. However, the latter approach has an overwhelming advantage, since it enables knowledge discovery, of utmost importance in most data driven modelling applications. Specifically, the K-NN serves as a suitable benchmark for the following two reasons:
K-NN is the simplest decision rule, with no training procedure, which does not return any compressed model of the system to be analysed
K-NN exploits the entire metabolic networks.
In other words, K-NN exploits the entire information contained in each pattern of the training set. The proposed technique, as instead, relies on an embedding procedure on the top of relevant edges of the considered networks (instead of the entire network), with a further feature selection phase that allows to select a suitable subset of such edges. Since the performances are rather comparable, the proposed embedding procedure retains the vast majority of the information contained in the original dataset. This adds up to the aforementioned knowledge discovery phase, totally absent in the K-NN experiment, as new predictions are made by plain matching of the adjacency matrices. Between the two SVMs-based systems, ℓ1 -SVMs are faster and easier to train due to the following reasons: their training phase relies on a linear programming rather than a quadratic programming problem, they are linear classifiers and do not require the explicit kernel evaluation (see Eqs. (8)–(9)), their optimisation phase is easier due to the intrinsic feature selection phase (cf. Eq. (5) vs. Eq. (10)). However, generally speaking, being linear classifiers by definition, their performances might not be satisfactory for complex, non-linear decision boundaries.
In order to statistically show the difference in classification, the proposed classification systems have been benchmarked against the blind classifier: we observed highly significant departures of the proposed classifiers against the null-model (see Supplementary File for details).
The choice of T, albeit being the only parameter to be tuned by the end-user in order to build the alphabet, is critical: a higher T generally leads to a smaller alphabet which, in turn, leads to a smaller embedding space which might not quite properly describe the original input space. Conversely, a larger embedding space might be computationally expensive, especially when selecting a suitable subset of meaningful alphabet symbols is required. Indeed:
the distance between two vectors in ℝm<math><msup is="true"><mrow is="true"><mstyle mathvariant="double-struck" is="true"><mi is="true">ℝ</mi></mstyle></mrow><mi is="true">m</mi></msup></math>, either evaluated as a plain Euclidean distance or via dot product, has complexity O(m)<math><mi mathvariant="bold-script" is="true">O</mi><mo stretchy="false" is="true">(</mo><mi is="true">m</mi><mo stretchy="false" is="true">)</mo></math>
in case of (evolutionary) metaheuristics, the search space is strictly related to the alphabet size (cf. Eq. (10)): a larger alphabet implies a larger search space which, in turn, might lead to a larger number of individuals/generations (for better exploration) and/or larger probability of being trapped in local minima.
The aim of this Section is to investigate the impact of the threshold T in terms of embedding space complexity (i.e., dimensionality) against performances on the test set, where T ∈ [10, 90] with step size 10. The four Problems and corresponding splits being equal, Fig. 3 shows the tradeoff between alphabet size (both before – after T thresholding – and after the feature selection phase) and the performances in terms of normalised informedness (see Eq. (7)) when using ℓ1 -SVMs as classification system. From Fig. 3, it is clear that, as the problem gets more difficult, more edges are needed (e.g., a smaller T). Indeed:
eukaryotes and prokaryotes can be (almost) perfectly classified even at T = 90 (the largest tested value)
different kingdoms can be (almost) perfectly classified for T ≤ 80: note from Fig. 3b that the informedness for class 6 drops from circa 90% to circa 60% when sliding T from 80 to 90
organisms within the animal kingdom can be (almost) perfectly classified for T ≤ 60: see from Fig. 3c the behaviour of classes 1 and 5 for T > 60
different bacteria can be (almost) perfectly classified for T ≤ 30: only classes 1, 3, 5, 11, 13, 15 and 17 show outstanding classification performances up to T = 90.
Similar considerations hold when using ν-SVMs as classification systems, as reported in Fig. 4, which are, however, featured by a higher number of selected symbols (as already shown in Tables 5–8).
Besides the efficiency in classification, the INDVAL strategy allows the field-expert to focus on specific substructures (edges, in this work) at the basis of the embedding procedure, namely substructures marked as ‘important’ for the classification system. Indeed, it is worth stressing that the threshold T leads to a prior substructures filtering, whereas the feature selection phase during classification refines the alphabet selection.
As far as the metabolic networks application is concerned, the final set of biochemical reactions can give some interesting hints for the functional basis of the among organisms differences. All of the four problems gave rise to interesting biological solutions in terms of INDVAL ‘almost perfect’ edges (score non-zero for a given class vs. score 0 for other classes) or ‘perfect’ edges (score 100 for a given class vs. score 0 for all other classes), which will be separately discussed in the following.
As reported in Table 11, all the eukaryotic-only edges involve (directly or indirectly) inositol metabolism. The puzzling point is that inositol molecule is present in prokaryotes too, but while in prokaryotes inositol is mainly involved in maintaining a correct acid-base balance protecting some bacterial species from inactivation by the host during infections, in eukaryotes via both its antioxidant activity and its ability to detoxify a variety of toxic thiol-reactive compounds (Roberts, 2006) this molecule (in the form of inositol phosphate) is a key component of (eukaryotic) signalling pathways that do not occur in bacteria and archaea (Majerus et al., 1999). Biological membranes (both nuclear and cell membrane) are the ‘gates’ mediating these signalling pathways and all the ‘inositol-linked’ signature edges have to do with reactions involving inositol in conjunction with membrane components.
The most prominent difference between prokaryotic and eukaryotic organisation (reflected by their respective Greek-derived names: eu-karios means ‘well formed nucleus’ while pro-karios translates into ‘primitive nucleus’) is the absence in prokaryotes of a definite compartmentalisation between nucleus (the site of genetic information) and the rest of the cell, while this compartmentalisation is very strict in eukaryotes (Alberts et al., 2015). Besides the nucleus/cytoplasm separation eukaryotic cells display a very ordered and complex patterning of different compartments (organelles) that allow to keep separate different cell functionalities. Such a fundamental organisation difference between eukaryotic and prokaryotic cells could give the (false) impression that there are many metabolic pathways unique for each group, spanning the entire range of functionalities. This is not the case, as the ecological dimension of life rules out any too simplistic quantitative reasoning: bacteria play a crucial role in both external (rivers, lakes, soil, oceans) and internal (gut, nose, buccal and vaginal mucosa) ecologies in terms of degradation and production of biological matter. This role implies that the products of bacterial metabolism must ‘match’ with enzymes able to transform these metabolites so to enter into eukaryotic metabolism while at the same time, to accomplish the task of recycling the degradation products coming from eukaryotic forms, the bacterial metabolism must have the specific enzymes to let these products to enter prokaryotic metabolism.
This ‘recycling’ activity is essential for the maintaining of life (by the way, bacteria constitute a consistent part of the global biomass (Bar-On et al., 2018)) and necessitates the establishing of strong functional relations between such incredibly distant kingdoms of life. The intermingled relation between evolutionary and environmental dimensions at the metabolic level is at the basis of the utmost interest of metabolic network wiring comparison.
On the other side, the fact that only ‘unique edges’ are linked to inositol metabolism, is of utmost interest for shedding light on the role of inositol in ‘purely multicellular/eukaryotic’ features like differentiation and cancer.
The eukaryotic organisation makes membranes the preferred site of signalling between the external environment and cell allowing for cell differentiation (and thus the following development of specialised tissues and organs). This is why the appearing (after approximately two billion years of prokaryotic-only life) of the eukaryotic cell is considered by many scientists the most prominent milestone in the evolution of life (Knoll, 2014).
The fact that such a complete re-shaping of cell architecture presents a ‘perfectly discriminating signature’ in terms of a relatively simple molecular system like Inositol (and its derivatives involved in membrane signalling) opens very interesting perspectives. As for biological theory, this result suggests a single critical transition that, by a ‘different use’ of an already present molecule, triggers a cascade of events making possible superior forms of life by a sort of ‘compartmentalisation revolution’. In more applicative terms, the (largely unexpected) ‘fundative’ role of Inositol helps to get rid of the accumulating evidence of the involvement of Inositol in different regulation circuits of utmost biomedical interest like psychiatric syndromes, diabetes, fertility problems and cancer (Berridge, 2016, Mackenzie and Elliott, 2014, Suárez-Causado et al., 2015).
It is worth commenting the ‘metabolic bases’ suggested by our Granular Computing approach as for the ‘amongst-Kingdoms separation’. We will focus on different kingdoms metabolic peculiarities (maximal or near maximal INDVAL values) in order to highlight the particular ‘ecological’ dimension added by the proposed approach to classical phylogenies.
Archaea are the last kingdom of the tree-of-life to be discovered, they are prokaryotes, like bacteria (or, more correctly eubacteria, in order to better distinguish them from archaebacteria — archaea), and are considered the organisms most similar to the initial forms of life on Earth as well as the direct precursors of eukaryotic forms (Martin, 2005). The chemical reactions that better allow archaea identification are linked to Acetyl-CoA metabolism and consequently to fatty acid metabolism. These arches are particularly relevant to distinguish archaea from eubacteria (Dibrova et al., 2014). Acetate and Acetyl-CoA play fundamental roles in all of biology, including anaerobic prokaryotes from the both bacteria and archaea, which compose an estimated quarter of all living protoplasm in Earth's biosphere. Anaerobes from the domain Archaea (at odds with Bacteria) have the unique property to produce methane, so contributing to the global carbon cycle by metabolising acetate as a growth substrate or product. Acetate-utilising anaerobes classified in the domain Archaea also proliferate in environments where terminal electron acceptors are abundant and obtain energy through anaerobic respiration, converting acetate to CO2 (Ferry, 2015, Schäfer et al., 1993). The Archaea colonise extreme environments (e.g., thermal source at near 100° temperature or the bottom of the oceans at incredibly high pressure, ices, ...) so allowing for the global Earth carbon cycle. In this case, the metabolic network analysis allowed to catch the essential of the organisms ecology, complementing the classical genetics based phylogenesis with the peculiar environmental (phenotypic) role of these organisms.
Most of the Earth biomass is made by plants, this is not strange if we think that the primary input of matter into the biosphere comes from plants, which are responsible of the initial transformation of the primary energy input (light coming from the Sun) into nutrients that are then made accessible to other organisms. This singular position of plants at the beginning of global metabolic cycles is made possible by photosynthetic pigments (mainly chlorophyll) that are in charge to ‘capture’ photons. This is why this kingdom has a lot of ‘specific edges’ (unique metabolic reactions) mainly linked to the production and/or transformation of these pigments. Under the same heading, being plants ‘primary producers’ of organic material, we found some constituents (e.g., mannose, oxaloacetate) that are peculiar to plants that in turn individuate specific reactions in which they are involved in the plant metabolic networks.
At odds with plants, that are autotroph (a Greek word that indicates that they produce by themselves their food), fungi are heterotroph (need an external source of food) and their metabolic peculiarities are strictly related to their ‘struggle for life’ in soil ecosystems where they must compete with different kind of organisms (mainly bacteria) to occupy their trophic niche. Human made use of the weapons used by fungi to find a place in the extremely competitive soil ecology: the most known example is penicillin, an antibiotic molecule produced by the fungi of the Penicillium class to eliminate bacteria competing for the same habitat. In general, mushrooms are recognised as valuable sources of natural products with a great structural diversity, including cyclic peptides, steroids, sesquiterpenes and polysaccharides. They are known to exhibit various beneficial pharmacological properties such as antibacterial, immunomodulatory, hypocholesterolemic and antioxidant activities with a considerable therapeutic potential (Wasser, 2010). In our analysis, the fungi maximum INDVAL specific edges are related to the metabolism of ergostane and its derivatives: these molecules are hormones endowed with a marked biological activity going from antimicrobial to antioxidant and anti-inflammatory effects that are now under the focus of pharmacological research (Béni et al., 2019, Duecker et al., 2019). The unique features (discovered by our approach) of ergostane derivatives suggest they could be a still unexplored source of new drugs.
The metabolic reactions unique to animals involve myoinositol metabolism and the reaction converting phosphatidylcholine into phosphatidyl serine. We commented about the crucial role of myoinositol when talking about the eukaryotic/prokaryotic discrimination (see Section 5.1). This result allows us to better focus on the emerging role myoinositol that is not generically ‘eukaryotic-like’ but ‘animal-like’, so reinforcing the unique role of membrane signalling in animals with respect to other kingdoms of life. This result is consistent with the ‘phosphatidylcholine’ metabolism. Phosphatidylcholine is a major constituent of cell membranes and pulmonary surfactant, and is more commonly found in the exoplasmic or outer leaflet of a cell membrane. Phosphatidylcholine also plays a role in membrane-mediated cell signalling and activation of enzymes (Kanno et al., 2007).
Summing up the biological evidences coming from the ‘kingdom of life’ discrimination is evident how the ‘environment-organism’ interaction is managed at different levels of organism complexity. At lower level (Archaea) the single cell must cope with external (mainly physical) environment and the ‘metabolic peculiarities’ (high INDVAL edges) reflect the survival strategy in extreme situations. Going up the complexity scale (Fungi), competing organisms become a crucial part of the environment that in turn becomes ‘more biological’ and asks for specific ‘chemical weapons’ to survive. At the very end of organisation complexity (Animals) the single cell has no role to play in terms of environmental interactions: in a complex multicellular organism the main issue is to maintain an efficient signalling among cells so they can work in a coordinated way. The ‘environment’ of each cell are the other cells and coping with external environment is a matter of organised aggregates of cells like tissue, organs and integrated systems (e.g., immune system, nervous system, cardiovascular system, ...). This is registered by the animals specific edges that are all related to among cells signalling.
All relevant edges discussed so far for Problem 2 are summarised in Table 12.
As far as Problem 3 is concerned, ℓ1 -SVMs selected a single, perfect edge able to perfectly discriminate fishes against non-fishes. In other words, by using ℓ1 -SVMs, in order to check (with 100% accuracy, see Table 7) whether a given organism is a fish or not, it is possible to check whether this single edge (chemical reaction) exists or not in its metabolic network. The very same edge has also been selected by ν-SVMs, however alongside other edges. This means that ℓ1 -SVMs have been well able to exploit the ‘perfection’ and ‘meaningfulness’ of this edge for perfect classification: indeed, the INDVAL values for all other classes (birds, insects, mammals and reptiles) is 0 whereas the INDVAL for fishes is 100. This ’perfect’ chemical reaction is involved in ω-3 fatty acids biosynthesis and is reported in Table 13.
In fish species, lipids and proteins are the main organic constituents and play many important roles in the fish's life history and physiology, which includes growth, movement, reproduction and migration. The main role of lipids in these organisms is the storage and provision of energy in the form of Adenosine Triphosphate (ATP) through the β-oxidation of fatty acids (Olivares-Rubio and Vega-López, 2016). Furthermore, the fatty acids of fish lipids are rich in ω-3 long chain, highly unsaturated fatty acids (n-3 HUFA) that have particularly important roles in animal nutrition, including fish and human nutrition, reflecting their roles in critical physiological processes. Indeed, fish are the most important food source of these vital nutrients for man. Thus, the longstanding interest in fish lipids stems from their abundance and their uniqueness (Tocher, 2003). This uniqueness stems from fatty acid biosynthesis pathways only present in fishes. These ‘fish-only’ pathways have the phosphorylation of D-Glucuronate as signature.
At odds with the other problems faced in this work, in which the ‘golden standard’ biological classification can be considered relatively stable, the discrimination among different bacterial classes is still in a turmoil. A paper recently appeared on Nature Biotechnology (Parks et al., 2018) reveals that a recently introduced phylogenetic approach made the 58% of the 95789 bacterial genomes known until last year, to change their taxonomy. It is worth stressing the fact that, in biology, taxonomy (i.e., the position of an organism in the tree of life) is ideally based on evolutionary relationships among organisms. Development of a robust bacterial taxonomy has been hindered by an inability to obtain most bacteria in pure culture and, to a lesser extent, by the historical use of phenotypes to guide classification (Parks et al., 2018, Green et al., 2008).
Notwithstanding that, the emerging importance of the study of microbiota (i.e., the pattern of species or higher taxonomic aggregations) in human mucosa (mouth, gut, vagina, ...) in many pathologies makes the obtainment of a meaningful classification urgent. Beside the importance of an evolution based phylogeny, it is perhaps still more crucial (as we stressed in the previous paragraphs) to establish an ecological based taxonomy that not necessarily coincides with the evolutionary one. This is a very common feature in the history of life: organisms that are not phylogenetically related can be very similar due to their common environmental needs. This phenomenon is called evolutionary convergence and is at the basis of well known ‘only phenotypic similarities’ like the features shared by dolphins and some fishes, due to the common needs of marine life, in spite of their lack of shared ancestry. In the case of the definition of an optimal microbial ecology of the gut (or any other mucosa) so to both appreciate disease-associated patterns and try to devise therapeutic strategies, a first step is to find an ecologically relevant phenotypic formalisation of bacteria. Metabolic networks are perfectly fit for this purpose for the simple fact the basic role played by the microbes in the gut is to carry out a metabolic work useful for the host (that can be turned into a damage in the case of an altered microbial ecology).
Before entering this very ambitious issue, in this work we take a preliminary step checking the ability of the proposed approach to recognise ‘established bacterial taxonomic classes’: we were successful in this task and this is a good news. It is worth noting that for very few exceptions (Chlamydia, Pseudomonas, Staphylococcus and Streptomyces) we were able to find a unique diagnostic edge univocally classifying these bacterial classes. On the other hand, for other classes (Campylobacter, Corynebacterium, Helicobacter and Mycoplasma) there are no relevant edges (coherently with the results presented in Section 4.3): this is a further confirmation of the ‘hard character’ of bacterial classification.
In this paper, a novel embedding technique for graphs classification based on ‘relevant edges’ has been investigated. Specifically, by considering the ‘sensitivity’ and the ‘specificity’ of each edge, one can define a score (INDVAL) for each possible edge in the dataset at hand. By properly thresholding the resulting INDVAL scores, one can obtain a subset of relevant (meaningful) edges, on the top of which an embedding space can be built thanks to symbolic histograms. In this work, two classification systems have been compared in order to stress the importance of feature selection (alphabet symbols selection) at classification stage: the former is based on ℓ1 -SVMs which, due to intrinsic 1-norm minimisation, automatically takes care of selecting a suitable subset of alphabet symbols; the latter is based on non-linear ν-SVMs which minimise the 2-norm of the separating hyperplane, hence they do not natively return a sparse solution. For the sake of alphabet selection, the latter classification system is wrapped by a genetic algorithm. It is noteworthy that, in the embedding space, any classification system can be used in lieu of ν-SVMs, any optimisation (meta-)heuristic can be used in lieu of a genetic algorithm and the optimisation can be carried out using different performance indices in lieu of the informedness.
By considering a classification problem defined on the domain P<math><mi mathvariant="bold-script" is="true">P</mi></math> (i.e., graphs whose nodes are labelled with categorical values), it is also worth remarking that the proposed approach for training a classification system can always be applied, regardless of the specific application.10 In order to demonstrate the effectiveness of the proposed embedding, four problems related to metabolic pathways classification at different taxonomical scales have been addressed. In a first test, the entire networks have been compared by means of the Hamming distance using a plain nearest neighbours classifier, showing an almost perfect discrimination amongst different organisms, hence confirming the effectiveness of network-based modelling for metabolic pathways. The very same experiments have been repeated using the embedding space on the top of relevant edges (INDVAL). Even in the embedding space remarkable discrimination results have been obtained, with just a slight performance decay with respect to the former case. These results lead to the following two-fold interpretation: a) the underlying embedding space is able to preserve the majority of the properties of the original space (graphs), hence the proposed embedding procedure is able to fill the semantic gap between the two domains quite well; b) the vast majority of the information is preserved even in case of huge compression (few edges instead of the whole network). In plainer terms, in order to carry metabolic pathways classification, the information in the full adjacency matrix is preserved also by checking whether ‘some important edges’ are present or not in the network. Finally, the INDVAL strategy allows a knowledge discovery phase over relevant edges selected at classification stage and on the top of which the embedding is built: this peculiarity does not hold when using the network as a whole. The INDVAL-based system can further be hybridised by exploiting prior domain knowledge by adding a rule-based (i.e., expert-based) a-priori deletion of edges which are deemed not useful for the problem itself, leaving the proposed strategy to concentrate on promising reactions.
One of the strengths of the proposed approach is that only one parameter needs to be tuned by the end-user, namely the threshold T for the INDVAL values, which determines the tradeoff between the number and the quality of alphabet symbols. On the plus side, since the INDVAL is in range [0, 100], the search space is fairly bounded: this parameter can either be tuned according to some a-priori knowledge (if any), via mono-dimensional grid-search or other search heuristics in order to retrieve the optimal T according to some criteria (e.g., best performances on the validation set). An additional test, therefore, investigated the sensitivity of the proposed system with respect to T, addressing how the discrimination performances change with respect to the alphabet size as a function of T itself.
Future directions will regard the application of this embedding technique for building pattern recognition systems for other non-trivial data structures. Indeed, the INDVAL (hence, the sensitivity and specificity) is not a peculiar characteristic of single edges since they can be evaluated also for n-length paths (2-nodes paths, 3-nodes paths,...). As metabolic pathways are concerned, we expect to be able to discriminate different organisms by considering few walks on the graph (chains of chemical reactions) other than by looking at several single reactions. More generally, this INDVAL-based technique can be computed for any candidate information granule, extracted from supervised data. Indeed, the ‘sensitivity’ and ‘specificity’ are not necessary related to network atomic elements (such as single nodes and edges), as they can also be evaluated for any substructure, for example sequences of adjacent words in the context of text classification.
A last remark has to do with the apparent ‘triviality’ of the problem, suggested by reaching of 100% discrimination that could make the reader to think that we dealt with an ‘easy’ task. First, it is important to stress that the problem is trivial only a-posteriori and only if we intend the basic task as a pure species-by-species discrimination, but this is not the focus of the paper. There are much easier ways to perform such recognition, here the reaching of a 100% discrimination on the sole basis of the metabolic network wiring is a biological relevant result per se. Such result gives the biologist an unparalleled occasion to rely on a universal phenotype (all organisms have a metabolism, only few have blood circulation or swimming activity) that puts together environmental and evolutionary dimensions. The granulation approach (at odds with other methods like K-NN) catches the essential property of metabolism to be organised into chain of chemical reactions that give rise to intermediate level organisation denominated ‘pathways’ that are biologically meaningful per se.
All authors wish to confirm that there are no known conflicts of interest associated with this publication and there has been no significant financial support for this work that could have influenced its outcome.
The following are the supplementary data to this article:Download : Download Acrobat PDF file (511KB)